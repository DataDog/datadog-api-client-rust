name: Run Integration Tests

permissions:
  contents: read

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
      - labeled
      - unlabeled
  schedule:
    - cron: "0 5 * * *"

concurrency:
  group: integration-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  integration_tests:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'pull_request' &&
      github.event.pull_request.draft == false &&
      !contains(github.event.pull_request.labels.*.name, 'ci/skip') &&
      !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/') &&
      contains(github.event.pull_request.labels.*.name, 'ci/integrations')) ||
      github.event_name == 'schedule'
    services:
      datadog-agent:
        image: gcr.io/datadoghq/agent:latest
        ports:
          - 8126:8126
        env:
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
          DD_HOSTNAME: "none"
          DD_INSIDE_CI: "true"
    steps:
      - name: Get GitHub App token
        if: github.event_name == 'pull_request'
        id: get_token
        uses: actions/create-github-app-token@d72941d797fd3113feb6b93fd0dec494b13a2547 # v1.12.0
        with:
          app-id: ${{ secrets.PIPELINE_GITHUB_APP_ID }}
          private-key: ${{ secrets.PIPELINE_GITHUB_APP_PRIVATE_KEY }}
          installation_retrieval_mode: repository
          installation_retrieval_payload: DataDog/datadog-api-spec
      - name: Checkout code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Post pending status check
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
        uses: DataDog/github-actions/post-status-check@65b4875f33ad773d7ba4b005a2cb5f35020295f3 # v2.3.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: pending
          context: integration
      - name: Install Rust
        uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b # v1.0.0
        with:
          toolchain: "stable"
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - name: Run integration tests
        shell: bash
        run: ./run-tests.sh
        env:
          CI: "true"
          DD_AGENT_HOST: localhost
          DD_ENV: prod
          DD_SERVICE: datadog-api-client-rust
          DD_TAGS: "team:integrations-tools-and-libraries"
          DD_TEST_CLIENT_API_KEY: ${{ secrets.DD_CLIENT_API_KEY }}
          DD_TEST_CLIENT_APP_KEY: ${{ secrets.DD_CLIENT_APP_KEY }}
          RECORD: "none"
      - name: Post failure status check
        if: failure() && github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
        uses: DataDog/github-actions/post-status-check@65b4875f33ad773d7ba4b005a2cb5f35020295f3 # v2.3.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: failure
          context: integration
      - name: Post success status check
        if: "!failure() && github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')"
        uses: DataDog/github-actions/post-status-check@65b4875f33ad773d7ba4b005a2cb5f35020295f3 # v2.3.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: success
          context: integration
