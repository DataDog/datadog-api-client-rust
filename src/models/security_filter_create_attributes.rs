/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// SecurityFilterCreateAttributes : Object containing the attributes of the security filter to be created.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SecurityFilterCreateAttributes {
    /// Exclusion filters to exclude some logs from the security filter.
    #[serde(rename = "exclusion_filters")]
    pub exclusion_filters: Vec<crate::models::SecurityFilterExclusionFilter>,
    #[serde(rename = "filtered_data_type")]
    pub filtered_data_type: crate::models::SecurityFilterFilteredDataType,
    /// Whether the security filter is enabled.
    #[serde(rename = "is_enabled")]
    pub is_enabled: bool,
    /// The name of the security filter.
    #[serde(rename = "name")]
    pub name: String,
    /// The query of the security filter.
    #[serde(rename = "query")]
    pub query: String,
}

impl SecurityFilterCreateAttributes {
    /// Object containing the attributes of the security filter to be created.
    pub fn new(exclusion_filters: Vec<crate::models::SecurityFilterExclusionFilter>, filtered_data_type: crate::models::SecurityFilterFilteredDataType, is_enabled: bool, name: String, query: String) -> SecurityFilterCreateAttributes {
        SecurityFilterCreateAttributes {
            exclusion_filters,
            filtered_data_type,
            is_enabled,
            name,
            query,
        }
    }
}


