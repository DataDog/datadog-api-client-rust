/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// ServiceDefinitionV1Info : Basic information about a service.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ServiceDefinitionV1Info {
    /// Unique identifier of the service. Must be unique across all services and is used to match with a service in Datadog.
    #[serde(rename = "dd-service")]
    pub dd_service: String,
    /// A short description of the service.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// A friendly name of the service.
    #[serde(rename = "display-name", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// Service tier.
    #[serde(rename = "service-tier", skip_serializing_if = "Option::is_none")]
    pub service_tier: Option<String>,
}

impl ServiceDefinitionV1Info {
    /// Basic information about a service.
    pub fn new(dd_service: String) -> ServiceDefinitionV1Info {
        ServiceDefinitionV1Info {
            dd_service,
            description: None,
            display_name: None,
            service_tier: None,
        }
    }
}


