/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// IncidentSearchResponseFacetsData : Facet data for incidents returned by a search query.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IncidentSearchResponseFacetsData {
    /// Facet data for incident commander users.
    #[serde(rename = "commander", skip_serializing_if = "Option::is_none")]
    pub commander: Option<Vec<crate::models::IncidentSearchResponseUserFacetData>>,
    /// Facet data for incident creator users.
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Vec<crate::models::IncidentSearchResponseUserFacetData>>,
    /// Facet data for incident property fields.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<crate::models::IncidentSearchResponsePropertyFieldFacetData>>,
    /// Facet data for incident impact attributes.
    #[serde(rename = "impact", skip_serializing_if = "Option::is_none")]
    pub impact: Option<Vec<crate::models::IncidentSearchResponseFieldFacetData>>,
    /// Facet data for incident last modified by users.
    #[serde(rename = "last_modified_by", skip_serializing_if = "Option::is_none")]
    pub last_modified_by: Option<Vec<crate::models::IncidentSearchResponseUserFacetData>>,
    /// Facet data for incident postmortem existence.
    #[serde(rename = "postmortem", skip_serializing_if = "Option::is_none")]
    pub postmortem: Option<Vec<crate::models::IncidentSearchResponseFieldFacetData>>,
    /// Facet data for incident responder users.
    #[serde(rename = "responder", skip_serializing_if = "Option::is_none")]
    pub responder: Option<Vec<crate::models::IncidentSearchResponseUserFacetData>>,
    /// Facet data for incident severity attributes.
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<Vec<crate::models::IncidentSearchResponseFieldFacetData>>,
    /// Facet data for incident state attributes.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<Vec<crate::models::IncidentSearchResponseFieldFacetData>>,
    /// Facet data for incident time to repair metrics.
    #[serde(rename = "time_to_repair", skip_serializing_if = "Option::is_none")]
    pub time_to_repair: Option<Vec<crate::models::IncidentSearchResponseNumericFacetData>>,
    /// Facet data for incident time to resolve metrics.
    #[serde(rename = "time_to_resolve", skip_serializing_if = "Option::is_none")]
    pub time_to_resolve: Option<Vec<crate::models::IncidentSearchResponseNumericFacetData>>,
}

impl IncidentSearchResponseFacetsData {
    /// Facet data for incidents returned by a search query.
    pub fn new() -> IncidentSearchResponseFacetsData {
        IncidentSearchResponseFacetsData {
            commander: None,
            created_by: None,
            fields: None,
            impact: None,
            last_modified_by: None,
            postmortem: None,
            responder: None,
            severity: None,
            state: None,
            time_to_repair: None,
            time_to_resolve: None,
        }
    }
}


