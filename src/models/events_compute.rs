/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// EventsCompute : The instructions for what to compute for this query.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EventsCompute {
    #[serde(rename = "aggregation")]
    pub aggregation: crate::models::EventsAggregation,
    /// Interval for compute in milliseconds.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<i64>,
    /// The \"measure\" attribute on which to perform the computation.
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<String>,
}

impl EventsCompute {
    /// The instructions for what to compute for this query.
    pub fn new(aggregation: crate::models::EventsAggregation) -> EventsCompute {
        EventsCompute {
            aggregation,
            interval: None,
            metric: None,
        }
    }
}


