/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsArchiveAttributes : The attributes associated with the archive.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LogsArchiveAttributes {
    #[serde(rename = "destination", deserialize_with = "Option::deserialize")]
    pub destination: Option<Box<crate::models::LogsArchiveDestination>>,
    /// To store the tags in the archive, set the value \"true\". If it is set to \"false\", the tags will be deleted when the logs are sent to the archive.
    #[serde(rename = "include_tags", skip_serializing_if = "Option::is_none")]
    pub include_tags: Option<bool>,
    /// The archive name.
    #[serde(rename = "name")]
    pub name: String,
    /// The archive query/filter. Logs matching this query are included in the archive.
    #[serde(rename = "query")]
    pub query: String,
    /// Maximum scan size for rehydration from this archive.
    #[serde(rename = "rehydration_max_scan_size_in_gb", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rehydration_max_scan_size_in_gb: Option<Option<i64>>,
    /// An array of tags to add to rehydrated logs from an archive.
    #[serde(rename = "rehydration_tags", skip_serializing_if = "Option::is_none")]
    pub rehydration_tags: Option<Vec<String>>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<crate::models::LogsArchiveState>,
}

impl LogsArchiveAttributes {
    /// The attributes associated with the archive.
    pub fn new(destination: Option<crate::models::LogsArchiveDestination>, name: String, query: String) -> LogsArchiveAttributes {
        LogsArchiveAttributes {
            destination: if let Some(x) = destination {Some(Box::new(x))} else {None},
            include_tags: None,
            name,
            query,
            rehydration_max_scan_size_in_gb: None,
            rehydration_tags: None,
            state: None,
        }
    }
}


