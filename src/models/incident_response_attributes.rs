/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// IncidentResponseAttributes : The incident's attributes from a response.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IncidentResponseAttributes {
    /// Timestamp when the incident was created.
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    /// Length of the incident's customer impact in seconds. Equals the difference between `customer_impact_start` and `customer_impact_end`.
    #[serde(rename = "customer_impact_duration", skip_serializing_if = "Option::is_none")]
    pub customer_impact_duration: Option<i64>,
    /// Timestamp when customers were no longer impacted by the incident.
    #[serde(rename = "customer_impact_end", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub customer_impact_end: Option<Option<String>>,
    /// A summary of the impact customers experienced during the incident.
    #[serde(rename = "customer_impact_scope", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub customer_impact_scope: Option<Option<String>>,
    /// Timestamp when customers began being impacted by the incident.
    #[serde(rename = "customer_impact_start", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub customer_impact_start: Option<Option<String>>,
    /// A flag indicating whether the incident caused customer impact.
    #[serde(rename = "customer_impacted", skip_serializing_if = "Option::is_none")]
    pub customer_impacted: Option<bool>,
    /// Timestamp when the incident was detected.
    #[serde(rename = "detected", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub detected: Option<Option<String>>,
    /// A condensed view of the user-defined fields attached to incidents.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<::std::collections::HashMap<String, crate::models::IncidentFieldAttributes>>,
    /// Timestamp when the incident was last modified.
    #[serde(rename = "modified", skip_serializing_if = "Option::is_none")]
    pub modified: Option<String>,
    /// Notification handles that will be notified of the incident during update.
    #[serde(rename = "notification_handles", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub notification_handles: Option<Option<Vec<crate::models::IncidentNotificationHandle>>>,
    /// The monotonically increasing integer ID for the incident.
    #[serde(rename = "public_id", skip_serializing_if = "Option::is_none")]
    pub public_id: Option<i64>,
    /// Timestamp when the incident's state was last changed from active or stable to resolved or completed.
    #[serde(rename = "resolved", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub resolved: Option<Option<String>>,
    /// The amount of time in seconds to detect the incident. Equals the difference between `customer_impact_start` and `detected`.
    #[serde(rename = "time_to_detect", skip_serializing_if = "Option::is_none")]
    pub time_to_detect: Option<i64>,
    /// The amount of time in seconds to call incident after detection. Equals the difference of `detected` and `created`.
    #[serde(rename = "time_to_internal_response", skip_serializing_if = "Option::is_none")]
    pub time_to_internal_response: Option<i64>,
    /// The amount of time in seconds to resolve customer impact after detecting the issue. Equals the difference between `customer_impact_end` and `detected`.
    #[serde(rename = "time_to_repair", skip_serializing_if = "Option::is_none")]
    pub time_to_repair: Option<i64>,
    /// The amount of time in seconds to resolve the incident after it was created. Equals the difference between `created` and `resolved`.
    #[serde(rename = "time_to_resolve", skip_serializing_if = "Option::is_none")]
    pub time_to_resolve: Option<i64>,
    /// The title of the incident, which summarizes what happened.
    #[serde(rename = "title")]
    pub title: String,
}

impl IncidentResponseAttributes {
    /// The incident's attributes from a response.
    pub fn new(title: String) -> IncidentResponseAttributes {
        IncidentResponseAttributes {
            created: None,
            customer_impact_duration: None,
            customer_impact_end: None,
            customer_impact_scope: None,
            customer_impact_start: None,
            customer_impacted: None,
            detected: None,
            fields: None,
            modified: None,
            notification_handles: None,
            public_id: None,
            resolved: None,
            time_to_detect: None,
            time_to_internal_response: None,
            time_to_repair: None,
            time_to_resolve: None,
            title,
        }
    }
}


