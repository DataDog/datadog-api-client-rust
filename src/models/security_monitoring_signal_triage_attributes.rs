/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// SecurityMonitoringSignalTriageAttributes : Attributes describing a triage state update operation over a security signal.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SecurityMonitoringSignalTriageAttributes {
    /// Optional comment to display on archived signals.
    #[serde(rename = "archive_comment", skip_serializing_if = "Option::is_none")]
    pub archive_comment: Option<String>,
    /// Timestamp of the last edit to the comment.
    #[serde(rename = "archive_comment_timestamp", skip_serializing_if = "Option::is_none")]
    pub archive_comment_timestamp: Option<i64>,
    #[serde(rename = "archive_comment_user", skip_serializing_if = "Option::is_none")]
    pub archive_comment_user: Option<Box<crate::models::SecurityMonitoringTriageUser>>,
    #[serde(rename = "archive_reason", skip_serializing_if = "Option::is_none")]
    pub archive_reason: Option<crate::models::SecurityMonitoringSignalArchiveReason>,
    #[serde(rename = "assignee")]
    pub assignee: Box<crate::models::SecurityMonitoringTriageUser>,
    /// Array of incidents that are associated with this signal.
    #[serde(rename = "incident_ids")]
    pub incident_ids: Vec<i64>,
    #[serde(rename = "state")]
    pub state: crate::models::SecurityMonitoringSignalState,
    /// Timestamp of the last update to the signal state.
    #[serde(rename = "state_update_timestamp", skip_serializing_if = "Option::is_none")]
    pub state_update_timestamp: Option<i64>,
    #[serde(rename = "state_update_user", skip_serializing_if = "Option::is_none")]
    pub state_update_user: Option<Box<crate::models::SecurityMonitoringTriageUser>>,
}

impl SecurityMonitoringSignalTriageAttributes {
    /// Attributes describing a triage state update operation over a security signal.
    pub fn new(assignee: crate::models::SecurityMonitoringTriageUser, incident_ids: Vec<i64>, state: crate::models::SecurityMonitoringSignalState) -> SecurityMonitoringSignalTriageAttributes {
        SecurityMonitoringSignalTriageAttributes {
            archive_comment: None,
            archive_comment_timestamp: None,
            archive_comment_user: None,
            archive_reason: None,
            assignee: Box::new(assignee),
            incident_ids,
            state,
            state_update_timestamp: None,
            state_update_user: None,
        }
    }
}


