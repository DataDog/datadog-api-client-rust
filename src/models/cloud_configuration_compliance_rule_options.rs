/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// CloudConfigurationComplianceRuleOptions : Options for cloud_configuration rules. Fields `resourceType` and `regoRule` are mandatory when managing custom `cloud_configuration` rules. 



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CloudConfigurationComplianceRuleOptions {
    /// Whether the rule is a complex one. Must be set to true if `regoRule.resourceTypes` contains more than one item. Defaults to false. 
    #[serde(rename = "complexRule", skip_serializing_if = "Option::is_none")]
    pub complex_rule: Option<bool>,
    #[serde(rename = "regoRule", skip_serializing_if = "Option::is_none")]
    pub rego_rule: Option<Box<crate::models::CloudConfigurationRegoRule>>,
    /// Main resource type to be checked by the rule. It should be specified again in `regoRule.resourceTypes`. 
    #[serde(rename = "resourceType", skip_serializing_if = "Option::is_none")]
    pub resource_type: Option<String>,
}

impl CloudConfigurationComplianceRuleOptions {
    /// Options for cloud_configuration rules. Fields `resourceType` and `regoRule` are mandatory when managing custom `cloud_configuration` rules. 
    pub fn new() -> CloudConfigurationComplianceRuleOptions {
        CloudConfigurationComplianceRuleOptions {
            complex_rule: None,
            rego_rule: None,
            resource_type: None,
        }
    }
}


