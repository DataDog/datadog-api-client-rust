/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsResponseMetadata : The metadata associated with a request



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LogsResponseMetadata {
    /// The time elapsed in milliseconds
    #[serde(rename = "elapsed", skip_serializing_if = "Option::is_none")]
    pub elapsed: Option<i64>,
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<Box<crate::models::LogsResponseMetadataPage>>,
    /// The identifier of the request
    #[serde(rename = "request_id", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<crate::models::LogsAggregateResponseStatus>,
    /// A list of warnings (non fatal errors) encountered, partial results might be returned if warnings are present in the response.
    #[serde(rename = "warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<crate::models::LogsWarning>>,
}

impl LogsResponseMetadata {
    /// The metadata associated with a request
    pub fn new() -> LogsResponseMetadata {
        LogsResponseMetadata {
            elapsed: None,
            page: None,
            request_id: None,
            status: None,
            warnings: None,
        }
    }
}


