/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// RumEventAttributes : JSON object containing all event attributes and their associated values.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RumEventAttributes {
    /// JSON object of attributes from RUM events.
    #[serde(rename = "attributes", skip_serializing_if = "Option::is_none")]
    pub attributes: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// The name of the application or service generating RUM events. It is used to switch from RUM to APM, so make sure you define the same value when you use both products.
    #[serde(rename = "service", skip_serializing_if = "Option::is_none")]
    pub service: Option<String>,
    /// Array of tags associated with your event.
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    /// Timestamp of your event.
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
}

impl RumEventAttributes {
    /// JSON object containing all event attributes and their associated values.
    pub fn new() -> RumEventAttributes {
        RumEventAttributes {
            attributes: None,
            service: None,
            tags: None,
            timestamp: None,
        }
    }
}


