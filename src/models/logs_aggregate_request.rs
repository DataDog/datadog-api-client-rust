/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// LogsAggregateRequest : The object sent with the request to retrieve a list of logs from your organization.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LogsAggregateRequest {
    /// The list of metrics or timeseries to compute for the retrieved buckets.
    #[serde(rename = "compute", skip_serializing_if = "Option::is_none")]
    pub compute: Option<Vec<crate::models::LogsCompute>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<crate::models::LogsQueryFilter>>,
    /// The rules for the group by
    #[serde(rename = "group_by", skip_serializing_if = "Option::is_none")]
    pub group_by: Option<Vec<crate::models::LogsGroupBy>>,
    #[serde(rename = "options", skip_serializing_if = "Option::is_none")]
    pub options: Option<Box<crate::models::LogsQueryOptions>>,
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<Box<crate::models::LogsAggregateRequestPage>>,
}

impl LogsAggregateRequest {
    /// The object sent with the request to retrieve a list of logs from your organization.
    pub fn new() -> LogsAggregateRequest {
        LogsAggregateRequest {
            compute: None,
            filter: None,
            group_by: None,
            options: None,
            page: None,
        }
    }
}


