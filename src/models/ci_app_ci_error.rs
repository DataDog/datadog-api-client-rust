/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// CiAppCiError : Contains information of the CI error.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CiAppCiError {
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<crate::models::CiAppCiErrorDomain>,
    /// Error message.
    #[serde(rename = "message", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub message: Option<Option<String>>,
    /// The stack trace of the reported errors.
    #[serde(rename = "stack", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub stack: Option<Option<String>>,
    /// Short description of the error type.
    #[serde(rename = "type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<Option<String>>,
}

impl CiAppCiError {
    /// Contains information of the CI error.
    pub fn new() -> CiAppCiError {
        CiAppCiError {
            domain: None,
            message: None,
            stack: None,
            r#type: None,
        }
    }
}


