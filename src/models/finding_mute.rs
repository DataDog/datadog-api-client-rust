/*
 * Datadog API V2 Collection
 *
 * Collection of all Datadog Public endpoints.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@datadoghq.com
 * Generated by: https://openapi-generator.tech
 */

/// FindingMute : Information about the mute status of this finding.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FindingMute {
    /// Additional information about the reason why this finding is muted or unmuted.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The expiration date of the mute or unmute action (Unix ms).
    #[serde(rename = "expiration_date", skip_serializing_if = "Option::is_none")]
    pub expiration_date: Option<i64>,
    /// Whether this finding is muted or unmuted.
    #[serde(rename = "muted", skip_serializing_if = "Option::is_none")]
    pub muted: Option<bool>,
    #[serde(rename = "reason", skip_serializing_if = "Option::is_none")]
    pub reason: Option<crate::models::FindingMuteReason>,
    /// The start of the mute period.
    #[serde(rename = "start_date", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i64>,
    /// The ID of the user who muted or unmuted this finding.
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<String>,
}

impl FindingMute {
    /// Information about the mute status of this finding.
    pub fn new() -> FindingMute {
        FindingMute {
            description: None,
            expiration_date: None,
            muted: None,
            reason: None,
            start_date: None,
            uuid: None,
        }
    }
}


