// Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
// This product includes software developed at Datadog (https://www.datadoghq.com/).
// Copyright 2019-Present Datadog, Inc.

use serde::{Deserialize, Deserializer, Serialize, Serializer};

#[non_exhaustive]
#[derive(Clone, Debug, Eq, PartialEq)]
pub enum VulnerabilityEcosystem {
    PYPI,
    MAVEN,
    NUGET,
    NPM,
    RUBY_GEMS,
    GO,
    PACKAGIST,
    D_DEB,
    RPM,
    APK,
    WINDOWS,
    UnparsedObject(crate::datadog::UnparsedObject),
}

impl ToString for VulnerabilityEcosystem {
    fn to_string(&self) -> String {
        match self {
            Self::PYPI => String::from("PyPI"),
            Self::MAVEN => String::from("Maven"),
            Self::NUGET => String::from("NuGet"),
            Self::NPM => String::from("Npm"),
            Self::RUBY_GEMS => String::from("RubyGems"),
            Self::GO => String::from("Go"),
            Self::PACKAGIST => String::from("Packagist"),
            Self::D_DEB => String::from("Ddeb"),
            Self::RPM => String::from("Rpm"),
            Self::APK => String::from("Apk"),
            Self::WINDOWS => String::from("Windows"),
            Self::UnparsedObject(v) => v.value.to_string(),
        }
    }
}

impl Serialize for VulnerabilityEcosystem {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: Serializer,
    {
        match self {
            Self::UnparsedObject(v) => v.serialize(serializer),
            _ => serializer.serialize_str(self.to_string().as_str()),
        }
    }
}

impl<'de> Deserialize<'de> for VulnerabilityEcosystem {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where
        D: Deserializer<'de>,
    {
        let s: String = String::deserialize(deserializer)?;
        Ok(match s.as_str() {
            "PyPI" => Self::PYPI,
            "Maven" => Self::MAVEN,
            "NuGet" => Self::NUGET,
            "Npm" => Self::NPM,
            "RubyGems" => Self::RUBY_GEMS,
            "Go" => Self::GO,
            "Packagist" => Self::PACKAGIST,
            "Ddeb" => Self::D_DEB,
            "Rpm" => Self::RPM,
            "Apk" => Self::APK,
            "Windows" => Self::WINDOWS,
            _ => Self::UnparsedObject(crate::datadog::UnparsedObject {
                value: serde_json::Value::String(s.into()),
            }),
        })
    }
}
