components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters:
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    SlackAccountNamePathParameter:
      description: Your Slack account name.
      in: path
      name: account_name
      required: true
      schema:
        type: string
    SlackChannelNamePathParameter:
      description: The name of the Slack channel being operated on.
      in: path
      name: channel_name
      required: true
      schema:
        type: string
  requestBodies: {}
  responses:
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  schemas:
    APIErrorResponse:
      description: Error response object.
      properties:
        errors:
          description: Array of errors returned by the API.
          items:
            description: Error description.
            example: Bad Request
            type: string
          type: array
      required:
      - errors
      type: object
    AWSAccount:
      description: Returns the AWS account associated with this integration.
      properties:
        access_key_id:
          description: Your AWS access key ID. Only required if your AWS account is
            a GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        account_specific_namespace_rules:
          additionalProperties:
            description: A list of additional properties.
            type: boolean
          description: 'An object, (in the form `{"namespace1":true/false, "namespace2":true/false}`),

            that enables or disables metric collection for specific AWS namespaces
            for this

            AWS account only.'
          example:
            auto_scaling: false
            opswork: false
          type: object
        cspm_resource_collection_enabled:
          default: false
          description: Whether Datadog collects cloud security posture management
            resources from your AWS account. This includes additional resources not
            covered under the general `resource_collection`.
          example: true
          type: boolean
        excluded_regions:
          description: 'An array of [AWS regions](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints)

            to exclude from metrics collection.'
          example:
          - us-east-1
          - us-west-2
          items:
            description: Regions to exclude.
            type: string
          type: array
        filter_tags:
          description: 'The array of EC2 tags (in the form `key:value`) defines a
            filter that Datadog uses when collecting metrics from EC2.

            Wildcards, such as `?` (for single characters) and `*` (for multiple characters)
            can also be used.

            Only hosts that match one of the defined tags

            will be imported into Datadog. The rest will be ignored.

            Host matching a given tag can also be excluded by adding `!` before the
            tag.

            For example, `env:production,instance-type:c1.*,!region:us-east-1`'
          example:
          - $KEY:$VALUE
          items:
            description: The list of the filter_tags.
            type: string
          type: array
        host_tags:
          description: 'Array of tags (in the form `key:value`) to add to all hosts

            and metrics reporting through this integration.'
          example:
          - $KEY:$VALUE
          items:
            description: The list of the host_tags.
            type: string
          type: array
        metrics_collection_enabled:
          default: true
          description: Whether Datadog collects metrics for this AWS account.
          example: false
          type: boolean
        resource_collection_enabled:
          default: false
          description: Whether Datadog collects a standard set of resources from your
            AWS account.
          example: true
          type: boolean
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
        secret_access_key:
          description: Your AWS secret access key. Only required if your AWS account
            is a GovCloud or China account.
          type: string
      type: object
    AWSAccountAndLambdaRequest:
      description: AWS account ID and Lambda ARN.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        lambda_arn:
          description: ARN of the Datadog Lambda created during the Datadog-Amazon
            Web services Log collection setup.
          example: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          type: string
      required:
      - account_id
      - lambda_arn
      type: object
    AWSAccountCreateResponse:
      description: The Response returned by the AWS Create Account call.
      properties:
        external_id:
          description: AWS external_id.
          type: string
      type: object
    AWSAccountDeleteRequest:
      description: List of AWS accounts to delete.
      properties:
        access_key_id:
          description: Your AWS access key ID. Only required if your AWS account is
            a GovCloud or China account.
          type: string
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        role_name:
          description: Your Datadog role delegation name.
          example: DatadogAWSIntegrationRole
          type: string
      type: object
    AWSAccountListResponse:
      description: List of enabled AWS accounts.
      properties:
        accounts:
          description: List of enabled AWS accounts.
          items:
            $ref: '#/components/schemas/AWSAccount'
          type: array
      type: object
    AWSEventBridgeAccountConfiguration:
      description: The EventBridge configuration for one AWS account.
      properties:
        accountId:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        eventHubs:
          description: Array of AWS event sources associated with this account.
          items:
            $ref: '#/components/schemas/AWSEventBridgeSource'
          type: array
        tags:
          description: 'Array of tags (in the form `key:value`) which are added to
            all hosts

            and metrics reporting through the main AWS integration.'
          example:
          - $KEY:$VALUE
          items:
            description: The list of the host_tags.
            type: string
          type: array
      type: object
    AWSEventBridgeCreateRequest:
      description: An object used to create an EventBridge source.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        create_event_bus:
          description: 'True if Datadog should create the event bus in addition to
            the event

            source. Requires the `events:CreateEventBus` permission.'
          example: true
          type: boolean
        event_generator_name:
          description: 'The given part of the event source name, which is then combined
            with an

            assigned suffix to form the full name.'
          example: app-alerts
          type: string
        region:
          description: The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
      type: object
    AWSEventBridgeCreateResponse:
      description: A created EventBridge source.
      properties:
        event_source_name:
          description: The event source name.
          example: app-alerts-zyxw3210
          type: string
        has_bus:
          description: True if the event bus was created in addition to the source.
          example: true
          type: boolean
        region:
          description: The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
        status:
          $ref: '#/components/schemas/AWSEventBridgeCreateStatus'
      type: object
    AWSEventBridgeCreateStatus:
      description: The event source status "created".
      enum:
      - created
      example: created
      type: string
      x-enum-varnames:
      - CREATED
    AWSEventBridgeDeleteRequest:
      description: An object used to delete an EventBridge source.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        event_generator_name:
          description: The event source name.
          example: app-alerts-zyxw3210
          type: string
        region:
          description: The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          example: us-east-1
          type: string
      type: object
    AWSEventBridgeDeleteResponse:
      description: An indicator of the successful deletion of an EventBridge source.
      properties:
        status:
          $ref: '#/components/schemas/AWSEventBridgeDeleteStatus'
      type: object
    AWSEventBridgeDeleteStatus:
      description: The event source status "empty".
      enum:
      - empty
      example: empty
      type: string
      x-enum-varnames:
      - EMPTY
    AWSEventBridgeListResponse:
      description: An object describing the EventBridge configuration for multiple
        accounts.
      properties:
        accounts:
          description: List of accounts with their event sources.
          items:
            $ref: '#/components/schemas/AWSEventBridgeAccountConfiguration'
          type: array
        isInstalled:
          description: True if the EventBridge sub-integration is enabled for your
            organization.
          type: boolean
      type: object
    AWSEventBridgeSource:
      description: An EventBridge source.
      properties:
        name:
          description: The event source name.
          type: string
        region:
          description: The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
          type: string
      type: object
    AWSLogsAsyncError:
      description: Description of errors.
      properties:
        code:
          description: Code properties
          example: no_such_config
          type: string
        message:
          description: Message content.
          example: AWS account 12345 has no lambda config to update
          type: string
      type: object
    AWSLogsAsyncResponse:
      description: A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      properties:
        errors:
          description: List of errors.
          items:
            $ref: '#/components/schemas/AWSLogsAsyncError'
          type: array
        status:
          description: Status of the properties.
          example: created
          type: string
      type: object
    AWSLogsLambda:
      description: Description of the Lambdas.
      properties:
        arn:
          description: Available ARN IDs.
          type: string
      type: object
    AWSLogsListResponse:
      description: A list of all Datadog-AWS logs integrations available in your Datadog
        organization.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        lambdas:
          description: List of ARNs configured in your Datadog account.
          example:
          - arn: arn:aws:lambda:us-east-1:1234567:function:LogsCollectionAPITest
          items:
            $ref: '#/components/schemas/AWSLogsLambda'
          type: array
        services:
          description: Array of services IDs.
          example:
          - s3
          - elb
          - elbv2
          - cloudfront
          - redshift
          - lambda
          items:
            description: Description of the services.
            type: string
          type: array
      type: object
    AWSLogsListServicesResponse:
      description: The list of current AWS services for which Datadog offers automatic
        log collection.
      properties:
        id:
          description: Key value in returned object.
          example: s3
          type: string
        label:
          description: Name of service available for configuration with Datadog logs.
          example: S3 Access Logs
          type: string
      type: object
    AWSLogsServicesRequest:
      description: A list of current AWS services for which Datadog offers automatic
        log collection.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '1234567'
          type: string
        services:
          description: Array of services IDs set to enable automatic log collection.
            Discover the list of available services with the get list of AWS log ready
            services API endpoint.
          example:
          - s3
          - elb
          - elbv2
          - cloudfront
          - redshift
          - lambda
          items:
            description: Description of services.
            type: string
          type: array
      required:
      - account_id
      - services
      type: object
    AWSNamespace:
      description: The namespace associated with the tag filter entry.
      enum:
      - elb
      - application_elb
      - sqs
      - rds
      - custom
      - network_elb
      - lambda
      type: string
      x-enum-varnames:
      - ELB
      - APPLICATION_ELB
      - SQS
      - RDS
      - CUSTOM
      - NETWORK_ELB
      - LAMBDA
    AWSTagFilter:
      description: A tag filter.
      properties:
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterCreateRequest:
      description: The objects used to set an AWS tag filter.
      properties:
        account_id:
          description: Your AWS Account ID without dashes.
          example: '123456789012'
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
        tag_filter_str:
          description: The tag filter string.
          example: prod*
          type: string
      type: object
    AWSTagFilterDeleteRequest:
      description: The objects used to delete an AWS tag filter entry.
      properties:
        account_id:
          description: The unique identifier of your AWS account.
          example: FAKEAC0FAKEAC2FAKEAC
          type: string
        namespace:
          $ref: '#/components/schemas/AWSNamespace'
      type: object
    AWSTagFilterListResponse:
      description: An array of tag filter rules by `namespace` and tag filter string.
      properties:
        filters:
          description: An array of tag filters.
          items:
            $ref: '#/components/schemas/AWSTagFilter'
          type: array
      type: object
    AccessRole:
      description: The access role of the user. Options are **st** (standard user),
        **adm** (admin user), or **ro** (read-only user).
      enum:
      - st
      - adm
      - ro
      - ERROR
      example: ro
      nullable: true
      type: string
      x-enum-varnames:
      - STANDARD
      - ADMIN
      - READ_ONLY
      - ERROR
    AddSignalToIncidentRequest:
      description: Attributes describing which incident to add the signal to.
      properties:
        add_to_signal_timeline:
          description: Whether to post the signal on the incident timeline.
          type: boolean
        incident_id:
          description: Public ID attribute of the incident to which the signal will
            be added.
          example: 2066
          format: int64
          type: integer
        version:
          $ref: '#/components/schemas/Version'
      required:
      - incident_id
      type: object
    AgentCheck:
      description: Array of strings.
      example:
      - ntp
      - ntp
      - ntp:d884b5186b651429
      - OK
      - ''
      - ''
      items:
        description: Agent check running on the host.
      type: array
    ApiKey:
      description: Datadog API key.
      properties:
        created:
          description: Date of creation of the API key.
          example: '2019-08-02 15:31:07'
          readOnly: true
          type: string
        created_by:
          description: Datadog user handle that created the API key.
          example: john@example.com
          readOnly: true
          type: string
        key:
          description: API key.
          example: 1234512345123456abcabc912349abcd
          maxLength: 32
          minLength: 32
          readOnly: true
          type: string
        name:
          description: Name of your API key.
          example: example user
          type: string
      type: object
    ApiKeyListResponse:
      description: List of API and application keys available for a given organization.
      example:
        api_keys:
        - created_by: test_user
          key: 1234512345123456abcabc912349abcd
          name: app_key
      properties:
        api_keys:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/ApiKey'
          type: array
      type: object
    ApiKeyResponse:
      description: An API key with its associated metadata.
      example:
        api_key:
          created_by: test_user
          key: 1234512345123456abcabc912349abcd
          name: app_key
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
      type: object
    ApplicationKey:
      description: An application key with its associated metadata.
      properties:
        hash:
          description: Hash of an application key.
          example: 1234512345123459cda4eb9ced49a3d84fd0138c
          maxLength: 40
          minLength: 40
          readOnly: true
          type: string
        name:
          description: Name of an application key.
          example: example user
          type: string
        owner:
          description: Owner of an application key.
          example: example.com
          readOnly: true
          type: string
      type: object
    ApplicationKeyListResponse:
      description: An application key response.
      example:
        application_keys:
        - hash: 1234512345123459cda4eb9ced49a3d84fd0138c
          name: app_key
          owner: test_user
      properties:
        application_keys:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/ApplicationKey'
          type: array
      type: object
    ApplicationKeyResponse:
      description: An application key response.
      example:
        application_key:
          hash: 1234512345123459cda4eb9ced49a3d84fd0138c
          name: app_key
          owner: test_user
      properties:
        application_key:
          $ref: '#/components/schemas/ApplicationKey'
      type: object
    AuthenticationValidationResponse:
      description: Represent validation endpoint responses.
      properties:
        valid:
          description: Return `true` if the authentication response is valid.
          example: true
          readOnly: true
          type: boolean
      type: object
    AzureAccount:
      description: Datadog-Azure integrations configured for your organization.
      properties:
        app_service_plan_filters:
          description: 'Limit the Azure app service plans that are pulled into Datadog
            using tags.

            Only app service plans that match one of the defined tags are imported
            into Datadog.'
          example: key:value,filter:example
          type: string
        automute:
          description: Silence monitors for expected Azure VM shutdowns.
          example: true
          type: boolean
        client_id:
          description: Your Azure web application ID.
          example: testc7f6-1234-5678-9101-3fcbf464test
          type: string
        client_secret:
          description: Your Azure web application secret key.
          example: testingx./Sw*g/Y33t..R1cH+hScMDt
          type: string
        container_app_filters:
          description: 'Limit the Azure container apps that are pulled into Datadog
            using tags.

            Only container apps that match one of the defined tags are imported into
            Datadog.'
          example: key:value,filter:example
          type: string
        cspm_enabled:
          description: Enable Cloud Security Management Misconfigurations for your
            organization.
          example: true
          type: boolean
        custom_metrics_enabled:
          description: Enable custom metrics for your organization.
          example: true
          type: boolean
        errors:
          description: Errors in your configuration.
          example:
          - '*'
          items:
            description: List of errors.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: 'Limit the Azure instances that are pulled into Datadog by
            using tags.

            Only hosts that match one of the defined tags are imported into Datadog.'
          example: key:value,filter:example
          type: string
        new_client_id:
          description: Your New Azure web application ID.
          example: new1c7f6-1234-5678-9101-3fcbf464test
          type: string
        new_tenant_name:
          description: Your New Azure Active Directory ID.
          example: new1c44-1234-5678-9101-cc00736ftest
          type: string
        tenant_name:
          description: Your Azure Active Directory ID.
          example: testc44-1234-5678-9101-cc00736ftest
          type: string
      type: object
    AzureAccountListResponse:
      description: Accounts configured for your organization.
      items:
        $ref: '#/components/schemas/AzureAccount'
      type: array
    CancelDowntimesByScopeRequest:
      description: Cancel downtimes according to scope.
      properties:
        scope:
          description: 'The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided scopes
            (`env:dev` **AND** `env:prod`).'
          example: host:myserver
          type: string
      required:
      - scope
      type: object
    CanceledDowntimesIds:
      description: Object containing array of IDs of canceled downtimes.
      properties:
        cancelled_ids:
          description: ID of downtimes that were canceled.
          example:
          - 123456789
          - 123456790
          items:
            description: Integer representation of one downtime ID.
            format: int64
            type: integer
          type: array
      type: object
    CheckCanDeleteSLOResponse:
      description: A service level objective response containing the requested object.
      properties:
        data:
          $ref: '#/components/schemas/CheckCanDeleteSLOResponseData'
        errors:
          additionalProperties:
            description: Description of the service level objective reference.
            type: string
          description: A mapping of SLO id to it's current usages.
          type: object
      type: object
    CheckCanDeleteSLOResponseData:
      description: An array of service level objective objects.
      properties:
        ok:
          description: An array of of SLO IDs that can be safely deleted.
          items:
            description: An SLO ID.
            type: string
          type: array
      type: object
    ContentEncoding:
      description: HTTP header used to compress the media-type.
      enum:
      - gzip
      - deflate
      type: string
      x-enum-varnames:
      - GZIP
      - DEFLATE
    Creator:
      description: Object describing the creator of the shared element.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          nullable: true
          type: string
      readOnly: true
      type: object
    DashboardList:
      description: Your Datadog Dashboards.
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        dashboard_count:
          description: The number of dashboards in the list.
          format: int64
          readOnly: true
          type: integer
        id:
          description: The ID of the dashboard list.
          format: int64
          readOnly: true
          type: integer
        is_favorite:
          description: Whether or not the list is in the favorites.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard list.
          format: date-time
          readOnly: true
          type: string
        name:
          description: The name of the dashboard list.
          example: My Dashboard
          type: string
        type:
          description: The type of dashboard list.
          example: manual_dashboard_list
          readOnly: true
          type: string
      required:
      - name
      type: object
    DashboardListDeleteResponse:
      description: Deleted dashboard details.
      properties:
        deleted_dashboard_list_id:
          description: ID of the deleted dashboard list.
          format: int64
          type: integer
      type: object
    DashboardListListResponse:
      description: Information on your dashboard lists.
      properties:
        dashboard_lists:
          description: List of all your dashboard lists.
          items:
            $ref: '#/components/schemas/DashboardList'
          type: array
      type: object
    Downtime:
      description: 'Downtiming gives you greater control over monitor notifications
        by

        allowing you to globally exclude scopes from alerting.

        Downtime settings, which can be scheduled with start and end times,

        prevent all alerting related to specified Datadog tags.'
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        active_child:
          $ref: '#/components/schemas/DowntimeChild'
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: '`0` for a downtime applied on `*` or all,

            `1` when the downtime is only scoped to hosts,

            or `2` when the downtime is scoped to anything but hosts.'
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: 'POSIX timestamp to end the downtime. If not provided,

            the downtime is in effect indefinitely until you cancel it.'
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1625
          format: int64
          readOnly: true
          type: integer
        message:
          description: 'A message to include with notifications for this downtime.

            Email notifications can be sent to specific users by using the same `@username`
            notation as events.'
          example: Message on the downtime
          nullable: true
          type: string
        monitor_id:
          description: 'A single monitor to which the downtime applies.

            If not provided, the downtime applies to all monitors.'
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: 'A comma-separated list of monitor tags. For example, tags
            that are applied directly to monitors,

            not tags that are used in monitor queries (which are filtered by the scope
            parameter), to which the downtime applies.

            The resulting downtime applies to monitors that match ALL provided monitor
            tags.

            For example, `service:postgres` **AND** `team:frontend`.'
          example:
          - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        mute_first_recovery_notification:
          description: If the first recovery notification during a downtime should
            be muted.
          example: false
          type: boolean
        notify_end_states:
          $ref: '#/components/schemas/NotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/NotifyEndTypes'
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: 'The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided scopes
            (`env:dev` **AND** `env:prod`).'
          example:
          - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: 'POSIX timestamp to start the downtime.

            If not provided, the downtime starts the moment it is created.'
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: The timezone in which to display the downtime's start and end
            times in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      type: object
    DowntimeChild:
      description: 'The downtime object definition of the active child for the original
        parent recurring downtime. This

        field will only exist on recurring downtimes.'
      nullable: true
      properties:
        active:
          description: If a scheduled downtime currently exists.
          example: true
          readOnly: true
          type: boolean
        canceled:
          description: If a scheduled downtime is canceled.
          example: 1412799983
          format: int64
          nullable: true
          readOnly: true
          type: integer
        creator_id:
          description: User ID of the downtime creator.
          example: 123456
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        disabled:
          description: If a downtime has been disabled.
          example: false
          type: boolean
        downtime_type:
          description: '`0` for a downtime applied on `*` or all,

            `1` when the downtime is only scoped to hosts,

            or `2` when the downtime is scoped to anything but hosts.'
          example: 2
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        end:
          description: 'POSIX timestamp to end the downtime. If not provided,

            the downtime is in effect indefinitely until you cancel it.'
          example: 1412793983
          format: int64
          nullable: true
          type: integer
        id:
          description: The downtime ID.
          example: 1626
          format: int64
          readOnly: true
          type: integer
        message:
          description: 'A message to include with notifications for this downtime.

            Email notifications can be sent to specific users by using the same `@username`
            notation as events.'
          example: Message on the downtime
          nullable: true
          type: string
        monitor_id:
          description: 'A single monitor to which the downtime applies.

            If not provided, the downtime applies to all monitors.'
          example: 123456
          format: int64
          nullable: true
          type: integer
        monitor_tags:
          description: 'A comma-separated list of monitor tags. For example, tags
            that are applied directly to monitors,

            not tags that are used in monitor queries (which are filtered by the scope
            parameter), to which the downtime applies.

            The resulting downtime applies to monitors that match ALL provided monitor
            tags.

            For example, `service:postgres` **AND** `team:frontend`.'
          example:
          - '*'
          items:
            description: A monitor tag.
            type: string
          type: array
        mute_first_recovery_notification:
          description: If the first recovery notification during a downtime should
            be muted.
          example: false
          type: boolean
        notify_end_states:
          $ref: '#/components/schemas/NotifyEndStates'
        notify_end_types:
          $ref: '#/components/schemas/NotifyEndTypes'
        parent_id:
          description: ID of the parent Downtime.
          example: 123
          format: int64
          nullable: true
          type: integer
        recurrence:
          $ref: '#/components/schemas/DowntimeRecurrence'
        scope:
          description: 'The scope(s) to which the downtime applies and must be in
            `key:value` format. For example, `host:app2`.

            Provide multiple scopes as a comma-separated list like `env:dev,env:prod`.

            The resulting downtime applies to sources that matches ALL provided scopes
            (`env:dev` **AND** `env:prod`).'
          example:
          - env:staging
          items:
            description: A scope. For example, `"env:staging"`.
            type: string
          type: array
        start:
          description: 'POSIX timestamp to start the downtime.

            If not provided, the downtime starts the moment it is created.'
          example: 1412792983
          format: int64
          type: integer
        timezone:
          description: The timezone in which to display the downtime's start and end
            times in Datadog applications.
          example: America/New_York
          type: string
        updater_id:
          description: ID of the last user that updated the downtime.
          example: 123456
          format: int32
          maximum: 2147483647
          nullable: true
          readOnly: true
          type: integer
      readOnly: true
      type: object
    DowntimeRecurrence:
      description: An object defining the recurrence of the downtime.
      nullable: true
      properties:
        period:
          description: 'How often to repeat as an integer.

            For example, to repeat every 3 days, select a type of `days` and a period
            of `3`.'
          example: 1
          format: int32
          maximum: 2147483647
          type: integer
        rrule:
          description: 'The `RRULE` standard for defining recurring events (**requires
            to set "type" to rrule**)

            For example, to have a recurring event on the first day of each month,
            set the type to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY`
            to `1`.

            Most common `rrule` options from the [iCalendar Spec](https://tools.ietf.org/html/rfc5545)
            are supported.


            **Note**: Attributes specifying the duration in `RRULE` are not supported
            (for example, `DTSTART`, `DTEND`, `DURATION`).

            More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api)'
          example: FREQ=MONTHLY;BYSETPOS=3;BYDAY=WE;INTERVAL=1
          type: string
        type:
          description: The type of recurrence. Choose from `days`, `weeks`, `months`,
            `years`, `rrule`.
          example: weeks
          type: string
        until_date:
          description: 'The date at which the recurrence should end as a POSIX timestamp.

            `until_occurences` and `until_date` are mutually exclusive.'
          example: 1447786293
          format: int64
          nullable: true
          type: integer
        until_occurrences:
          description: 'How many times the downtime is rescheduled.

            `until_occurences` and `until_date` are mutually exclusive.'
          example: 2
          format: int32
          maximum: 2147483647
          nullable: true
          type: integer
        week_days:
          description: 'A list of week days to repeat on. Choose from `Mon`, `Tue`,
            `Wed`, `Thu`, `Fri`, `Sat` or `Sun`.

            Only applicable when type is weeks. First letter must be capitalized.'
          example:
          - Mon
          - Tue
          items:
            description: A day of the week, formatted as `Mon`, `Tue`, `Wed`, `Thu`,
              `Fri`, `Sat` or `Sun`.
            type: string
          nullable: true
          type: array
      type: object
    Event:
      description: Object representing an event.
      properties:
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: 'POSIX timestamp of the event. Must be sent as an integer (that
            is no quotes).

            Limited to events no older than 18 hours.'
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: 'Host name to associate with the event.

            Any tags associated with the host are also applied to this event.'
          type: string
        id:
          description: Integer ID of the event.
          format: int64
          readOnly: true
          type: integer
        id_str:
          description: 'Handling IDs as large 64-bit numbers can cause loss of accuracy
            issues with some programming languages.

            Instead, use the string representation of the Event ID to avoid losing
            accuracy.'
          readOnly: true
          type: string
        payload:
          description: Payload of the event.
          example: '{}'
          readOnly: true
          type: string
        priority:
          $ref: '#/components/schemas/EventPriority'
        source_type_name:
          description: 'The type of event being posted. Option examples include nagios,
            hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.

            The list of standard source attribute values [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
          - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: 'The body of the event. Limited to 4000 characters. The text
            supports markdown.

            To use markdown in the event text, start the text block with `%%% \n`
            and end the text block with `\n %%%`.

            Use `msg_text` with the Datadog Ruby library.'
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title.
          example: Did you hear the news today?
          type: string
        url:
          description: URL of the event.
          readOnly: true
          type: string
      type: object
    EventAlertType:
      description: 'If an alert event is enabled, set its type.

        For example, `error`, `warning`, `info`, `success`, `user_update`,

        `recommendation`, and `snapshot`.'
      enum:
      - error
      - warning
      - info
      - success
      - user_update
      - recommendation
      - snapshot
      example: info
      type: string
      x-enum-varnames:
      - ERROR
      - WARNING
      - INFO
      - SUCCESS
      - USER_UPDATE
      - RECOMMENDATION
      - SNAPSHOT
    EventCreateRequest:
      description: Object representing an event.
      properties:
        aggregation_key:
          description: 'An arbitrary string to use for aggregation. Limited to 100
            characters.

            If you specify a key, all events using that key are grouped together in
            the Event Stream.'
          maxLength: 100
          type: string
        alert_type:
          $ref: '#/components/schemas/EventAlertType'
        date_happened:
          description: 'POSIX timestamp of the event. Must be sent as an integer (that
            is no quotes).

            Limited to events no older than 18 hours'
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        host:
          description: 'Host name to associate with the event.

            Any tags associated with the host are also applied to this event.'
          type: string
        priority:
          $ref: '#/components/schemas/EventPriority'
        related_event_id:
          description: ID of the parent event. Must be sent as an integer (that is
            no quotes).
          format: int64
          type: integer
        source_type_name:
          description: 'The type of event being posted. Option examples include nagios,
            hudson, jenkins, my_apps, chef, puppet, git, bitbucket, etc.

            A complete list of source attribute values [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'
          type: string
        tags:
          description: A list of tags to apply to the event.
          example:
          - environment:test
          items:
            description: A tag.
            type: string
          type: array
        text:
          description: 'The body of the event. Limited to 4000 characters. The text
            supports markdown.

            To use markdown in the event text, start the text block with `%%% \n`
            and end the text block with `\n %%%`.

            Use `msg_text` with the Datadog Ruby library.'
          example: Oh boy!
          maxLength: 4000
          type: string
        title:
          description: The event title.
          example: Did you hear the news today?
          type: string
      required:
      - title
      - text
      type: object
    EventCreateResponse:
      description: Object containing an event response.
      properties:
        event:
          $ref: '#/components/schemas/Event'
        status:
          description: A status.
          type: string
      type: object
    EventListResponse:
      description: An event list response.
      properties:
        events:
          description: An array of events.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        status:
          description: A status.
          type: string
      type: object
    EventPriority:
      description: The priority of the event. For example, `normal` or `low`.
      enum:
      - normal
      - low
      example: normal
      nullable: true
      type: string
      x-enum-varnames:
      - NORMAL
      - LOW
    EventResponse:
      description: Object containing an event response.
      properties:
        event:
          $ref: '#/components/schemas/Event'
        status:
          description: A status.
          type: string
      type: object
    GCPAccount:
      description: Your Google Cloud Platform Account.
      properties:
        auth_provider_x509_cert_url:
          description: Should be `https://www.googleapis.com/oauth2/v1/certs`.
          example: https://www.googleapis.com/oauth2/v1/certs
          type: string
        auth_uri:
          description: Should be `https://accounts.google.com/o/oauth2/auth`.
          example: https://accounts.google.com/o/oauth2/auth
          type: string
        automute:
          description: Silence monitors for expected GCE instance shutdowns.
          type: boolean
        client_email:
          description: Your email found in your JSON service account key.
          example: api-dev@datadog-sandbox.iam.gserviceaccount.com
          type: string
        client_id:
          description: Your ID found in your JSON service account key.
          example: '123456712345671234567'
          type: string
        client_x509_cert_url:
          description: 'Should be `https://www.googleapis.com/robot/v1/metadata/x509/$CLIENT_EMAIL`

            where `$CLIENT_EMAIL` is the email found in your JSON service account
            key.'
          example: https://www.googleapis.com/robot/v1/metadata/x509/$CLIENT_EMAIL
          type: string
        errors:
          description: An array of errors.
          example:
          - '*'
          items:
            description: String representation of one error.
            readOnly: true
            type: string
          type: array
        host_filters:
          description: 'Limit the GCE instances that are pulled into Datadog by using
            tags.

            Only hosts that match one of the defined tags are imported into Datadog.'
          example: key:value,filter:example
          type: string
        is_cspm_enabled:
          default: false
          description: When enabled, Datadog performs configuration checks across
            your Google Cloud environment by continuously scanning every resource.
          example: true
          type: boolean
        private_key:
          description: Your private key name found in your JSON service account key.
          example: private_key
          type: string
        private_key_id:
          description: Your private key ID found in your JSON service account key.
          example: 123456789abcdefghi123456789abcdefghijklm
          type: string
        project_id:
          description: Your Google Cloud project ID found in your JSON service account
            key.
          example: datadog-apitest
          type: string
        token_uri:
          description: Should be `https://accounts.google.com/o/oauth2/token`.
          example: https://accounts.google.com/o/oauth2/token
          type: string
        type:
          description: The value for service_account found in your JSON service account
            key.
          example: service_account
          type: string
      type: object
    GCPAccountListResponse:
      description: Array of GCP account responses.
      items:
        $ref: '#/components/schemas/GCPAccount'
      type: array
    GraphSnapshot:
      description: Object representing a graph snapshot.
      properties:
        graph_def:
          description: 'A JSON document defining the graph. `graph_def` can be used
            instead of `metric_query`.

            The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)

            and should be formatted to a single line then URL encoded.'
          type: string
        metric_query:
          description: The metric query. One of `metric_query` or `graph_def` is required.
          type: string
        snapshot_url:
          description: URL of your [graph snapshot](https://docs.datadoghq.com/metrics/explorer/#snapshot).
          example: https://app.datadoghq.com/s/f12345678/aaa-bbb-ccc
          type: string
      type: object
    HTTPLog:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItem'
      type: array
    HTTPLogError:
      description: Invalid query performed.
      properties:
        code:
          description: Error code.
          example: 0
          format: int32
          maximum: 2147483647
          type: integer
        message:
          description: Error message.
          example: Your browser sent an invalid request.
          type: string
      required:
      - code
      - message
      type: object
    HTTPLogItem:
      additionalProperties:
        description: Additional log attributes.
        type: string
      description: Logs that are sent over HTTP.
      properties:
        ddsource:
          description: 'The integration name associated with your log: the technology
            from which the log originated.

            When it matches an integration name, Datadog automatically installs the
            corresponding parsers and facets.

            See [reserved attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).'
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: 'The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message attribute
            as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where it
            is indexed for full text search.'
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: 'The name of the application or service generating the log
            events.

            It is used to switch from Logs to APM, so make sure you define the same
            value when you use both products.

            See [reserved attributes](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes).'
          example: payment
          type: string
      required:
      - message
      type: object
    Host:
      description: Object representing a host.
      properties:
        aliases:
          description: Host aliases collected by Datadog.
          items:
            description: A host alias.
            example: mycoolhost-1
            type: string
          type: array
        apps:
          description: The Datadog integrations reporting metrics for the host.
          items:
            description: Name of an app.
            example: agent
            type: string
          type: array
        aws_name:
          description: AWS name of your host.
          example: mycoolhost-1
          type: string
        host_name:
          description: The host name.
          example: i-deadbeef
          type: string
        id:
          description: The host ID.
          example: 123456
          format: int64
          type: integer
        is_muted:
          description: If a host is muted or unmuted.
          example: false
          type: boolean
        last_reported_time:
          description: Last time the host reported a metric data point.
          example: 1565000000
          format: int64
          type: integer
        meta:
          $ref: '#/components/schemas/HostMeta'
        metrics:
          $ref: '#/components/schemas/HostMetrics'
        mute_timeout:
          description: Timeout of the mute applied to your host.
          format: int64
          nullable: true
          type: integer
        name:
          description: The host name.
          example: i-hostname
          type: string
        sources:
          description: Source or cloud provider associated with your host.
          items:
            description: A source or cloud provider name.
            example: aws
            type: string
          type: array
        tags_by_source:
          additionalProperties:
            description: Array of tags for a single source.
            items:
              description: A tag.
              example: test.example.com.host
              type: string
            type: array
          description: List of tags for each source (AWS, Datadog Agent, Chef..).
          type: object
        up:
          description: Displays UP when the expected metrics are received and displays
            `???` if no metrics are received.
          example: true
          type: boolean
      type: object
    HostListResponse:
      description: Response with Host information from Datadog.
      properties:
        host_list:
          description: Array of hosts.
          items:
            $ref: '#/components/schemas/Host'
          type: array
        total_matching:
          description: Number of host matching the query.
          example: 1
          format: int64
          type: integer
        total_returned:
          description: Number of host returned.
          example: 1
          format: int64
          type: integer
      type: object
    HostMeta:
      description: Metadata associated with your host.
      properties:
        agent_checks:
          description: A list of Agent checks running on the host.
          items:
            $ref: '#/components/schemas/AgentCheck'
          type: array
        agent_version:
          description: The Datadog Agent version.
          example: 7.32.3
          type: string
        cpuCores:
          description: The number of cores.
          example: 1
          format: int64
          type: integer
        fbsdV:
          description: An array of Mac versions.
          items:
            description: The version name.
            example: FreeBSD
          type: array
        gohai:
          description: JSON string containing system information.
          example: '{"cpu":{"cache_size":"8192 KB","cpu_cores":"1","cpu_logical_processors":"1","family":"6","mhz":"2712.000","model":"142","model_name":"Intel(R)
            Core(TM) i7-8559U CPU @ 2.70GHz","stepping":"10","vendor_id":"GenuineIntel"},"filesystem":[{"kb_size":"3966896","mounted_on":"/dev","name":"udev"},{"kb_size":"797396","mounted_on":"/run","name":"tmpfs"},{"kb_size":"64800356","mounted_on":"/","name":"/dev/mapper/vagrant--vg-root"},{"kb_size":"3986972","mounted_on":"/dev/shm","name":"tmpfs"},{"kb_size":"5120","mounted_on":"/run/lock","name":"tmpfs"},{"kb_size":"3986972","mounted_on":"/sys/fs/cgroup","name":"tmpfs"},{"kb_size":"488245288","mounted_on":"/vagrant","name":"vagrant"},{"kb_size":"797392","mounted_on":"/run/user/1000","name":"tmpfs"}],"memory":{"swap_total":"1003516kB","total":"7973944kB"},"network":{"interfaces":[{"ipv4":"10.0.2.15","ipv4-network":"10.0.2.0/24","ipv6":"fe80::a00:27ff:fec2:be11","ipv6-network":"fe80::/64","macaddress":"08:00:27:c2:be:11","name":"eth0"},{"ipv4":"192.168.122.1","ipv4-network":"192.168.122.0/24","macaddress":"52:54:00:6f:1c:bf","name":"virbr0"}],"ipaddress":"10.0.2.15","ipaddressv6":"fe80::a00:27ff:fec2:be11","macaddress":"08:00:27:c2:be:11"},"platform":{"GOOARCH":"amd64","GOOS":"linux","goV":"1.16.7","hardware_platform":"x86_64","hostname":"vagrant","kernel_name":"Linux","kernel_release":"4.15.0-29-generic","kernel_version":"#31-Ubuntu
            SMP Tue Jul 17 15:39:52 UTC 2018","machine":"x86_64","os":"GNU/Linux","processor":"x86_64","pythonV":"2.7.15rc1"}}'
          type: string
        install_method:
          $ref: '#/components/schemas/HostMetaInstallMethod'
        macV:
          description: An array of Mac versions.
          items:
            description: Version name.
            example: Mac
          type: array
        machine:
          description: The machine architecture.
          example: amd64
          type: string
        nixV:
          description: Array of Unix versions.
          items:
            description: Version name.
            example: Ubuntu
          type: array
        platform:
          description: The OS platform.
          example: linux
          type: string
        processor:
          description: The processor.
          example: Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz
          type: string
        pythonV:
          description: The Python version.
          example: 3.8.11
          type: string
        socket-fqdn:
          description: The socket fqdn.
          example: vagrant.vm.
          type: string
        socket-hostname:
          description: The socket hostname.
          example: vagrant
          type: string
        winV:
          description: An array of Windows versions.
          items:
            description: Version name.
            example: Windows
          type: array
      type: object
    HostMetaInstallMethod:
      description: Agent install method.
      properties:
        installer_version:
          description: The installer version.
          example: install_script-1.7.1
          type: string
        tool:
          description: Tool used to install the agent.
          example: install_script
          type: string
        tool_version:
          description: The tool version.
          example: install_script
          type: string
      type: object
    HostMetrics:
      description: Host Metrics collected.
      properties:
        cpu:
          description: The percent of CPU used (everything but idle).
          example: 99.0
          format: double
          type: number
        iowait:
          description: The percent of CPU spent waiting on the IO (not reported for
            all platforms).
          example: 3.2
          format: double
          type: number
        load:
          description: The system load over the last 15 minutes.
          example: 0.5
          format: double
          type: number
      type: object
    HostMuteResponse:
      description: Response with the list of muted host for your organization.
      properties:
        action:
          description: Action applied to the hosts.
          example: Muted
          type: string
        end:
          description: POSIX timestamp in seconds when the host is unmuted.
          example: 1579098130
          format: int64
          type: integer
        hostname:
          description: The host name.
          example: test.host
          type: string
        message:
          description: Message associated with the mute.
          example: Muting this host for a test!
          type: string
      type: object
    HostMuteSettings:
      description: Combination of settings to mute a host.
      properties:
        end:
          description: POSIX timestamp in seconds when the host is unmuted. If omitted,
            the host remains muted until explicitly unmuted.
          example: 1579098130
          format: int64
          type: integer
        message:
          description: Message to associate with the muting of this host.
          example: Muting this host for a test!
          type: string
        override:
          description: If true and the host is already muted, replaces existing host
            mute settings.
          example: false
          type: boolean
      type: object
    HostTags:
      description: Set of tags to associate with your host.
      properties:
        host:
          description: Your host name.
          example: test.host
          type: string
        tags:
          description: A list of tags to apply to the host.
          items:
            description: A given tag in a list.
            example: environment:production
            type: string
          type: array
      type: object
    HostTotals:
      description: Total number of host currently monitored by Datadog.
      properties:
        total_active:
          description: Total number of active host (UP and ???) reporting to Datadog.
          format: int64
          type: integer
        total_up:
          description: Number of host that are UP and reporting to Datadog.
          format: int64
          type: integer
      type: object
    HourlyUsageAttributionBody:
      description: The usage for one set of tags for one hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs
            to.
          type: string
        tag_config_source:
          description: The source of the usage attribution tag configuration and the
            selected tags in the format of `<source_org_name>:::<selected tag 1>///<selected
            tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/UsageAttributionTagNames'
        total_usage_sum:
          description: Total product usage for the given tags within the hour.
          format: double
          type: number
        updated_at:
          description: Shows the most recent hour in the current month for all organizations
            where usages are calculated.
          type: string
        usage_type:
          $ref: '#/components/schemas/HourlyUsageAttributionUsageType'
      type: object
    HourlyUsageAttributionMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsageAttributionPagination'
      type: object
    HourlyUsageAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
      type: object
    HourlyUsageAttributionResponse:
      description: Response containing the hourly usage attribution by tag(s).
      properties:
        metadata:
          $ref: '#/components/schemas/HourlyUsageAttributionMetadata'
        usage:
          description: Get the hourly usage attribution by tag(s).
          items:
            $ref: '#/components/schemas/HourlyUsageAttributionBody'
          type: array
      type: object
    HourlyUsageAttributionUsageType:
      description: Supported products for hourly usage attribution requests.
      enum:
      - api_usage
      - apm_fargate_usage
      - apm_host_usage
      - apm_usm_usage
      - appsec_fargate_usage
      - appsec_usage
      - browser_usage
      - ci_pipeline_indexed_spans_usage
      - ci_test_indexed_spans_usage
      - ci_visibility_itr_usage
      - cloud_siem_usage
      - container_excl_agent_usage
      - container_usage
      - cspm_containers_usage
      - cspm_hosts_usage
      - custom_event_usage
      - custom_ingested_timeseries_usage
      - custom_timeseries_usage
      - cws_containers_usage
      - cws_hosts_usage
      - dbm_hosts_usage
      - dbm_queries_usage
      - estimated_indexed_logs_usage
      - estimated_indexed_spans_usage
      - estimated_ingested_logs_usage
      - estimated_ingested_spans_usage
      - estimated_rum_sessions_usage
      - fargate_usage
      - functions_usage
      - indexed_spans_usage
      - infra_host_usage
      - ingested_logs_bytes_usage
      - ingested_spans_bytes_usage
      - invocations_usage
      - lambda_traced_invocations_usage
      - logs_indexed_15day_usage
      - logs_indexed_180day_usage
      - logs_indexed_30day_usage
      - logs_indexed_360day_usage
      - logs_indexed_3day_usage
      - logs_indexed_45day_usage
      - logs_indexed_60day_usage
      - logs_indexed_7day_usage
      - logs_indexed_90day_usage
      - logs_indexed_custom_retention_usage
      - mobile_app_testing_usage
      - ndm_netflow_usage
      - npm_host_usage
      - obs_pipeline_bytes_usage
      - profiled_container_usage
      - profiled_fargate_usage
      - profiled_host_usage
      - rum_browser_mobile_sessions_usage
      - rum_replay_sessions_usage
      - sds_scanned_bytes_usage
      - serverless_apps_usage
      - siem_ingested_bytes_usage
      - snmp_usage
      - universal_service_monitoring_usage
      - vuln_management_hosts_usage
      type: string
      x-enum-varnames:
      - API_USAGE
      - APM_FARGATE_USAGE
      - APM_HOST_USAGE
      - APM_USM_USAGE
      - APPSEC_FARGATE_USAGE
      - APPSEC_USAGE
      - BROWSER_USAGE
      - CI_PIPELINE_INDEXED_SPANS_USAGE
      - CI_TEST_INDEXED_SPANS_USAGE
      - CI_VISIBILITY_ITR_USAGE
      - CLOUD_SIEM_USAGE
      - CONTAINER_EXCL_AGENT_USAGE
      - CONTAINER_USAGE
      - CSPM_CONTAINERS_USAGE
      - CSPM_HOSTS_USAGE
      - CUSTOM_EVENT_USAGE
      - CUSTOM_INGESTED_TIMESERIES_USAGE
      - CUSTOM_TIMESERIES_USAGE
      - CWS_CONTAINERS_USAGE
      - CWS_HOSTS_USAGE
      - DBM_HOSTS_USAGE
      - DBM_QUERIES_USAGE
      - ESTIMATED_INDEXED_LOGS_USAGE
      - ESTIMATED_INDEXED_SPANS_USAGE
      - ESTIMATED_INGESTED_LOGS_USAGE
      - ESTIMATED_INGESTED_SPANS_USAGE
      - ESTIMATED_RUM_SESSIONS_USAGE
      - FARGATE_USAGE
      - FUNCTIONS_USAGE
      - INDEXED_SPANS_USAGE
      - INFRA_HOST_USAGE
      - INGESTED_LOGS_BYTES_USAGE
      - INGESTED_SPANS_BYTES_USAGE
      - INVOCATIONS_USAGE
      - LAMBDA_TRACED_INVOCATIONS_USAGE
      - LOGS_INDEXED_15DAY_USAGE
      - LOGS_INDEXED_180DAY_USAGE
      - LOGS_INDEXED_30DAY_USAGE
      - LOGS_INDEXED_360DAY_USAGE
      - LOGS_INDEXED_3DAY_USAGE
      - LOGS_INDEXED_45DAY_USAGE
      - LOGS_INDEXED_60DAY_USAGE
      - LOGS_INDEXED_7DAY_USAGE
      - LOGS_INDEXED_90DAY_USAGE
      - LOGS_INDEXED_CUSTOM_RETENTION_USAGE
      - MOBILE_APP_TESTING_USAGE
      - NDM_NETFLOW_USAGE
      - NPM_HOST_USAGE
      - OBS_PIPELINE_BYTES_USAGE
      - PROFILED_CONTAINER_USAGE
      - PROFILED_FARGATE_USAGE
      - PROFILED_HOST_USAGE
      - RUM_BROWSER_MOBILE_SESSIONS_USAGE
      - RUM_REPLAY_SESSIONS_USAGE
      - SDS_SCANNED_BYTES_USAGE
      - SERVERLESS_APPS_USAGE
      - SIEM_INGESTED_BYTES_USAGE
      - SNMP_USAGE
      - UNIVERSAL_SERVICE_MONITORING_USAGE
      - VULN_MANAGEMENT_HOSTS_USAGE
    IPPrefixesAPI:
      description: Available prefix information for the API endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAPM:
      description: Available prefix information for the APM endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesAgents:
      description: Available prefix information for the Agent endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesGlobal:
      description: Available prefix information for all Datadog endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesLogs:
      description: Available prefix information for the Logs endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesOrchestrator:
      description: Available prefix information for the Orchestrator endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesProcess:
      description: Available prefix information for the Process endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesRemoteConfiguration:
      description: Available prefix information for the Remote Configuration endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesSynthetics:
      description: Available prefix information for the Synthetics endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv4_by_location:
          additionalProperties:
            description: List of IPv4 prefixes.
            items:
              description: IPv4 prefix.
              type: string
            type: array
          description: List of IPv4 prefixes by location.
          type: object
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
        prefixes_ipv6_by_location:
          additionalProperties:
            description: List of IPv6 prefixes.
            items:
              description: IPv6 prefix.
              type: string
            type: array
          description: List of IPv6 prefixes by location.
          type: object
      type: object
    IPPrefixesSyntheticsPrivateLocations:
      description: Available prefix information for the Synthetics Private Locations
        endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPPrefixesWebhooks:
      description: Available prefix information for the Webhook endpoints.
      properties:
        prefixes_ipv4:
          description: List of IPv4 prefixes.
          items:
            description: IPv4 prefix
            type: string
          type: array
        prefixes_ipv6:
          description: List of IPv6 prefixes.
          items:
            description: IPv6 prefix
            type: string
          type: array
      type: object
    IPRanges:
      description: IP ranges.
      properties:
        agents:
          $ref: '#/components/schemas/IPPrefixesAgents'
        api:
          $ref: '#/components/schemas/IPPrefixesAPI'
        apm:
          $ref: '#/components/schemas/IPPrefixesAPM'
        global:
          $ref: '#/components/schemas/IPPrefixesGlobal'
        logs:
          $ref: '#/components/schemas/IPPrefixesLogs'
        modified:
          description: Date when last updated, in the form `YYYY-MM-DD-hh-mm-ss`.
          example: 2019-10-31-20-00-00
          type: string
        orchestrator:
          $ref: '#/components/schemas/IPPrefixesOrchestrator'
        process:
          $ref: '#/components/schemas/IPPrefixesProcess'
        remote-configuration:
          $ref: '#/components/schemas/IPPrefixesRemoteConfiguration'
        synthetics:
          $ref: '#/components/schemas/IPPrefixesSynthetics'
        synthetics-private-locations:
          $ref: '#/components/schemas/IPPrefixesSyntheticsPrivateLocations'
        version:
          description: Version of the IP list.
          example: 11
          format: int64
          type: integer
        webhooks:
          $ref: '#/components/schemas/IPPrefixesWebhooks'
      type: object
    IdpFormData:
      description: Object describing the IdP configuration.
      properties:
        idp_file:
          description: The path to the XML metadata file you wish to upload.
          example: ''
          format: binary
          type: string
      required:
      - idp_file
      type: object
    IdpResponse:
      description: The IdP response object.
      properties:
        message:
          description: Identity provider response.
          example: IdP metadata successfully uploaded for example org
          type: string
      required:
      - message
      type: object
    IntakePayloadAccepted:
      description: The payload accepted for intake.
      properties:
        status:
          description: The status of the intake payload.
          example: ok
          type: string
      type: object
    Log:
      description: Object describing a log after being processed and stored by Datadog.
      properties:
        content:
          $ref: '#/components/schemas/LogContent'
        id:
          description: Unique ID of the Log.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
      type: object
    LogContent:
      description: JSON object containing all log attributes and their associated
        values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: 'The message [reserved attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message attribute
            as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where it
            is indexed for full text search.'
          example: Host connected to remote
          type: string
        service:
          description: 'The name of the application or service generating the log
            events.

            It is used to switch from Logs to APM, so make sure you define the same

            value when you use both products.'
          example: agent
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
          - team:A
          items:
            description: Tag associated with your log.
            type: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: '2020-05-26T13:36:14Z'
          format: date-time
          type: string
      type: object
    LogsAPIError:
      description: Error returned by the Logs API
      properties:
        code:
          description: Code identifying the error
          type: string
        details:
          description: Additional error details
          items:
            $ref: '#/components/schemas/LogsAPIError'
          type: array
        message:
          description: Error message
          type: string
      type: object
    LogsAPIErrorResponse:
      description: Response returned by the Logs API when errors occur.
      properties:
        error:
          $ref: '#/components/schemas/LogsAPIError'
      type: object
    LogsByRetention:
      description: Object containing logs usage data broken down by retention period.
      properties:
        orgs:
          $ref: '#/components/schemas/LogsByRetentionOrgs'
        usage:
          description: Aggregated index logs usage for each retention period with
            usage.
          items:
            $ref: '#/components/schemas/LogsRetentionAggSumUsage'
          type: array
        usage_by_month:
          $ref: '#/components/schemas/LogsByRetentionMonthlyUsage'
      type: object
    LogsByRetentionMonthlyUsage:
      description: Object containing a summary of indexed logs usage by retention
        period for a single month.
      properties:
        date:
          description: The month for the usage.
          format: date-time
          type: string
        usage:
          description: Indexed logs usage for each active retention for the month.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsByRetentionOrgUsage:
      description: Indexed logs usage by retention for a single organization.
      properties:
        usage:
          description: Indexed logs usage for each active retention for the organization.
          items:
            $ref: '#/components/schemas/LogsRetentionSumUsage'
          type: array
      type: object
    LogsByRetentionOrgs:
      description: Indexed logs usage summary for each organization for each retention
        period with usage.
      properties:
        usage:
          description: Indexed logs usage summary for each organization.
          items:
            $ref: '#/components/schemas/LogsByRetentionOrgUsage'
          type: array
      type: object
    LogsExclusion:
      description: Represents the index exclusion filter object from configuration
        API.
      properties:
        filter:
          $ref: '#/components/schemas/LogsExclusionFilter'
        is_enabled:
          description: Whether or not the exclusion filter is active.
          type: boolean
        name:
          description: Name of the index exclusion filter.
          example: payment
          type: string
      required:
      - name
      type: object
    LogsExclusionFilter:
      description: Exclusion filter is defined by a query, a sampling rule, and a
        active/inactive toggle.
      properties:
        query:
          description: 'Default query is `*`, meaning all logs flowing in the index
            would be excluded.

            Scope down exclusion filter to only a subset of logs with a log query.'
          example: '*'
          type: string
        sample_rate:
          description: 'Sample rate to apply to logs going through this exclusion
            filter,

            a value of 1.0 excludes all logs matching the query.'
          example: 1.0
          format: double
          type: number
      required:
      - sample_rate
      type: object
    LogsFilter:
      description: Filter for logs.
      properties:
        query:
          description: The filter query.
          example: source:python
          type: string
      type: object
    LogsIndex:
      description: Object describing a Datadog Log index.
      properties:
        daily_limit:
          description: The number of log events you can send in this index per day
            before you are rate-limited.
          example: 300000000
          format: int64
          type: integer
        exclusion_filters:
          description: 'An array of exclusion objects. The logs are tested against
            the query of each filter,

            following the order of the array. Only the first matching active exclusion
            matters,

            others (if any) are ignored.'
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        is_rate_limited:
          description: 'A boolean stating if the index is rate limited, meaning more
            logs than the daily limit have been sent.

            Rate limit is reset every-day at 2pm UTC.'
          example: false
          readOnly: true
          type: boolean
        name:
          description: The name of the index.
          example: main
          type: string
        num_retention_days:
          description: 'The number of days before logs are deleted from this index.
            Available values depend on

            retention plans specified in your organization''s contract/subscriptions.'
          example: 15
          format: int64
          type: integer
      required:
      - name
      - filter
      type: object
    LogsIndexListResponse:
      description: Object with all Index configurations for a given organization.
      properties:
        indexes:
          description: Array of Log index configurations.
          items:
            $ref: '#/components/schemas/LogsIndex'
          type: array
      type: object
    LogsIndexUpdateRequest:
      description: Object for updating a Datadog Log index.
      properties:
        daily_limit:
          description: The number of log events you can send in this index per day
            before you are rate-limited.
          example: 300000000
          format: int64
          type: integer
        disable_daily_limit:
          description: 'If true, sets the `daily_limit` value to null and the index
            is not limited on a daily basis (any

            specified `daily_limit` value in the request is ignored). If false or
            omitted, the index''s current

            `daily_limit` is maintained.'
          example: false
          type: boolean
        exclusion_filters:
          description: 'An array of exclusion objects. The logs are tested against
            the query of each filter,

            following the order of the array. Only the first matching active exclusion
            matters,

            others (if any) are ignored.'
          items:
            $ref: '#/components/schemas/LogsExclusion'
          type: array
        filter:
          $ref: '#/components/schemas/LogsFilter'
        num_retention_days:
          description: 'The number of days before logs are deleted from this index.
            Available values depend on

            retention plans specified in your organization''s contract/subscriptions.


            **Note:** Changing the retention for an index adjusts the length of retention
            for all logs

            already in this index. It may also affect billing.'
          example: 15
          format: int64
          type: integer
      required:
      - filter
      type: object
    LogsIndexesOrder:
      description: Object containing the ordered list of log index names.
      properties:
        index_names:
          description: 'Array of strings identifying by their name(s) the index(es)
            of your organization.

            Logs are tested against the query filter of each index one by one, following
            the order of the array.

            Logs are eventually stored in the first matching index.'
          example:
          - main
          - payments
          - web
          items:
            description: An index name.
            type: string
          type: array
      required:
      - index_names
      type: object
    LogsListRequest:
      description: Object to send with the request to retrieve a list of logs from
        your Organization.
      properties:
        index:
          description: 'The log index on which the request is performed. For multi-index
            organizations,

            the default is all live indexes. Historical indexes of rehydrated logs
            must be specified.'
          example: retention-3,retention-15
          type: string
        limit:
          description: Number of logs return in the response.
          format: int32
          maximum: 1000
          type: integer
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        sort:
          $ref: '#/components/schemas/LogsSort'
        startAt:
          description: 'Hash identifier of the first log to return in the list, available
            in a log `id` attribute.

            This parameter is used for the pagination feature.


            **Note**: This parameter is ignored if the corresponding log

            is out of the scope of the specified time window.'
          type: string
        time:
          $ref: '#/components/schemas/LogsListRequestTime'
      required:
      - time
      type: object
    LogsListRequestTime:
      description: Timeframe to retrieve the log from.
      properties:
        from:
          description: Minimum timestamp for requested logs.
          example: '2020-02-02T02:02:02.202Z'
          format: date-time
          type: string
        timezone:
          description: 'Timezone can be specified both as an offset (for example "UTC+03:00")

            or a regional zone (for example "Europe/Paris").'
          type: string
        to:
          description: Maximum timestamp for requested logs.
          example: '2020-02-20T02:02:02.202Z'
          format: date-time
          type: string
      required:
      - from
      - to
      type: object
    LogsListResponse:
      description: Response object with all logs matching the request and pagination
        information.
      properties:
        logs:
          description: Array of logs matching the request and the `nextLogId` if sent.
          items:
            $ref: '#/components/schemas/Log'
          type: array
        nextLogId:
          description: 'Hash identifier of the next log to return in the list.

            This parameter is used for the pagination feature.'
          nullable: true
          type: string
        status:
          description: Status of the response.
          type: string
      type: object
    LogsRetentionAggSumUsage:
      description: Object containing indexed logs usage aggregated across organizations
        and months for a retention period.
      properties:
        logs_indexed_logs_usage_agg_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_agg_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_agg_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsRetentionSumUsage:
      description: Object containing indexed logs usage grouped by retention period
        and summed.
      properties:
        logs_indexed_logs_usage_sum:
          description: Total indexed logs for this retention period.
          format: int64
          type: integer
        logs_live_indexed_logs_usage_sum:
          description: Live indexed logs for this retention period.
          format: int64
          type: integer
        logs_rehydrated_indexed_logs_usage_sum:
          description: Rehydrated indexed logs for this retention period.
          format: int64
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            periods.
          type: string
      type: object
    LogsSort:
      description: Time-ascending `asc` or time-descending `desc` results.
      enum:
      - asc
      - desc
      type: string
      x-enum-varnames:
      - TIME_ASCENDING
      - TIME_DESCENDING
    MetricContentEncoding:
      default: deflate
      description: HTTP header used to compress the media-type.
      enum:
      - deflate
      - gzip
      example: deflate
      type: string
      x-enum-varnames:
      - DEFLATE
      - GZIP
    MetricMetadata:
      description: Object with all metric related metadata.
      properties:
        description:
          description: Metric description.
          type: string
        integration:
          description: Name of the integration that sent the metric if applicable.
          readOnly: true
          type: string
        per_unit:
          description: Per unit of the metric such as `second` in `bytes per second`.
          example: second
          type: string
        short_name:
          description: A more human-readable and abbreviated version of the metric
            name.
          type: string
        statsd_interval:
          description: StatsD flush interval of the metric in seconds if applicable.
          format: int64
          type: integer
        type:
          description: Metric type such as `gauge` or `rate`.
          example: count
          type: string
        unit:
          description: Primary unit of the metric such as `byte` or `operation`.
          example: byte
          type: string
      type: object
    MetricSearchResponse:
      description: Object containing the list of metrics matching the search query.
      properties:
        results:
          $ref: '#/components/schemas/MetricSearchResponseResults'
      type: object
    MetricSearchResponseResults:
      description: Search result.
      properties:
        metrics:
          description: List of metrics that match the search query.
          items:
            description: Metric name.
            type: string
          type: array
      type: object
    MetricsListResponse:
      description: Object listing all metric names stored by Datadog since a given
        time.
      properties:
        from:
          description: Time when the metrics were active, seconds since the Unix epoch.
          type: string
        metrics:
          description: List of metric names.
          items:
            description: A metric name.
            type: string
          type: array
      type: object
    MetricsPayload:
      description: The metrics' payload.
      properties:
        series:
          description: A list of time series to submit to Datadog.
          example:
          - metric: system.load.1
            points:
            - - 1475317847.0
              - 0.7
          items:
            $ref: '#/components/schemas/Series'
          type: array
      required:
      - series
      type: object
    MetricsQueryMetadata:
      description: Object containing all metric names returned and their associated
        metadata.
      properties:
        aggr:
          description: Aggregation type.
          example: avg
          nullable: true
          readOnly: true
          type: string
        display_name:
          description: Display name of the metric.
          example: system.cpu.idle
          readOnly: true
          type: string
        end:
          description: End of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        expression:
          description: Metric expression.
          example: system.cpu.idle{host:foo,env:test}
          readOnly: true
          type: string
        interval:
          description: Number of milliseconds between data samples.
          format: int64
          readOnly: true
          type: integer
        length:
          description: Number of data samples.
          format: int64
          readOnly: true
          type: integer
        metric:
          description: Metric name.
          example: system.cpu.idle
          readOnly: true
          type: string
        pointlist:
          description: List of points of the time series in milliseconds.
          example:
          - - 1681683300000.0
            - 77.62145685254418
          items:
            $ref: '#/components/schemas/Point'
          readOnly: true
          type: array
        query_index:
          description: The index of the series' query within the request.
          format: int64
          readOnly: true
          type: integer
        scope:
          description: Metric scope, comma separated list of tags.
          example: host:foo,env:test
          readOnly: true
          type: string
        start:
          description: Start of the time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        tag_set:
          description: Unique tags identifying this series.
          items:
            description: Unique tags identifying this series.
            type: string
          readOnly: true
          type: array
        unit:
          description: 'Detailed information about the metric unit.

            The first element describes the "primary unit" (for example, `bytes` in
            `bytes per second`).

            The second element describes the "per unit" (for example, `second` in
            `bytes per second`).

            If the second element is not present, the API returns null.'
          items:
            $ref: '#/components/schemas/MetricsQueryUnit'
          maxItems: 2
          minItems: 2
          readOnly: true
          type: array
      type: object
    MetricsQueryResponse:
      description: Response Object that includes your query and the list of metrics
        retrieved.
      properties:
        error:
          description: Message indicating the errors if status is not `ok`.
          readOnly: true
          type: string
        from_date:
          description: Start of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
        group_by:
          description: List of tag keys on which to group.
          items:
            description: Tag key to group by your metric.
            type: string
          readOnly: true
          type: array
        message:
          description: Message indicating `success` if status is `ok`.
          readOnly: true
          type: string
        query:
          description: Query string
          readOnly: true
          type: string
        res_type:
          description: Type of response.
          example: time_series
          readOnly: true
          type: string
        series:
          description: List of timeseries queried.
          items:
            $ref: '#/components/schemas/MetricsQueryMetadata'
          readOnly: true
          type: array
        status:
          description: Status of the query.
          example: ok
          readOnly: true
          type: string
        to_date:
          description: End of requested time window, milliseconds since Unix epoch.
          format: int64
          readOnly: true
          type: integer
      type: object
    MetricsQueryUnit:
      description: Object containing the metric unit family, scale factor, name, and
        short name.
      nullable: true
      properties:
        family:
          description: Unit family, allows for conversion between units of the same
            family, for scaling.
          example: time
          readOnly: true
          type: string
        name:
          description: Unit name
          example: minute
          readOnly: true
          type: string
        plural:
          description: Plural form of the unit name.
          example: minutes
          readOnly: true
          type: string
        scale_factor:
          description: Factor for scaling between units of the same family.
          example: 60.0
          format: double
          readOnly: true
          type: number
        short_name:
          description: Abbreviation of the unit.
          example: min
          readOnly: true
          type: string
      type: object
    MonthlyUsageAttributionBody:
      description: Usage Summary by tag for a given organization.
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM].'
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs
            to.
          type: string
        tag_config_source:
          description: The source of the usage attribution tag configuration and the
            selected tags in the format `<source_org_name>:::<selected tag 1>///<selected
            tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/UsageAttributionTagNames'
        updated_at:
          description: Datetime of the most recent update to the usage values.
          format: date-time
          type: string
        values:
          $ref: '#/components/schemas/MonthlyUsageAttributionValues'
      type: object
    MonthlyUsageAttributionMetadata:
      description: The object containing document metadata.
      properties:
        aggregates:
          $ref: '#/components/schemas/UsageAttributionAggregates'
        pagination:
          $ref: '#/components/schemas/MonthlyUsageAttributionPagination'
      type: object
    MonthlyUsageAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: The cursor to use to get the next results, if any. To make
            the next request, use the same parameters with the addition of the `next_record_id`.
          nullable: true
          type: string
      type: object
    MonthlyUsageAttributionResponse:
      description: Response containing the monthly Usage Summary by tag(s).
      properties:
        metadata:
          $ref: '#/components/schemas/MonthlyUsageAttributionMetadata'
        usage:
          description: Get usage summary by tag(s).
          items:
            $ref: '#/components/schemas/MonthlyUsageAttributionBody'
          type: array
      type: object
    MonthlyUsageAttributionSupportedMetrics:
      description: Supported metrics for monthly usage attribution requests.
      enum:
      - api_usage
      - api_percentage
      - apm_fargate_usage
      - apm_fargate_percentage
      - appsec_fargate_usage
      - appsec_fargate_percentage
      - apm_host_usage
      - apm_host_percentage
      - apm_usm_usage
      - apm_usm_percentage
      - appsec_usage
      - appsec_percentage
      - browser_usage
      - browser_percentage
      - ci_visibility_itr_usage
      - ci_visibility_itr_percentage
      - cloud_siem_usage
      - cloud_siem_percentage
      - container_excl_agent_usage
      - container_excl_agent_percentage
      - container_usage
      - container_percentage
      - cspm_containers_percentage
      - cspm_containers_usage
      - cspm_hosts_percentage
      - cspm_hosts_usage
      - custom_timeseries_usage
      - custom_timeseries_percentage
      - custom_ingested_timeseries_usage
      - custom_ingested_timeseries_percentage
      - cws_containers_percentage
      - cws_containers_usage
      - cws_hosts_percentage
      - cws_hosts_usage
      - dbm_hosts_percentage
      - dbm_hosts_usage
      - dbm_queries_percentage
      - dbm_queries_usage
      - estimated_indexed_logs_usage
      - estimated_indexed_logs_percentage
      - estimated_ingested_logs_usage
      - estimated_ingested_logs_percentage
      - estimated_indexed_spans_usage
      - estimated_indexed_spans_percentage
      - estimated_ingested_spans_usage
      - estimated_ingested_spans_percentage
      - fargate_usage
      - fargate_percentage
      - functions_usage
      - functions_percentage
      - infra_host_usage
      - infra_host_percentage
      - invocations_usage
      - invocations_percentage
      - lambda_traced_invocations_usage
      - lambda_traced_invocations_percentage
      - mobile_app_testing_percentage
      - mobile_app_testing_usage
      - ndm_netflow_usage
      - ndm_netflow_percentage
      - npm_host_usage
      - npm_host_percentage
      - obs_pipeline_bytes_usage
      - obs_pipeline_bytes_percentage
      - profiled_container_usage
      - profiled_container_percentage
      - profiled_fargate_usage
      - profiled_fargate_percentage
      - profiled_host_usage
      - profiled_host_percentage
      - serverless_apps_usage
      - serverless_apps_percentage
      - snmp_usage
      - snmp_percentage
      - estimated_rum_sessions_usage
      - estimated_rum_sessions_percentage
      - universal_service_monitoring_usage
      - universal_service_monitoring_percentage
      - vuln_management_hosts_usage
      - vuln_management_hosts_percentage
      - sds_scanned_bytes_usage
      - sds_scanned_bytes_percentage
      - ci_test_indexed_spans_usage
      - ci_test_indexed_spans_percentage
      - ingested_logs_bytes_usage
      - ingested_logs_bytes_percentage
      - ci_pipeline_indexed_spans_usage
      - ci_pipeline_indexed_spans_percentage
      - indexed_spans_usage
      - indexed_spans_percentage
      - custom_event_usage
      - custom_event_percentage
      - logs_indexed_custom_retention_usage
      - logs_indexed_custom_retention_percentage
      - logs_indexed_360day_usage
      - logs_indexed_360day_percentage
      - logs_indexed_180day_usage
      - logs_indexed_180day_percentage
      - logs_indexed_90day_usage
      - logs_indexed_90day_percentage
      - logs_indexed_60day_usage
      - logs_indexed_60day_percentage
      - logs_indexed_45day_usage
      - logs_indexed_45day_percentage
      - logs_indexed_30day_usage
      - logs_indexed_30day_percentage
      - logs_indexed_15day_usage
      - logs_indexed_15day_percentage
      - logs_indexed_7day_usage
      - logs_indexed_7day_percentage
      - logs_indexed_3day_usage
      - logs_indexed_3day_percentage
      - rum_replay_sessions_usage
      - rum_replay_sessions_percentage
      - rum_browser_mobile_sessions_usage
      - rum_browser_mobile_sessions_percentage
      - ingested_spans_bytes_usage
      - ingested_spans_bytes_percentage
      - siem_ingested_bytes_usage
      - siem_ingested_bytes_percentage
      - '*'
      type: string
      x-enum-varnames:
      - API_USAGE
      - API_PERCENTAGE
      - APM_FARGATE_USAGE
      - APM_FARGATE_PERCENTAGE
      - APPSEC_FARGATE_USAGE
      - APPSEC_FARGATE_PERCENTAGE
      - APM_HOST_USAGE
      - APM_HOST_PERCENTAGE
      - APM_USM_USAGE
      - APM_USM_PERCENTAGE
      - APPSEC_USAGE
      - APPSEC_PERCENTAGE
      - BROWSER_USAGE
      - BROWSER_PERCENTAGE
      - CI_VISIBILITY_ITR_USAGE
      - CI_VISIBILITY_ITR_PERCENTAGE
      - CLOUD_SIEM_USAGE
      - CLOUD_SIEM_PERCENTAGE
      - CONTAINER_EXCL_AGENT_USAGE
      - CONTAINER_EXCL_AGENT_PERCENTAGE
      - CONTAINER_USAGE
      - CONTAINER_PERCENTAGE
      - CSPM_CONTAINERS_PERCENTAGE
      - CSPM_CONTAINERS_USAGE
      - CSPM_HOSTS_PERCENTAGE
      - CSPM_HOSTS_USAGE
      - CUSTOM_TIMESERIES_USAGE
      - CUSTOM_TIMESERIES_PERCENTAGE
      - CUSTOM_INGESTED_TIMESERIES_USAGE
      - CUSTOM_INGESTED_TIMESERIES_PERCENTAGE
      - CWS_CONTAINERS_PERCENTAGE
      - CWS_CONTAINERS_USAGE
      - CWS_HOSTS_PERCENTAGE
      - CWS_HOSTS_USAGE
      - DBM_HOSTS_PERCENTAGE
      - DBM_HOSTS_USAGE
      - DBM_QUERIES_PERCENTAGE
      - DBM_QUERIES_USAGE
      - ESTIMATED_INDEXED_LOGS_USAGE
      - ESTIMATED_INDEXED_LOGS_PERCENTAGE
      - ESTIMATED_INGESTED_LOGS_USAGE
      - ESTIMATED_INGESTED_LOGS_PERCENTAGE
      - ESTIMATED_INDEXED_SPANS_USAGE
      - ESTIMATED_INDEXED_SPANS_PERCENTAGE
      - ESTIMATED_INGESTED_SPANS_USAGE
      - ESTIMATED_INGESTED_SPANS_PERCENTAGE
      - FARGATE_USAGE
      - FARGATE_PERCENTAGE
      - FUNCTIONS_USAGE
      - FUNCTIONS_PERCENTAGE
      - INFRA_HOST_USAGE
      - INFRA_HOST_PERCENTAGE
      - INVOCATIONS_USAGE
      - INVOCATIONS_PERCENTAGE
      - LAMBDA_TRACED_INVOCATIONS_USAGE
      - LAMBDA_TRACED_INVOCATIONS_PERCENTAGE
      - MOBILE_APP_TESTING_USAGE
      - MOBILE_APP_TESTING_PERCENTAGE
      - NDM_NETFLOW_USAGE
      - NDM_NETFLOW_PERCENTAGE
      - NPM_HOST_USAGE
      - NPM_HOST_PERCENTAGE
      - OBS_PIPELINE_BYTES_USAGE
      - OBS_PIPELINE_BYTES_PERCENTAGE
      - PROFILED_CONTAINER_USAGE
      - PROFILED_CONTAINER_PERCENTAGE
      - PROFILED_FARGATE_USAGE
      - PROFILED_FARGATE_PERCENTAGE
      - PROFILED_HOST_USAGE
      - PROFILED_HOST_PERCENTAGE
      - SERVERLESS_APPS_USAGE
      - SERVERLESS_APPS_PERCENTAGE
      - SNMP_USAGE
      - SNMP_PERCENTAGE
      - ESTIMATED_RUM_SESSIONS_USAGE
      - ESTIMATED_RUM_SESSIONS_PERCENTAGE
      - UNIVERSAL_SERVICE_MONITORING_USAGE
      - UNIVERSAL_SERVICE_MONITORING_PERCENTAGE
      - VULN_MANAGEMENT_HOSTS_USAGE
      - VULN_MANAGEMENT_HOSTS_PERCENTAGE
      - SDS_SCANNED_BYTES_USAGE
      - SDS_SCANNED_BYTES_PERCENTAGE
      - CI_TEST_INDEXED_SPANS_USAGE
      - CI_TEST_INDEXED_SPANS_PERCENTAGE
      - INGESTED_LOGS_BYTES_USAGE
      - INGESTED_LOGS_BYTES_PERCENTAGE
      - CI_PIPELINE_INDEXED_SPANS_USAGE
      - CI_PIPELINE_INDEXED_SPANS_PERCENTAGE
      - INDEXED_SPANS_USAGE
      - INDEXED_SPANS_PERCENTAGE
      - CUSTOM_EVENT_USAGE
      - CUSTOM_EVENT_PERCENTAGE
      - LOGS_INDEXED_CUSTOM_RETENTION_USAGE
      - LOGS_INDEXED_CUSTOM_RETENTION_PERCENTAGE
      - LOGS_INDEXED_360DAY_USAGE
      - LOGS_INDEXED_360DAY_PERCENTAGE
      - LOGS_INDEXED_180DAY_USAGE
      - LOGS_INDEXED_180DAY_PERCENTAGE
      - LOGS_INDEXED_90DAY_USAGE
      - LOGS_INDEXED_90DAY_PERCENTAGE
      - LOGS_INDEXED_60DAY_USAGE
      - LOGS_INDEXED_60DAY_PERCENTAGE
      - LOGS_INDEXED_45DAY_USAGE
      - LOGS_INDEXED_45DAY_PERCENTAGE
      - LOGS_INDEXED_30DAY_USAGE
      - LOGS_INDEXED_30DAY_PERCENTAGE
      - LOGS_INDEXED_15DAY_USAGE
      - LOGS_INDEXED_15DAY_PERCENTAGE
      - LOGS_INDEXED_7DAY_USAGE
      - LOGS_INDEXED_7DAY_PERCENTAGE
      - LOGS_INDEXED_3DAY_USAGE
      - LOGS_INDEXED_3DAY_PERCENTAGE
      - RUM_REPLAY_SESSIONS_USAGE
      - RUM_REPLAY_SESSIONS_PERCENTAGE
      - RUM_BROWSER_MOBILE_SESSIONS_USAGE
      - RUM_BROWSER_MOBILE_SESSIONS_PERCENTAGE
      - INGESTED_SPANS_BYTES_USAGE
      - INGESTED_SPANS_BYTES_PERCENTAGE
      - SIEM_INGESTED_BYTES_USAGE
      - SIEM_INGESTED_BYTES_PERCENTAGE
      - ALL
    MonthlyUsageAttributionValues:
      description: Fields in Usage Summary by tag(s).
      properties:
        api_percentage:
          description: The percentage of synthetic API test usage by tag(s).
          format: double
          type: number
        api_usage:
          description: The synthetic API test usage by tag(s).
          format: double
          type: number
        apm_fargate_percentage:
          description: The percentage of APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_fargate_usage:
          description: The APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_host_percentage:
          description: The percentage of APM host usage by tag(s).
          format: double
          type: number
        apm_host_usage:
          description: The APM host usage by tag(s).
          format: double
          type: number
        apm_usm_percentage:
          description: The percentage of APM and Universal Service Monitoring host
            usage by tag(s).
          format: double
          type: number
        apm_usm_usage:
          description: The APM and Universal Service Monitoring host usage by tag(s).
          format: double
          type: number
        appsec_fargate_percentage:
          description: The percentage of Application Security Monitoring ECS Fargate
            task usage by tag(s).
          format: double
          type: number
        appsec_fargate_usage:
          description: The Application Security Monitoring ECS Fargate task usage
            by tag(s).
          format: double
          type: number
        appsec_percentage:
          description: The percentage of Application Security Monitoring host usage
            by tag(s).
          format: double
          type: number
        appsec_usage:
          description: The Application Security Monitoring host usage by tag(s).
          format: double
          type: number
        browser_percentage:
          description: The percentage of synthetic browser test usage by tag(s).
          format: double
          type: number
        browser_usage:
          description: The synthetic browser test usage by tag(s).
          format: double
          type: number
        ci_pipeline_indexed_spans_percentage:
          description: The percentage of CI Pipeline Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_pipeline_indexed_spans_usage:
          description: The total CI Pipeline Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_test_indexed_spans_percentage:
          description: The percentage of CI Test Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_test_indexed_spans_usage:
          description: The total CI Test Indexed Spans usage by tag(s).
          format: double
          type: number
        ci_visibility_itr_percentage:
          description: The percentage of Git committers for Intelligent Test Runner
            usage by tag(s).
          format: double
          type: number
        ci_visibility_itr_usage:
          description: The Git committers for Intelligent Test Runner usage by tag(s).
          format: double
          type: number
        cloud_siem_percentage:
          description: The percentage of Cloud Security Information and Event Management
            usage by tag(s).
          format: double
          type: number
        cloud_siem_usage:
          description: The Cloud Security Information and Event Management usage by
            tag(s).
          format: double
          type: number
        container_excl_agent_percentage:
          description: The percentage of container usage without the Datadog Agent
            by tag(s).
          format: double
          type: number
        container_excl_agent_usage:
          description: The container usage without the Datadog Agent by tag(s).
          format: double
          type: number
        container_percentage:
          description: The percentage of container usage by tag(s).
          format: double
          type: number
        container_usage:
          description: The container usage by tag(s).
          format: double
          type: number
        cspm_containers_percentage:
          description: The percentage of Cloud Security Management Pro container usage
            by tag(s).
          format: double
          type: number
        cspm_containers_usage:
          description: The Cloud Security Management Pro container usage by tag(s).
          format: double
          type: number
        cspm_hosts_percentage:
          description: The percentage of Cloud Security Management Pro host usage
            by tag(s).
          format: double
          type: number
        cspm_hosts_usage:
          description: The Cloud Security Management Pro host usage by tag(s).
          format: double
          type: number
        custom_event_percentage:
          description: The percentage of Custom Events usage by tag(s).
          format: double
          type: number
        custom_event_usage:
          description: The total Custom Events usage by tag(s).
          format: double
          type: number
        custom_ingested_timeseries_percentage:
          description: The percentage of ingested custom metrics usage by tag(s).
          format: double
          type: number
        custom_ingested_timeseries_usage:
          description: The ingested custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_percentage:
          description: The percentage of indexed custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_usage:
          description: The indexed custom metrics usage by tag(s).
          format: double
          type: number
        cws_containers_percentage:
          description: The percentage of Cloud Workload Security container usage by
            tag(s).
          format: double
          type: number
        cws_containers_usage:
          description: The Cloud Workload Security container usage by tag(s).
          format: double
          type: number
        cws_hosts_percentage:
          description: The percentage of Cloud Workload Security host usage by tag(s).
          format: double
          type: number
        cws_hosts_usage:
          description: The Cloud Workload Security host usage by tag(s).
          format: double
          type: number
        dbm_hosts_percentage:
          description: The percentage of Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_hosts_usage:
          description: The Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_queries_percentage:
          description: The percentage of Database Monitoring queries usage by tag(s).
          format: double
          type: number
        dbm_queries_usage:
          description: The Database Monitoring queries usage by tag(s).
          format: double
          type: number
        estimated_indexed_logs_percentage:
          description: The percentage of estimated live indexed logs usage by tag(s).
          format: double
          type: number
        estimated_indexed_logs_usage:
          description: The estimated live indexed logs usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_percentage:
          description: The percentage of estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_usage:
          description: The estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_logs_percentage:
          description: The percentage of estimated live ingested logs usage by tag(s).
          format: double
          type: number
        estimated_ingested_logs_usage:
          description: The estimated live ingested logs usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_percentage:
          description: The percentage of estimated ingested spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_usage:
          description: The estimated ingested spans usage by tag(s).
          format: double
          type: number
        estimated_rum_sessions_percentage:
          description: The percentage of estimated rum sessions usage by tag(s).
          format: double
          type: number
        estimated_rum_sessions_usage:
          description: The estimated rum sessions usage by tag(s).
          format: double
          type: number
        fargate_percentage:
          description: The percentage of Fargate usage by tags.
          format: double
          type: number
        fargate_usage:
          description: The Fargate usage by tags.
          format: double
          type: number
        functions_percentage:
          description: The percentage of Lambda function usage by tag(s).
          format: double
          type: number
        functions_usage:
          description: The Lambda function usage by tag(s).
          format: double
          type: number
        indexed_spans_percentage:
          description: The percentage of APM Indexed Spans usage by tag(s).
          format: double
          type: number
        indexed_spans_usage:
          description: The total APM Indexed Spans usage by tag(s).
          format: double
          type: number
        infra_host_percentage:
          description: The percentage of infrastructure host usage by tag(s).
          format: double
          type: number
        infra_host_usage:
          description: The infrastructure host usage by tag(s).
          format: double
          type: number
        ingested_logs_bytes_percentage:
          description: The percentage of Ingested Logs usage by tag(s).
          format: double
          type: number
        ingested_logs_bytes_usage:
          description: The total Ingested Logs usage by tag(s).
          format: double
          type: number
        ingested_spans_bytes_percentage:
          description: The percentage of APM Ingested Spans usage by tag(s).
          format: double
          type: number
        ingested_spans_bytes_usage:
          description: The total APM Ingested Spans usage by tag(s).
          format: double
          type: number
        invocations_percentage:
          description: The percentage of Lambda invocation usage by tag(s).
          format: double
          type: number
        invocations_usage:
          description: The Lambda invocation usage by tag(s).
          format: double
          type: number
        lambda_traced_invocations_percentage:
          description: The percentage of Serverless APM usage by tag(s).
          format: double
          type: number
        lambda_traced_invocations_usage:
          description: The Serverless APM usage by tag(s).
          format: double
          type: number
        logs_indexed_15day_percentage:
          description: The percentage of Indexed Logs (15-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_15day_usage:
          description: The total Indexed Logs (15-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_180day_percentage:
          description: The percentage of Indexed Logs (180-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_180day_usage:
          description: The total Indexed Logs (180-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_30day_percentage:
          description: The percentage of Indexed Logs (30-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_30day_usage:
          description: The total Indexed Logs (30-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_360day_percentage:
          description: The percentage of Indexed Logs (360-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_360day_usage:
          description: The total Indexed Logs (360-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_3day_percentage:
          description: The percentage of Indexed Logs (3-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_3day_usage:
          description: The total Indexed Logs (3-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_45day_percentage:
          description: The percentage of Indexed Logs (45-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_45day_usage:
          description: The total Indexed Logs (45-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_60day_percentage:
          description: The percentage of Indexed Logs (60-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_60day_usage:
          description: The total Indexed Logs (60-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_7day_percentage:
          description: The percentage of Indexed Logs (7-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_7day_usage:
          description: The total Indexed Logs (7-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_90day_percentage:
          description: The percentage of Indexed Logs (90-day Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_90day_usage:
          description: The total Indexed Logs (90-day Retention) usage by tag(s).
          format: double
          type: number
        logs_indexed_custom_retention_percentage:
          description: The percentage of Indexed Logs (Custom Retention) usage by
            tag(s).
          format: double
          type: number
        logs_indexed_custom_retention_usage:
          description: The total Indexed Logs (Custom Retention) usage by tag(s).
          format: double
          type: number
        mobile_app_testing_percentage:
          description: The percentage of Synthetic mobile application test usage by
            tag(s).
          format: double
          type: number
        mobile_app_testing_usage:
          description: The Synthetic mobile application test usage by tag(s).
          format: double
          type: number
        ndm_netflow_percentage:
          description: The percentage of Network Device Monitoring NetFlow usage by
            tag(s).
          format: double
          type: number
        ndm_netflow_usage:
          description: The Network Device Monitoring NetFlow usage by tag(s).
          format: double
          type: number
        npm_host_percentage:
          description: The percentage of network host usage by tag(s).
          format: double
          type: number
        npm_host_usage:
          description: The network host usage by tag(s).
          format: double
          type: number
        obs_pipeline_bytes_percentage:
          description: The percentage of observability pipeline bytes usage by tag(s).
          format: double
          type: number
        obs_pipeline_bytes_usage:
          description: The observability pipeline bytes usage by tag(s).
          format: double
          type: number
        profiled_container_percentage:
          description: The percentage of profiled container usage by tag(s).
          format: double
          type: number
        profiled_container_usage:
          description: The profiled container usage by tag(s).
          format: double
          type: number
        profiled_fargate_percentage:
          description: The percentage of profiled Fargate task usage by tag(s).
          format: double
          type: number
        profiled_fargate_usage:
          description: The profiled Fargate task usage by tag(s).
          format: double
          type: number
        profiled_host_percentage:
          description: The percentage of profiled hosts usage by tag(s).
          format: double
          type: number
        profiled_host_usage:
          description: The profiled hosts usage by tag(s).
          format: double
          type: number
        rum_browser_mobile_sessions_percentage:
          description: The percentage of RUM Browser and Mobile usage by tag(s).
          format: double
          type: number
        rum_browser_mobile_sessions_usage:
          description: The total RUM Browser and Mobile usage by tag(s).
          format: double
          type: number
        rum_replay_sessions_percentage:
          description: The percentage of RUM Replay Sessions usage by tag(s).
          format: double
          type: number
        rum_replay_sessions_usage:
          description: The total RUM Replay Sessions usage by tag(s).
          format: double
          type: number
        sds_scanned_bytes_percentage:
          description: The percentage of Sensitive Data Scanner usage by tag(s).
          format: double
          type: number
        sds_scanned_bytes_usage:
          description: The total Sensitive Data Scanner usage by tag(s).
          format: double
          type: number
        serverless_apps_percentage:
          description: The percentage of Serverless Apps usage by tag(s).
          format: double
          type: number
        serverless_apps_usage:
          description: The total Serverless Apps usage by tag(s).
          format: double
          type: number
        siem_ingested_bytes_percentage:
          description: The percentage of SIEM usage by tag(s).
          format: double
          type: number
        siem_ingested_bytes_usage:
          description: The total SIEM usage by tag(s).
          format: double
          type: number
        snmp_percentage:
          description: The percentage of network device usage by tag(s).
          format: double
          type: number
        snmp_usage:
          description: The network device usage by tag(s).
          format: double
          type: number
        universal_service_monitoring_percentage:
          description: The percentage of universal service monitoring usage by tag(s).
          format: double
          type: number
        universal_service_monitoring_usage:
          description: The universal service monitoring usage by tag(s).
          format: double
          type: number
        vuln_management_hosts_percentage:
          description: The percentage of Application Vulnerability Management usage
            by tag(s).
          format: double
          type: number
        vuln_management_hosts_usage:
          description: The Application Vulnerability Management usage by tag(s).
          format: double
          type: number
      type: object
    NotifyEndState:
      description: A notification end state.
      enum:
      - alert
      - no data
      - warn
      example: alert
      type: string
      x-enum-varnames:
      - ALERT
      - NO_DATA
      - WARN
    NotifyEndStates:
      default:
      - alert
      - no data
      - warn
      description: States for which `notify_end_types` sends out notifications for.
      example:
      - alert
      - no data
      - warn
      items:
        $ref: '#/components/schemas/NotifyEndState'
      type: array
    NotifyEndType:
      description: A notification end type.
      enum:
      - canceled
      - expired
      example: expired
      type: string
      x-enum-varnames:
      - CANCELED
      - EXPIRED
    NotifyEndTypes:
      default:
      - expired
      description: 'If set, notifies if a monitor is in an alert-worthy state (`ALERT`,
        `WARNING`, or `NO DATA`)

        when this downtime expires or is canceled. Applied to monitors that change
        states during

        the downtime (such as from `OK` to `ALERT`, `WARNING`, or `NO DATA`), and
        to monitors that

        already have an alert-worthy state when downtime begins.'
      example:
      - canceled
      - expired
      items:
        $ref: '#/components/schemas/NotifyEndType'
      type: array
    OrgDowngradedResponse:
      description: Status of downgrade
      properties:
        message:
          description: Information pertaining to the downgraded child organization.
          type: string
      type: object
    Organization:
      description: Create, edit, and manage organizations.
      properties:
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        created:
          description: Date of the organization creation.
          example: '2019-09-26T17:28:28Z'
          readOnly: true
          type: string
        description:
          description: Description of the organization.
          example: some description
          type: string
        name:
          description: The name of the new child-organization, limited to 32 characters.
          example: New child org
          maxLength: 32
          type: string
        public_id:
          description: The `public_id` of the organization you are operating within.
          example: abcdef12345
          type: string
        settings:
          $ref: '#/components/schemas/OrganizationSettings'
        subscription:
          $ref: '#/components/schemas/OrganizationSubscription'
        trial:
          description: Only available for MSP customers. Allows child organizations
            to be created on a trial plan.
          example: false
          type: boolean
      type: object
    OrganizationBilling:
      deprecated: true
      description: A JSON array of billing type.
      example:
        type: parent_billing
      properties:
        type:
          description: The type of billing. Only `parent_billing` is supported.
          type: string
      type: object
    OrganizationCreateBody:
      description: Object describing an organization to create.
      properties:
        billing:
          $ref: '#/components/schemas/OrganizationBilling'
        name:
          description: The name of the new child-organization, limited to 32 characters.
          example: New child org
          maxLength: 32
          type: string
        subscription:
          $ref: '#/components/schemas/OrganizationSubscription'
      required:
      - name
      type: object
    OrganizationCreateResponse:
      description: Response object for an organization creation.
      properties:
        api_key:
          $ref: '#/components/schemas/ApiKey'
        application_key:
          $ref: '#/components/schemas/ApplicationKey'
        org:
          $ref: '#/components/schemas/Organization'
        user:
          $ref: '#/components/schemas/User'
      type: object
    OrganizationListResponse:
      description: Response with the list of organizations.
      properties:
        orgs:
          description: Array of organization objects.
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      type: object
    OrganizationResponse:
      description: Response with an organization.
      properties:
        org:
          $ref: '#/components/schemas/Organization'
      type: object
    OrganizationSettings:
      description: A JSON array of settings.
      properties:
        private_widget_share:
          description: Whether or not the organization users can share widgets outside
            of Datadog.
          example: false
          type: boolean
        saml:
          $ref: '#/components/schemas/OrganizationSettingsSaml'
        saml_autocreate_access_role:
          $ref: '#/components/schemas/AccessRole'
        saml_autocreate_users_domains:
          $ref: '#/components/schemas/OrganizationSettingsSamlAutocreateUsersDomains'
        saml_can_be_enabled:
          description: Whether or not SAML can be enabled for this organization.
          example: false
          type: boolean
        saml_idp_endpoint:
          description: Identity provider endpoint for SAML authentication.
          example: https://my.saml.endpoint
          type: string
        saml_idp_initiated_login:
          $ref: '#/components/schemas/OrganizationSettingsSamlIdpInitiatedLogin'
        saml_idp_metadata_uploaded:
          description: Whether or not a SAML identity provider metadata file was provided
            to the Datadog organization.
          example: false
          type: boolean
        saml_login_url:
          description: URL for SAML logging.
          example: https://my.saml.login.url
          type: string
        saml_strict_mode:
          $ref: '#/components/schemas/OrganizationSettingsSamlStrictMode'
      type: object
    OrganizationSettingsSaml:
      description: 'Set the boolean property enabled to enable or disable single sign
        on with SAML.

        See the SAML documentation for more information about all SAML settings.'
      properties:
        enabled:
          description: Whether or not SAML is enabled for this organization.
          example: false
          type: boolean
      type: object
    OrganizationSettingsSamlAutocreateUsersDomains:
      description: Has two properties, `enabled` (boolean) and `domains`, which is
        a list of domains without the @ symbol.
      properties:
        domains:
          description: List of domains where the SAML automated user creation is enabled.
          items:
            description: Domain to automate user creation from.
            example: example.com
            type: string
          type: array
        enabled:
          description: Whether or not the automated user creation based on SAML domain
            is enabled.
          example: false
          type: boolean
      type: object
    OrganizationSettingsSamlIdpInitiatedLogin:
      description: Has one property enabled (boolean).
      properties:
        enabled:
          description: 'Whether SAML IdP initiated login is enabled, learn more

            in the [SAML documentation](https://docs.datadoghq.com/account_management/saml/#idp-initiated-login).'
          example: false
          type: boolean
      type: object
    OrganizationSettingsSamlStrictMode:
      description: Has one property enabled (boolean).
      properties:
        enabled:
          description: 'Whether or not the SAML strict mode is enabled. If true, all
            users must log in with SAML.

            Learn more on the [SAML Strict documentation](https://docs.datadoghq.com/account_management/saml/#saml-strict).'
          example: false
          type: boolean
      type: object
    OrganizationSubscription:
      deprecated: true
      description: Subscription definition.
      example:
        type: pro
      properties:
        type:
          description: The subscription type. Types available are `trial`, `free`,
            and `pro`.
          type: string
      type: object
    PagerDutyService:
      description: The PagerDuty service that is available for integration with Datadog.
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ''
          type: string
        service_name:
          description: Your service name associated with a service key in PagerDuty.
          example: ''
          type: string
      required:
      - service_name
      - service_key
      type: object
    PagerDutyServiceKey:
      description: PagerDuty service object key.
      properties:
        service_key:
          description: Your service key in PagerDuty.
          example: ''
          type: string
      required:
      - service_key
      type: object
    PagerDutyServiceName:
      description: PagerDuty service object name.
      properties:
        service_name:
          description: Your service name associated service key in PagerDuty.
          example: ''
          type: string
      required:
      - service_name
      type: object
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    Point:
      description: Array of timeseries points.
      example:
      - 1575317847.0
      - 0.5
      items:
        description: 'Each point is of the form `[POSIX_timestamp, numeric_value]`.

          The timestamp should be in seconds and current.

          The numeric value format should be a 32bit float gauge-type value.

          Current is defined as not more than 10 minutes in the future or more than
          1 hour in the past.'
        format: double
        nullable: true
        type: number
      maxItems: 2
      minItems: 2
      type: array
    QuerySortOrder:
      default: desc
      description: Direction of sort.
      enum:
      - asc
      - desc
      type: string
      x-enum-varnames:
      - ASC
      - DESC
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    SLOBulkDelete:
      additionalProperties:
        description: An array of all SLO timeframes.
        items:
          $ref: '#/components/schemas/SLOTimeframe'
        type: array
      description: 'A map of service level objective object IDs to arrays of timeframes,

        which indicate the thresholds to delete for each ID.'
      example:
        id1:
        - 7d
        - 30d
        id2:
        - 7d
        - 30d
      type: object
    SLOBulkDeleteError:
      description: Object describing the error.
      properties:
        id:
          description: 'The ID of the service level objective object associated with

            this error.'
          example: ''
          type: string
        message:
          description: The error message.
          example: ''
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOErrorTimeframe'
      required:
      - id
      - timeframe
      - message
      type: object
    SLOBulkDeleteResponse:
      description: 'The bulk partial delete service level objective object endpoint

        response.


        This endpoint operates on multiple service level objective objects, so

        it may be partially successful. In such cases, the "data" and "error"

        fields in this response indicate which deletions succeeded and failed.'
      properties:
        data:
          $ref: '#/components/schemas/SLOBulkDeleteResponseData'
        errors:
          description: Array of errors object returned.
          items:
            $ref: '#/components/schemas/SLOBulkDeleteError'
          type: array
      type: object
    SLOBulkDeleteResponseData:
      description: An array of service level objective objects.
      properties:
        deleted:
          description: 'An array of service level objective object IDs that indicates

            which objects that were completely deleted.'
          items:
            description: A deleted SLO ID.
            type: string
          type: array
        updated:
          description: 'An array of service level objective object IDs that indicates

            which objects that were modified (objects for which at least one

            threshold was deleted, but that were not completely deleted).'
          items:
            description: An updated SLO ID.
            type: string
          type: array
      type: object
    SLOCorrection:
      description: The response object of a list of SLO corrections.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionResponseAttributes'
        id:
          description: The ID of the SLO correction.
          type: string
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionCategory:
      description: Category the SLO correction belongs to.
      enum:
      - Scheduled Maintenance
      - Outside Business Hours
      - Deployment
      - Other
      example: Scheduled Maintenance
      type: string
      x-enum-varnames:
      - SCHEDULED_MAINTENANCE
      - OUTSIDE_BUSINESS_HOURS
      - DEPLOYMENT
      - OTHER
    SLOCorrectionCreateData:
      description: The data object associated with the SLO correction to be created.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      required:
      - type
      type: object
    SLOCorrectionCreateRequest:
      description: An object that defines a correction to be applied to an SLO.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionCreateData'
      type: object
    SLOCorrectionCreateRequestAttributes:
      description: The attribute object associated with the SLO correction to be created.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: Length of time (in seconds) for a specified `rrule` recurring
            SLO correction.
          example: 1600000000
          format: int64
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        rrule:
          description: 'The recurrence rules as defined in the iCalendar RFC 5545.
            The supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.'
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          type: string
        slo_id:
          description: ID of the SLO that this correction applies to.
          example: sloId
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC").
          example: UTC
          type: string
      required:
      - slo_id
      - start
      - category
      type: object
    SLOCorrectionListResponse:
      description: A list of  SLO correction objects.
      properties:
        data:
          description: The list of of SLO corrections objects.
          items:
            $ref: '#/components/schemas/SLOCorrection'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    SLOCorrectionResponse:
      description: The response object of an SLO correction.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrection'
      type: object
    SLOCorrectionResponseAttributes:
      description: The attribute object associated with the SLO correction.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        created_at:
          description: The epoch timestamp of when the correction was created at.
          format: int64
          nullable: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: Length of time (in seconds) for a specified `rrule` recurring
            SLO correction.
          example: 3600
          format: int64
          nullable: true
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          format: int64
          nullable: true
          type: integer
        modified_at:
          description: The epoch timestamp of when the correction was modified at.
          format: int64
          nullable: true
          type: integer
        modifier:
          $ref: '#/components/schemas/SLOCorrectionResponseAttributesModifier'
        rrule:
          description: 'The recurrence rules as defined in the iCalendar RFC 5545.
            The supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT`, and `UNTIL`.'
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          nullable: true
          type: string
        slo_id:
          description: ID of the SLO that this correction applies to.
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC").
          type: string
      type: object
    SLOCorrectionResponseAttributesModifier:
      description: Modifier of the object.
      nullable: true
      properties:
        email:
          description: Email of the Modifier.
          type: string
        handle:
          description: Handle of the Modifier.
          type: string
        name:
          description: Name of the Modifier.
          type: string
      type: object
    SLOCorrectionType:
      default: correction
      description: SLO correction resource type.
      enum:
      - correction
      example: correction
      type: string
      x-enum-varnames:
      - CORRECTION
    SLOCorrectionUpdateData:
      description: The data object associated with the SLO correction to be updated.
      properties:
        attributes:
          $ref: '#/components/schemas/SLOCorrectionUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/SLOCorrectionType'
      type: object
    SLOCorrectionUpdateRequest:
      description: An object that defines a correction to be applied to an SLO.
      properties:
        data:
          $ref: '#/components/schemas/SLOCorrectionUpdateData'
      type: object
    SLOCorrectionUpdateRequestAttributes:
      description: The attribute object associated with the SLO correction to be updated.
      properties:
        category:
          $ref: '#/components/schemas/SLOCorrectionCategory'
        description:
          description: Description of the correction being made.
          type: string
        duration:
          description: Length of time (in seconds) for a specified `rrule` recurring
            SLO correction.
          example: 3600
          format: int64
          type: integer
        end:
          description: Ending time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        rrule:
          description: 'The recurrence rules as defined in the iCalendar RFC 5545.
            The supported rules for SLO corrections

            are `FREQ`, `INTERVAL`, `COUNT`, and `UNTIL`.'
          example: FREQ=DAILY;INTERVAL=10;COUNT=5
          type: string
        start:
          description: Starting time of the correction in epoch seconds.
          example: 1600000000
          format: int64
          type: integer
        timezone:
          description: The timezone to display in the UI for the correction times
            (defaults to "UTC").
          example: UTC
          type: string
      type: object
    SLOCreator:
      description: The creator of the SLO
      nullable: true
      properties:
        email:
          description: Email of the creator.
          type: string
        id:
          description: User ID of the creator.
          format: int64
          type: integer
        name:
          description: Name of the creator.
          nullable: true
          type: string
      type: object
    SLODeleteResponse:
      description: A response list of all service level objective deleted.
      properties:
        data:
          description: An array containing the ID of the deleted service level objective
            object.
          items:
            description: ID of a deleted SLO.
            type: string
          type: array
        errors:
          additionalProperties:
            description: Error preventing the SLO deletion.
            type: string
          description: An dictionary containing the ID of the SLO as key and a deletion
            error as value.
          type: object
      type: object
    SLOErrorBudgetRemainingData:
      additionalProperties:
        description: Remaining error budget.
        format: double
        type: number
      description: A mapping of threshold `timeframe` to the remaining error budget.
      example:
        7d: 100.0
      type: object
    SLOErrorTimeframe:
      description: 'The timeframe of the threshold associated with this error

        or "all" if all thresholds are affected.'
      enum:
      - 7d
      - 30d
      - 90d
      - all
      example: 30d
      type: string
      x-enum-varnames:
      - SEVEN_DAYS
      - THIRTY_DAYS
      - NINETY_DAYS
      - ALL
    SLOHistoryMetrics:
      description: 'A `metric` based SLO history response.


        This is not included in responses for `monitor` based SLOs.'
      properties:
        denominator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        interval:
          description: The aggregated query interval for the series data. It's implicit
            based on the query time window.
          example: 0
          format: int64
          type: integer
        message:
          description: Optional message if there are specific query issues/warnings.
          example: ''
          type: string
        numerator:
          $ref: '#/components/schemas/SLOHistoryMetricsSeries'
        query:
          description: The combined numerator and denominator query CSV.
          example: ''
          type: string
        res_type:
          description: The series result type. This mimics `batch_query` response
            type.
          example: ''
          type: string
        resp_version:
          description: The series response version type. This mimics `batch_query`
            response type.
          example: 0
          format: int64
          type: integer
        times:
          description: An array of query timestamps in EPOCH milliseconds.
          example: []
          items:
            description: A timestamp in EPOCH milliseconds.
            format: double
            type: number
          type: array
      required:
      - res_type
      - interval
      - resp_version
      - query
      - times
      - numerator
      - denominator
      type: object
    SLOHistoryMetricsSeries:
      description: 'A representation of `metric` based SLO time series for the provided
        queries.

        This is the same response type from `batch_query` endpoint.'
      properties:
        count:
          description: Count of submitted metrics.
          example: 0
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/SLOHistoryMetricsSeriesMetadata'
        sum:
          description: Total sum of the query.
          example: 0.0
          format: double
          type: number
        values:
          description: The query values for each metric.
          example: []
          items:
            description: A metric name and its value.
            format: double
            type: number
          type: array
      required:
      - count
      - sum
      - values
      type: object
    SLOHistoryMetricsSeriesMetadata:
      description: Query metadata.
      example: {}
      properties:
        aggr:
          description: Query aggregator function.
          type: string
        expression:
          description: Query expression.
          type: string
        metric:
          description: Query metric used.
          type: string
        query_index:
          description: Query index from original combined query.
          format: int64
          type: integer
        scope:
          description: Query scope.
          type: string
        unit:
          description: 'An array of metric units that contains up to two unit objects.

            For example, bytes represents one unit object and bytes per second represents
            two unit objects.

            If a metric query only has one unit object, the second array element is
            null.'
          example:
          - family: bytes
            id: 2
            name: byte
            plural: bytes
            scale_factor: 1.0
            short_name: B
          - null
          items:
            $ref: '#/components/schemas/SLOHistoryMetricsSeriesMetadataUnit'
          nullable: true
          type: array
      type: object
    SLOHistoryMetricsSeriesMetadataUnit:
      description: An Object of metric units.
      nullable: true
      properties:
        family:
          description: The family of metric unit, for example `bytes` is the family
            for `kibibyte`, `byte`, and `bit` units.
          type: string
        id:
          description: The ID of the metric unit.
          format: int64
          type: integer
        name:
          description: The unit of the metric, for instance `byte`.
          type: string
        plural:
          description: The plural Unit of metric, for instance `bytes`.
          nullable: true
          type: string
        scale_factor:
          description: The scale factor of metric unit, for instance `1.0`.
          format: double
          type: number
        short_name:
          description: A shorter and abbreviated version of the metric unit, for instance
            `B`.
          nullable: true
          type: string
      type: object
    SLOHistoryMonitor:
      description: 'An object that holds an SLI value and its associated data. It
        can represent an SLO''s overall SLI value.

        This can also represent the SLI value for a specific monitor in multi-monitor
        SLOs, or a group in grouped SLOs.'
      properties:
        error_budget_remaining:
          $ref: '#/components/schemas/SLOErrorBudgetRemainingData'
        errors:
          description: An array of error objects returned while querying the history
            data for the service level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseErrorWithType'
          type: array
        group:
          description: For groups in a grouped SLO, this is the group name.
          example: name
          type: string
        history:
          description: For `monitor` based SLOs, this includes the aggregated history
            as arrays that include time series and uptime data where `0=monitor` is
            in `OK` state and `1=monitor` is in `alert` state.
          example:
          - - 1579212382
            - 0
          items:
            description: Represents an array time series data.
            example:
            - 1579212382
            - 0
            items:
              description: A time series data point which is a tuple of (timestamp,
                value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        monitor_modified:
          description: For `monitor` based SLOs, this is the last modified timestamp
            in epoch seconds of the monitor.
          example: 1615867200
          format: int64
          type: integer
        monitor_type:
          description: For `monitor` based SLOs, this describes the type of monitor.
          example: string
          type: string
        name:
          description: For groups in a grouped SLO, this is the group name. For monitors
            in a multi-monitor SLO, this is the monitor name.
          example: string
          type: string
        precision:
          deprecated: true
          description: The amount of decimal places the SLI value is accurate to for
            the given from `&&` to timestamp. Use `span_precision` instead.
          example: 2.0
          format: double
          type: number
        preview:
          description: 'For `monitor` based SLOs, when `true` this indicates that
            a replay is in progress to give an accurate uptime

            calculation.'
          example: true
          type: boolean
        sli_value:
          description: The current SLI value of the SLO over the history window.
          example: 99.99
          format: double
          nullable: true
          type: number
        span_precision:
          description: The amount of decimal places the SLI value is accurate to for
            the given from `&&` to timestamp.
          example: 2.0
          format: double
          type: number
        uptime:
          deprecated: true
          description: Use `sli_value` instead.
          example: 99.99
          format: double
          type: number
      type: object
    SLOHistoryResponse:
      description: A service level objective history response.
      properties:
        data:
          $ref: '#/components/schemas/SLOHistoryResponseData'
        errors:
          description: A list of errors while querying the history data for the service
            level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseError'
          nullable: true
          type: array
      type: object
    SLOHistoryResponseData:
      description: An array of service level objective objects.
      properties:
        from_ts:
          description: The `from` timestamp in epoch seconds.
          example: 1615323990
          format: int64
          type: integer
        group_by:
          description: 'For `metric` based SLOs where the query includes a group-by
            clause, this represents the list of grouping parameters.


            This is not included in responses for `monitor` based SLOs.'
          items:
            description: A grouping parameter.
            type: string
          type: array
        groups:
          description: 'For grouped SLOs, this represents SLI data for specific groups.


            This is not included in the responses for `metric` based SLOs.'
          items:
            $ref: '#/components/schemas/SLOHistoryMonitor'
          type: array
        monitors:
          description: 'For multi-monitor SLOs, this represents SLI data for specific
            monitors.


            This is not included in the responses for `metric` based SLOs.'
          items:
            $ref: '#/components/schemas/SLOHistoryMonitor'
          type: array
        overall:
          $ref: '#/components/schemas/SLOHistorySLIData'
        series:
          $ref: '#/components/schemas/SLOHistoryMetrics'
        thresholds:
          additionalProperties:
            $ref: '#/components/schemas/SLOThreshold'
          description: mapping of string timeframe to the SLO threshold.
          example:
            my_service:
              target: 95
              timeframe: 7d
          type: object
        to_ts:
          description: The `to` timestamp in epoch seconds.
          example: 1615928790
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/SLOType'
        type_id:
          $ref: '#/components/schemas/SLOTypeNumeric'
      type: object
    SLOHistoryResponseError:
      description: A list of errors while querying the history data for the service
        level objective.
      properties:
        error:
          description: Human readable error.
          type: string
      type: object
    SLOHistoryResponseErrorWithType:
      description: An object describing the error with error type and error message.
      properties:
        error_message:
          description: A message with more details about the error.
          example: ''
          type: string
        error_type:
          description: Type of the error.
          example: ''
          type: string
      required:
      - error_type
      - error_message
      type: object
    SLOHistorySLIData:
      description: 'An object that holds an SLI value and its associated data. It
        can represent an SLO''s overall SLI value.

        This can also represent the SLI value for a specific monitor in multi-monitor
        SLOs, or a group in grouped SLOs.'
      properties:
        error_budget_remaining:
          $ref: '#/components/schemas/SLOErrorBudgetRemainingData'
        errors:
          description: An array of error objects returned while querying the history
            data for the service level objective.
          items:
            $ref: '#/components/schemas/SLOHistoryResponseErrorWithType'
          type: array
        group:
          description: For groups in a grouped SLO, this is the group name.
          example: name
          type: string
        history:
          description: For `monitor` based SLOs, this includes the aggregated history
            as arrays that include time series and uptime data where `0=monitor` is
            in `OK` state and `1=monitor` is in `alert` state.
          example:
          - - 1579212382
            - 0
          items:
            description: Represents an array time series data.
            example:
            - 1579212382
            - 0
            items:
              description: A time series data point which is a tuple of (timestamp,
                value).
              format: double
              type: number
            maxItems: 2
            minItems: 2
            type: array
          type: array
        monitor_modified:
          description: For `monitor` based SLOs, this is the last modified timestamp
            in epoch seconds of the monitor.
          example: 1615867200
          format: int64
          type: integer
        monitor_type:
          description: For `monitor` based SLOs, this describes the type of monitor.
          example: string
          type: string
        name:
          description: For groups in a grouped SLO, this is the group name. For monitors
            in a multi-monitor SLO, this is the monitor name.
          example: string
          type: string
        precision:
          additionalProperties:
            description: The number of accurate decimals.
            format: double
            type: number
          description: A mapping of threshold `timeframe` to number of accurate decimals,
            regardless of the from && to timestamp.
          example:
            30d: 1
            7d: 2
          type: object
        preview:
          description: 'For `monitor` based SLOs, when `true` this indicates that
            a replay is in progress to give an accurate uptime

            calculation.'
          example: true
          type: boolean
        sli_value:
          description: The current SLI value of the SLO over the history window.
          example: 99.99
          format: double
          nullable: true
          type: number
        span_precision:
          description: The amount of decimal places the SLI value is accurate to for
            the given from `&&` to timestamp.
          example: 2.0
          format: double
          type: number
        uptime:
          deprecated: true
          description: Use `sli_value` instead.
          example: 99.99
          format: double
          nullable: true
          type: number
      type: object
    SLOListResponse:
      description: A response with one or more service level objective.
      properties:
        data:
          description: An array of service level objective objects.
          items:
            $ref: '#/components/schemas/ServiceLevelObjective'
          type: array
        errors:
          description: 'An array of error messages. Each endpoint documents how/whether
            this field is

            used.'
          items:
            description: The error message.
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/SLOListResponseMetadata'
      type: object
    SLOListResponseMetadata:
      description: The metadata object containing additional information about the
        list of SLOs.
      properties:
        page:
          $ref: '#/components/schemas/SLOListResponseMetadataPage'
      type: object
    SLOListResponseMetadataPage:
      description: The object containing information about the pages of the list of
        SLOs.
      properties:
        total_count:
          description: The total number of resources that could be retrieved ignoring
            the parameters and filters in the request.
          format: int64
          type: integer
        total_filtered_count:
          description: The total number of resources that match the parameters and
            filters in the request. This attribute can be used by a client to determine
            the total number of pages.
          format: int64
          type: integer
      type: object
    SLOOverallStatuses:
      description: Overall status of the SLO by timeframes.
      properties:
        error:
          description: Error message if SLO status or error budget could not be calculated.
          nullable: true
          type: string
        error_budget_remaining:
          description: Remaining error budget of the SLO in percentage.
          example: 100
          format: double
          nullable: true
          type: number
        indexed_at:
          description: 'timestamp (UNIX time in seconds) of when the SLO status and
            error budget

            were calculated.'
          example: 1662496260
          format: int64
          type: integer
        raw_error_budget_remaining:
          $ref: '#/components/schemas/SLORawErrorBudgetRemaining'
        span_precision:
          description: The amount of decimal places the SLI value is accurate to.
          example: 2
          format: int64
          nullable: true
          type: integer
        state:
          $ref: '#/components/schemas/SLOState'
        status:
          description: The status of the SLO.
          example: 100
          format: double
          nullable: true
          type: number
        target:
          description: The target of the SLO.
          example: 99
          format: double
          type: number
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
      type: object
    SLORawErrorBudgetRemaining:
      description: Error budget remaining for an SLO.
      nullable: true
      properties:
        unit:
          description: Error budget remaining unit.
          example: requests
          type: string
        value:
          description: Error budget remaining value.
          example: 60
          format: double
          type: number
      type: object
    SLOResponse:
      description: A service level objective response containing a single service
        level objective.
      properties:
        data:
          $ref: '#/components/schemas/SLOResponseData'
        errors:
          description: 'An array of error messages. Each endpoint documents how/whether
            this field is

            used.'
          items:
            description: The error message.
            type: string
          type: array
      type: object
    SLOResponseData:
      description: 'A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).'
      properties:
        configured_alert_ids:
          description: A list of SLO monitors IDs that reference this SLO. This field
            is returned only when `with_configured_alert_ids` parameter is true in
            query.
          example:
          - 123
          - 456
          - 789
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        created_at:
          description: 'Creation timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: 'A user-defined description of the service level objective.


            Always included in service level objective responses (but may be `null`).

            Optional in create/update requests.'
          nullable: true
          type: string
        groups:
          description: 'A list of (up to 20) monitor groups that narrow the scope
            of a monitor service level objective.


            Included in service level objective responses if it is not empty. Optional
            in

            create/update requests for monitor service level objectives, but may only
            be

            used when then length of the `monitor_ids` field is one.'
          example:
          - env:prod
          - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: 'A unique identifier for the service level objective object.


            Always included in service level objective responses.'
          readOnly: true
          type: string
        modified_at:
          description: 'Modification timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: 'A list of monitor ids that defines the scope of a monitor
            service level

            objective. **Required if type is `monitor`**.'
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: 'The union of monitor tags for all monitors referenced by the
            `monitor_ids`

            field.

            Always included in service level objective responses for monitor service
            level

            objectives (but may be empty). Ignored in create/update requests. Does
            not

            affect which monitors are included in the service level objective (that
            is

            determined entirely by the `monitor_ids` field).'
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: 'A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be empty).

            Optional in create/update requests.'
          example:
          - env:prod
          - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: 'The target threshold such that when the service level indicator
            is above this

            threshold over the given timeframe, the objective is being met.'
          example: 99.9
          format: double
          type: number
        thresholds:
          description: 'The thresholds (timeframes and associated targets) for this
            service level

            objective object.'
          example:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: 'The optional warning threshold such that when the service
            level indicator is

            below this value for the given threshold, but above the target threshold,
            the

            objective appears in a "warning" state. This value must be greater than
            the target

            threshold.'
          example: 99.95
          format: double
          type: number
      type: object
    SLOState:
      description: State of the SLO.
      enum:
      - breached
      - warning
      - ok
      - no_data
      example: ok
      type: string
      x-enum-varnames:
      - BREACHED
      - WARNING
      - OK
      - NO_DATA
    SLOStatus:
      description: Status of the SLO's primary timeframe.
      properties:
        calculation_error:
          description: Error message if SLO status or error budget could not be calculated.
          nullable: true
          type: string
        error_budget_remaining:
          description: Remaining error budget of the SLO in percentage.
          example: 100
          format: double
          nullable: true
          type: number
        indexed_at:
          description: 'timestamp (UNIX time in seconds) of when the SLO status and
            error budget

            were calculated.'
          example: 1662496260
          format: int64
          type: integer
        raw_error_budget_remaining:
          $ref: '#/components/schemas/SLORawErrorBudgetRemaining'
        sli:
          description: The current service level indicator (SLI) of the SLO, also
            known as 'status'. This is a percentage value from 0-100 (inclusive).
          example: 100
          format: double
          nullable: true
          type: number
        span_precision:
          description: The number of decimal places the SLI value is accurate to.
          example: 2
          format: int64
          nullable: true
          type: integer
        state:
          $ref: '#/components/schemas/SLOState'
      type: object
    SLOThreshold:
      description: SLO thresholds (target and optionally warning) for a single time
        window.
      properties:
        target:
          description: 'The target value for the service level indicator within the
            corresponding

            timeframe.'
          example: 99.9
          format: double
          type: number
        target_display:
          description: 'A string representation of the target that indicates its precision.

            It uses trailing zeros to show significant decimal places (for example
            `98.00`).


            Always included in service level objective responses. Ignored in

            create/update requests.'
          example: '99.9'
          type: string
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        warning:
          description: The warning value for the service level objective.
          example: 90.0
          format: double
          type: number
        warning_display:
          description: 'A string representation of the warning target (see the description
            of

            the `target_display` field for details).


            Included in service level objective responses if a warning target exists.

            Ignored in create/update requests.'
          example: '90.0'
          type: string
      required:
      - timeframe
      - target
      type: object
    SLOTimeframe:
      description: The SLO time window options.
      enum:
      - 7d
      - 30d
      - 90d
      - custom
      example: 30d
      type: string
      x-enum-varnames:
      - SEVEN_DAYS
      - THIRTY_DAYS
      - NINETY_DAYS
      - CUSTOM
    SLOType:
      description: The type of the service level objective.
      enum:
      - metric
      - monitor
      example: metric
      type: string
      x-enum-varnames:
      - METRIC
      - MONITOR
    SLOTypeNumeric:
      description: 'A numeric representation of the type of the service level objective
        (`0` for

        monitor, `1` for metric). Always included in service level objective responses.

        Ignored in create/update requests.'
      enum:
      - 0
      - 1
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
      - MONITOR
      - METRIC
    SearchSLOQuery:
      description: 'A metric-based SLO. **Required if type is `metric`**. Note that
        Datadog only allows the sum by aggregator

        to be used because this will sum up all request counts instead of averaging
        them, or taking the max or

        min of all of those requests.'
      nullable: true
      properties:
        denominator:
          description: A Datadog metric query for total (valid) events.
          example: sum:my.custom.metric{*}.as_count()
          type: string
        metrics:
          description: 'Metric names used in the query''s numerator and denominator.

            This field will return null and will be implemented in the next version
            of this endpoint.'
          example:
          - my.custom.metric
          - my.other.custom.metric
          items:
            description: Metric name.
            type: string
          nullable: true
          type: array
        numerator:
          description: A Datadog metric query for good events.
          example: sum:my.custom.metric{type:good}.as_count()
          type: string
      type: object
    SearchSLOResponse:
      description: A search SLO response containing results from the search query.
      properties:
        data:
          $ref: '#/components/schemas/SearchSLOResponseData'
        links:
          $ref: '#/components/schemas/SearchSLOResponseLinks'
        meta:
          $ref: '#/components/schemas/SearchSLOResponseMeta'
      type: object
    SearchSLOResponseData:
      description: Data from search SLO response.
      properties:
        attributes:
          $ref: '#/components/schemas/SearchSLOResponseDataAttributes'
        type:
          description: Type of service level objective result.
          example: ''
          type: string
      type: object
    SearchSLOResponseDataAttributes:
      description: Attributes
      properties:
        facets:
          $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacets'
        slos:
          description: SLOs
          items:
            $ref: '#/components/schemas/SearchServiceLevelObjective'
          type: array
      type: object
    SearchSLOResponseDataAttributesFacets:
      description: Facets
      properties:
        all_tags:
          description: All tags associated with an SLO.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
        creator_name:
          description: Creator of an SLO.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
        env_tags:
          description: Tags with the `env` tag key.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
        service_tags:
          description: Tags with the `service` tag key.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
        slo_type:
          description: Type of SLO.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectInt'
          type: array
        target:
          description: SLO Target
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectInt'
          type: array
        team_tags:
          description: Tags with the `team` tag key.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
        timeframe:
          description: Timeframes of SLOs.
          items:
            $ref: '#/components/schemas/SearchSLOResponseDataAttributesFacetsObjectString'
          type: array
      type: object
    SearchSLOResponseDataAttributesFacetsObjectInt:
      description: Facet
      properties:
        count:
          description: Count
          format: int64
          type: integer
        name:
          description: Facet
          format: double
          type: number
      type: object
    SearchSLOResponseDataAttributesFacetsObjectString:
      description: Facet
      properties:
        count:
          description: Count
          format: int64
          type: integer
        name:
          description: Facet
          type: string
      type: object
    SearchSLOResponseLinks:
      description: Pagination links.
      properties:
        first:
          description: Link to last page.
          type: string
        last:
          description: Link to first page.
          nullable: true
          type: string
        next:
          description: Link to the next page.
          type: string
        prev:
          description: Link to previous page.
          nullable: true
          type: string
        self:
          description: Link to current page.
          type: string
      type: object
    SearchSLOResponseMeta:
      description: Searches metadata returned by the API.
      properties:
        pagination:
          $ref: '#/components/schemas/SearchSLOResponseMetaPage'
      type: object
    SearchSLOResponseMetaPage:
      description: Pagination metadata returned by the API.
      properties:
        first_number:
          description: The first number.
          format: int64
          type: integer
        last_number:
          description: The last number.
          format: int64
          type: integer
        next_number:
          description: The next number.
          format: int64
          type: integer
        number:
          description: The page number.
          format: int64
          type: integer
        prev_number:
          description: The previous page number.
          format: int64
          type: integer
        size:
          description: The size of the response.
          format: int64
          type: integer
        total:
          description: The total number of SLOs in the response.
          format: int64
          type: integer
        type:
          description: Type of pagination.
          type: string
      type: object
    SearchSLOThreshold:
      description: SLO thresholds (target and optionally warning) for a single time
        window.
      properties:
        target:
          description: 'The target value for the service level indicator within the
            corresponding

            timeframe.'
          example: 99.9
          format: double
          type: number
        target_display:
          description: 'A string representation of the target that indicates its precision.

            It uses trailing zeros to show significant decimal places (for example
            `98.00`).


            Always included in service level objective responses. Ignored in

            create/update requests.'
          example: '99.9'
          type: string
        timeframe:
          $ref: '#/components/schemas/SearchSLOTimeframe'
        warning:
          description: The warning value for the service level objective.
          example: 90.0
          format: double
          nullable: true
          type: number
        warning_display:
          description: 'A string representation of the warning target (see the description
            of

            the `target_display` field for details).


            Included in service level objective responses if a warning target exists.

            Ignored in create/update requests.'
          example: '90.0'
          nullable: true
          type: string
      required:
      - timeframe
      - target
      type: object
    SearchSLOTimeframe:
      description: The SLO time window options.
      enum:
      - 7d
      - 30d
      - 90d
      example: 30d
      type: string
      x-enum-varnames:
      - SEVEN_DAYS
      - THIRTY_DAYS
      - NINETY_DAYS
    SearchServiceLevelObjective:
      description: A service level objective data container.
      properties:
        data:
          $ref: '#/components/schemas/SearchServiceLevelObjectiveData'
      type: object
    SearchServiceLevelObjectiveAttributes:
      description: 'A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, and `tags`).'
      properties:
        all_tags:
          description: 'A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be empty).'
          example:
          - env:prod
          - app:core
          items:
            type: string
          type: array
        created_at:
          description: 'Creation timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/SLOCreator'
        description:
          description: 'A user-defined description of the service level objective.


            Always included in service level objective responses (but may be `null`).

            Optional in create/update requests.'
          nullable: true
          type: string
        env_tags:
          description: Tags with the `env` tag key.
          items:
            type: string
          type: array
        groups:
          description: 'A list of (up to 100) monitor groups that narrow the scope
            of a monitor service level objective.

            Included in service level objective responses if it is not empty.'
          example:
          - env:prod
          - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          nullable: true
          type: array
        modified_at:
          description: 'Modification timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: 'A list of monitor ids that defines the scope of a monitor
            service level

            objective.'
          items:
            description: A monitor ID.
            format: int64
            type: integer
          nullable: true
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        overall_status:
          description: calculated status and error budget remaining.
          items:
            $ref: '#/components/schemas/SLOOverallStatuses'
          type: array
        query:
          $ref: '#/components/schemas/SearchSLOQuery'
        service_tags:
          description: Tags with the `service` tag key.
          items:
            type: string
          type: array
        slo_type:
          $ref: '#/components/schemas/SLOType'
        status:
          $ref: '#/components/schemas/SLOStatus'
        team_tags:
          description: Tags with the `team` tag key.
          items:
            type: string
          type: array
        thresholds:
          description: 'The thresholds (timeframes and associated targets) for this
            service level

            objective object.'
          example:
          - target: 95
            target_display: '95'
            timeframe: 7d
          - target: 95
            target_display: '95'
            timeframe: 30d
            warning: 97
            warning_display: '97'
          items:
            $ref: '#/components/schemas/SearchSLOThreshold'
          type: array
      type: object
    SearchServiceLevelObjectiveData:
      description: A service level objective ID and attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/SearchServiceLevelObjectiveAttributes'
        id:
          description: 'A unique identifier for the service level objective object.


            Always included in service level objective responses.'
          readOnly: true
          type: string
        type:
          description: The type of the object, must be `slo`.
          type: string
      type: object
    Series:
      description: 'A metric to submit to Datadog.

        See [Datadog metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).'
      properties:
        host:
          description: The name of the host that produced the metric.
          example: test.example.com
          type: string
        interval:
          default: null
          description: If the type of the metric is rate or count, define the corresponding
            interval.
          example: 20
          format: int64
          nullable: true
          type: integer
        metric:
          description: The name of the timeseries.
          example: system.load.1
          type: string
        points:
          description: Points relating to a metric. All points must be tuples with
            timestamp and a scalar value (cannot be a string). Timestamps should be
            in POSIX time in seconds, and cannot be more than ten minutes in the future
            or more than one hour in the past.
          items:
            $ref: '#/components/schemas/Point'
          type: array
        tags:
          description: A list of tags associated with the metric.
          example:
          - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          default: ''
          description: The type of the metric. Valid types are "",`count`, `gauge`,
            and `rate`.
          example: rate
          type: string
      required:
      - metric
      - points
      type: object
    ServiceCheck:
      description: An object containing service check and status.
      properties:
        check:
          description: The check.
          example: app.ok
          type: string
        host_name:
          description: The host name correlated with the check.
          example: app.host1
          type: string
        message:
          description: Message containing check status.
          example: app is running
          type: string
        status:
          $ref: '#/components/schemas/ServiceCheckStatus'
        tags:
          description: Tags related to a check.
          example:
          - environment:test
          items:
            description: Items related to a check.
            type: string
          type: array
        timestamp:
          description: Time of check.
          format: int64
          type: integer
      required:
      - check
      - status
      - tags
      - host_name
      type: object
    ServiceCheckStatus:
      description: The status of a service check. Set to `0` for OK, `1` for warning,
        `2` for critical, and `3` for unknown.
      enum:
      - 0
      - 1
      - 2
      - 3
      example: 0
      format: int32
      type: integer
      x-enum-varnames:
      - OK
      - WARNING
      - CRITICAL
      - UNKNOWN
    ServiceChecks:
      description: The service checks.
      items:
        $ref: '#/components/schemas/ServiceCheck'
      type: array
    ServiceLevelObjective:
      description: 'A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).'
      properties:
        created_at:
          description: 'Creation timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        description:
          description: 'A user-defined description of the service level objective.


            Always included in service level objective responses (but may be `null`).

            Optional in create/update requests.'
          nullable: true
          type: string
        groups:
          description: 'A list of (up to 100) monitor groups that narrow the scope
            of a monitor service level objective.


            Included in service level objective responses if it is not empty. Optional
            in

            create/update requests for monitor service level objectives, but may only
            be

            used when then length of the `monitor_ids` field is one.'
          example:
          - env:prod
          - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        id:
          description: 'A unique identifier for the service level objective object.


            Always included in service level objective responses.'
          readOnly: true
          type: string
        modified_at:
          description: 'Modification timestamp (UNIX time in seconds)


            Always included in service level objective responses.'
          format: int64
          readOnly: true
          type: integer
        monitor_ids:
          description: 'A list of monitor ids that defines the scope of a monitor
            service level

            objective. **Required if type is `monitor`**.'
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        monitor_tags:
          description: 'The union of monitor tags for all monitors referenced by the
            `monitor_ids`

            field.

            Always included in service level objective responses for monitor-based
            service level

            objectives (but may be empty). Ignored in create/update requests. Does
            not

            affect which monitors are included in the service level objective (that
            is

            determined entirely by the `monitor_ids` field).'
          items:
            description: A monitor tag.
            type: string
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: 'A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be empty).

            Optional in create/update requests.'
          example:
          - env:prod
          - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: 'The target threshold such that when the service level indicator
            is above this

            threshold over the given timeframe, the objective is being met.'
          example: 99.9
          format: double
          type: number
        thresholds:
          description: 'The thresholds (timeframes and associated targets) for this
            service level

            objective object.'
          example:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: 'The optional warning threshold such that when the service
            level indicator is

            below this value for the given threshold, but above the target threshold,
            the

            objective appears in a "warning" state. This value must be greater than
            the target

            threshold.'
          example: 99.95
          format: double
          type: number
      required:
      - name
      - thresholds
      - type
      type: object
    ServiceLevelObjectiveQuery:
      description: 'A metric-based SLO. **Required if type is `metric`**. Note that
        Datadog only allows the sum by aggregator

        to be used because this will sum up all request counts instead of averaging
        them, or taking the max or

        min of all of those requests.'
      properties:
        denominator:
          description: A Datadog metric query for total (valid) events.
          example: sum:my.custom.metric{*}.as_count()
          type: string
        numerator:
          description: A Datadog metric query for good events.
          example: sum:my.custom.metric{type:good}.as_count()
          type: string
      required:
      - numerator
      - denominator
      type: object
    ServiceLevelObjectiveRequest:
      description: 'A service level objective object includes a service level indicator,
        thresholds

        for one or more timeframes, and metadata (`name`, `description`, `tags`, etc.).'
      properties:
        description:
          description: 'A user-defined description of the service level objective.


            Always included in service level objective responses (but may be `null`).

            Optional in create/update requests.'
          nullable: true
          type: string
        groups:
          description: 'A list of (up to 100) monitor groups that narrow the scope
            of a monitor service level objective.


            Included in service level objective responses if it is not empty. Optional
            in

            create/update requests for monitor service level objectives, but may only
            be

            used when then length of the `monitor_ids` field is one.'
          example:
          - env:prod
          - role:mysql
          items:
            description: A group name, for instance `env:prod`.
            type: string
          type: array
        monitor_ids:
          description: 'A list of monitor IDs that defines the scope of a monitor
            service level

            objective. **Required if type is `monitor`**.'
          items:
            description: A monitor ID.
            format: int64
            type: integer
          type: array
        name:
          description: The name of the service level objective object.
          example: Custom Metric SLO
          type: string
        query:
          $ref: '#/components/schemas/ServiceLevelObjectiveQuery'
        tags:
          description: 'A list of tags associated with this service level objective.

            Always included in service level objective responses (but may be empty).

            Optional in create/update requests.'
          example:
          - env:prod
          - app:core
          items:
            description: A tag to apply to your SLO.
            type: string
          type: array
        target_threshold:
          description: 'The target threshold such that when the service level indicator
            is above this

            threshold over the given timeframe, the objective is being met.'
          example: 99.9
          format: double
          type: number
        thresholds:
          description: 'The thresholds (timeframes and associated targets) for this
            service level

            objective object.'
          example:
          - target: 95
            timeframe: 7d
          - target: 95
            timeframe: 30d
            warning: 97
          items:
            $ref: '#/components/schemas/SLOThreshold'
          type: array
        timeframe:
          $ref: '#/components/schemas/SLOTimeframe'
        type:
          $ref: '#/components/schemas/SLOType'
        warning_threshold:
          description: 'The optional warning threshold such that when the service
            level indicator is

            below this value for the given threshold, but above the target threshold,
            the

            objective appears in a "warning" state. This value must be greater than
            the target

            threshold.'
          example: 99.95
          format: double
          type: number
      required:
      - name
      - thresholds
      - type
      type: object
    SignalArchiveReason:
      description: Reason why a signal has been archived.
      enum:
      - none
      - false_positive
      - testing_or_maintenance
      - investigated_case_opened
      - other
      type: string
      x-enum-varnames:
      - NONE
      - FALSE_POSITIVE
      - TESTING_OR_MAINTENANCE
      - INVESTIGATED_CASE_OPENED
      - OTHER
    SignalAssigneeUpdateRequest:
      description: Attributes describing an assignee update operation over a security
        signal.
      properties:
        assignee:
          description: The UUID of the user being assigned. Use empty string to return
            signal to unassigned.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
        version:
          $ref: '#/components/schemas/Version'
      required:
      - assignee
      type: object
    SignalStateUpdateRequest:
      description: Attributes describing the change of state for a given state.
      properties:
        archiveComment:
          description: Optional comment to explain why a signal is being archived.
          type: string
        archiveReason:
          $ref: '#/components/schemas/SignalArchiveReason'
        state:
          $ref: '#/components/schemas/SignalTriageState'
        version:
          $ref: '#/components/schemas/Version'
      required:
      - state
      type: object
    SignalTriageState:
      description: The new triage state of the signal.
      enum:
      - open
      - archived
      - under_review
      example: open
      type: string
      x-enum-varnames:
      - OPEN
      - ARCHIVED
      - UNDER_REVIEW
    SlackIntegrationChannel:
      description: The Slack channel configuration.
      properties:
        display:
          $ref: '#/components/schemas/SlackIntegrationChannelDisplay'
        name:
          description: Your channel name.
          example: '#general'
          type: string
      type: object
    SlackIntegrationChannelDisplay:
      description: Configuration options for what is shown in an alert event message.
      properties:
        message:
          default: true
          description: Show the main body of the alert event.
          type: boolean
        notified:
          default: true
          description: Show the list of @-handles in the alert event.
          type: boolean
        snapshot:
          default: true
          description: Show the alert event's snapshot image.
          type: boolean
        tags:
          default: true
          description: Show the scopes on which the monitor alerted.
          type: boolean
      type: object
    SlackIntegrationChannels:
      description: A list of configured Slack channels.
      example:
      - display:
          message: true
          notified: true
          snapshot: true
          tags: true
        name: '#channel_name_main_account'
      - display:
          message: true
          notified: true
          snapshot: false
          tags: true
        name: '#channel_name_doghouse'
      items:
        $ref: '#/components/schemas/SlackIntegrationChannel'
      type: array
    SuccessfulSignalUpdateResponse:
      description: Updated signal data following a successfully performed update.
      properties:
        status:
          description: Status of the response.
          type: string
      type: object
    TagToHosts:
      description: In this object, the key is the tag, the value is a list of host
        names that are reporting that tag.
      properties:
        tags:
          additionalProperties:
            description: A list of additional properties for tags.
            items:
              description: A given tag in a list.
              example: test.metric.host
              type: string
            type: array
          description: A list of tags to apply to the host.
          type: object
      type: object
    UsageAnalyzedLogsHour:
      description: The number of analyzed logs for each hour for a given organization.
      properties:
        analyzed_logs:
          description: Contains the number of analyzed logs.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageAnalyzedLogsResponse:
      description: A response containing the number of analyzed logs for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for analyzed logs.
          items:
            $ref: '#/components/schemas/UsageAnalyzedLogsHour'
          type: array
      type: object
    UsageAttributionAggregates:
      description: An array of available aggregates.
      items:
        $ref: '#/components/schemas/UsageAttributionAggregatesBody'
      type: array
    UsageAttributionAggregatesBody:
      description: The object containing the aggregates.
      properties:
        agg_type:
          description: The aggregate type.
          example: sum
          type: string
        field:
          description: The field.
          example: custom_timeseries_usage
          type: string
        value:
          description: The value for a given field.
          format: double
          type: number
      type: object
    UsageAttributionBody:
      description: Usage Summary by tag for a given organization.
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM].'
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tag_config_source:
          description: The source of the usage attribution tag configuration and the
            selected tags in the format `<source_org_name>:::<selected tag 1>///<selected
            tag 2>///<selected tag 3>`.
          type: string
        tags:
          $ref: '#/components/schemas/UsageAttributionTagNames'
        updated_at:
          description: Shows the the most recent hour in the current months for all
            organizations for which all usages were calculated.
          type: string
        values:
          $ref: '#/components/schemas/UsageAttributionValues'
      type: object
    UsageAttributionLimit:
      default: 5000
      description: Maximum number of records to be returned.
      format: int64
      type: integer
    UsageAttributionMetadata:
      description: The object containing document metadata.
      properties:
        aggregates:
          $ref: '#/components/schemas/UsageAttributionAggregates'
        pagination:
          $ref: '#/components/schemas/UsageAttributionPagination'
      type: object
    UsageAttributionOffset:
      default: 0
      description: Number of records to skip before beginning to return.
      format: int64
      type: integer
    UsageAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        limit:
          description: Maximum amount of records to be returned.
          format: int64
          type: integer
        offset:
          description: Records to be skipped before beginning to return.
          format: int64
          type: integer
        sort_direction:
          description: Direction to sort by.
          type: string
        sort_name:
          description: Field to sort by.
          type: string
        total_number_of_records:
          description: Total number of records.
          format: int64
          type: integer
      type: object
    UsageAttributionResponse:
      description: Response containing the Usage Summary by tag(s).
      properties:
        metadata:
          $ref: '#/components/schemas/UsageAttributionMetadata'
        usage:
          description: Get usage summary by tag(s).
          items:
            $ref: '#/components/schemas/UsageAttributionBody'
          type: array
      type: object
    UsageAttributionSort:
      default: custom_timeseries_usage
      description: The field to sort by.
      enum:
      - api_percentage
      - snmp_usage
      - apm_host_usage
      - api_usage
      - appsec_usage
      - appsec_percentage
      - container_usage
      - custom_timeseries_percentage
      - container_percentage
      - apm_host_percentage
      - npm_host_percentage
      - browser_percentage
      - browser_usage
      - infra_host_percentage
      - snmp_percentage
      - npm_host_usage
      - infra_host_usage
      - custom_timeseries_usage
      - lambda_functions_usage
      - lambda_functions_percentage
      - lambda_invocations_usage
      - lambda_invocations_percentage
      - estimated_indexed_logs_usage
      - estimated_indexed_logs_percentage
      - estimated_ingested_logs_usage
      - estimated_ingested_logs_percentage
      - estimated_indexed_spans_usage
      - estimated_indexed_spans_percentage
      - estimated_ingested_spans_usage
      - estimated_ingested_spans_percentage
      - apm_fargate_usage
      - apm_fargate_percentage
      - appsec_fargate_usage
      - appsec_fargate_percentage
      - estimated_rum_usage_attribution_usage
      - estimated_rum_usage_attribution_percentage
      type: string
      x-enum-varnames:
      - API_PERCENTAGE
      - SNMP_USAGE
      - APM_HOST_USAGE
      - API_USAGE
      - APPSEC_USAGE
      - APPSEC_PERCENTAGE
      - CONTAINER_USAGE
      - CUSTOM_TIMESERIES_PERCENTAGE
      - CONTAINER_PERCENTAGE
      - APM_HOST_PERCENTAGE
      - NPM_HOST_PERCENTAGE
      - BROWSER_PERCENTAGE
      - BROWSER_USAGE
      - INFRA_HOST_PERCENTAGE
      - SNMP_PERCENTAGE
      - NPM_HOST_USAGE
      - INFRA_HOST_USAGE
      - CUSTOM_TIMESERIES_USAGE
      - LAMBDA_FUNCTIONS_USAGE
      - LAMBDA_FUNCTIONS_PERCENTAGE
      - LAMBDA_INVOCATIONS_USAGE
      - LAMBDA_INVOCATIONS_PERCENTAGE
      - ESTIMATED_INDEXED_LOGS_USAGE
      - ESTIMATED_INDEXED_LOGS_PERCENTAGE
      - ESTIMATED_INGESTED_LOGS_USAGE
      - ESTIMATED_INGESTED_LOGS_PERCENTAGE
      - ESTIMATED_INDEXED_SPANS_USAGE
      - ESTIMATED_INDEXED_SPANS_PERCENTAGE
      - ESTIMATED_INGESTED_SPANS_USAGE
      - ESTIMATED_INGESTED_SPANS_PERCENTAGE
      - APM_FARGATE_USAGE
      - APM_FARGATE_PERCENTAGE
      - APPSEC_FARGATE_USAGE
      - APPSEC_FARGATE_PERCENTAGE
      - ESTIMATED_RUM_USAGE_ATTRIBUTION_USAGE
      - ESTIMATED_RUM_USAGE_ATTRIBUTION_PERCENTAGE
    UsageAttributionSupportedMetrics:
      description: Supported fields for usage attribution requests (valid requests
        contain one or more metrics, or `*` for all).
      enum:
      - custom_timeseries_usage
      - container_usage
      - snmp_percentage
      - apm_host_usage
      - browser_usage
      - npm_host_percentage
      - infra_host_usage
      - custom_timeseries_percentage
      - container_percentage
      - api_usage
      - apm_host_percentage
      - infra_host_percentage
      - snmp_usage
      - browser_percentage
      - api_percentage
      - npm_host_usage
      - lambda_functions_usage
      - lambda_functions_percentage
      - lambda_invocations_usage
      - lambda_invocations_percentage
      - fargate_usage
      - fargate_percentage
      - profiled_host_usage
      - profiled_host_percentage
      - profiled_container_usage
      - profiled_container_percentage
      - dbm_hosts_usage
      - dbm_hosts_percentage
      - dbm_queries_usage
      - dbm_queries_percentage
      - estimated_indexed_logs_usage
      - estimated_indexed_logs_percentage
      - estimated_ingested_logs_usage
      - estimated_ingested_logs_percentage
      - appsec_usage
      - appsec_percentage
      - estimated_indexed_spans_usage
      - estimated_indexed_spans_percentage
      - estimated_ingested_spans_usage
      - estimated_ingested_spans_percentage
      - apm_fargate_usage
      - apm_fargate_percentage
      - appsec_fargate_usage
      - appsec_fargate_percentage
      - estimated_rum_usage_attribution_usage
      - estimated_rum_usage_attribution_percentage
      - '*'
      type: string
      x-enum-varnames:
      - CUSTOM_TIMESERIES_USAGE
      - CONTAINER_USAGE
      - SNMP_PERCENTAGE
      - APM_HOST_USAGE
      - BROWSER_USAGE
      - NPM_HOST_PERCENTAGE
      - INFRA_HOST_USAGE
      - CUSTOM_TIMESERIES_PERCENTAGE
      - CONTAINER_PERCENTAGE
      - API_USAGE
      - APM_HOST_PERCENTAGE
      - INFRA_HOST_PERCENTAGE
      - SNMP_USAGE
      - BROWSER_PERCENTAGE
      - API_PERCENTAGE
      - NPM_HOST_USAGE
      - LAMBDA_FUNCTIONS_USAGE
      - LAMBDA_FUNCTIONS_PERCENTAGE
      - LAMBDA_INVOCATIONS_USAGE
      - LAMBDA_INVOCATIONS_PERCENTAGE
      - FARGATE_USAGE
      - FARGATE_PERCENTAGE
      - PROFILED_HOST_USAGE
      - PROFILED_HOST_PERCENTAGE
      - PROFILED_CONTAINER_USAGE
      - PROFILED_CONTAINER_PERCENTAGE
      - DBM_HOSTS_USAGE
      - DBM_HOSTS_PERCENTAGE
      - DBM_QUERIES_USAGE
      - DBM_QUERIES_PERCENTAGE
      - ESTIMATED_INDEXED_LOGS_USAGE
      - ESTIMATED_INDEXED_LOGS_PERCENTAGE
      - ESTIMATED_INGESTED_LOGS_USAGE
      - ESTIMATED_INGESTED_LOGS_PERCENTAGE
      - APPSEC_USAGE
      - APPSEC_PERCENTAGE
      - ESTIMATED_INDEXED_SPANS_USAGE
      - ESTIMATED_INDEXED_SPANS_PERCENTAGE
      - ESTIMATED_INGESTED_SPANS_USAGE
      - ESTIMATED_INGESTED_SPANS_PERCENTAGE
      - APM_FARGATE_USAGE
      - APM_FARGATE_PERCENTAGE
      - APPSEC_FARGATE_USAGE
      - APPSEC_FARGATE_PERCENTAGE
      - ESTIMATED_RUM_USAGE_ATTRIBUTION_USAGE
      - ESTIMATED_RUM_USAGE_ATTRIBUTION_PERCENTAGE
      - ALL
    UsageAttributionTagNames:
      additionalProperties:
        description: 'A list of values that are associated with each tag key.


          - An empty list means the resource use wasn''t tagged with the respective
          tag.

          - Multiple values means the respective tag was applied multiple times on
          the resource.

          - An `<empty>` value means the resource was tagged with the respective tag
          but did not have a value.'
        items:
          description: A given tag in a list.
          example: datadog-integrations-lab
          type: string
        type: array
      description: 'Tag keys and values.


        A `null` value here means that the requested tag breakdown cannot be applied
        because it does not match the [tags

        configured for usage attribution](https://docs.datadoghq.com/account_management/billing/usage_attribution/#getting-started).

        In this scenario the API returns the total usage, not broken down by tags.'
      nullable: true
      type: object
    UsageAttributionValues:
      description: Fields in Usage Summary by tag(s).
      properties:
        api_percentage:
          description: The percentage of synthetic API test usage by tag(s).
          format: double
          type: number
        api_usage:
          description: The synthetic API test usage by tag(s).
          format: double
          type: number
        apm_fargate_percentage:
          description: The percentage of APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_fargate_usage:
          description: The APM ECS Fargate task usage by tag(s).
          format: double
          type: number
        apm_host_percentage:
          description: The percentage of APM host usage by tag(s).
          format: double
          type: number
        apm_host_usage:
          description: The APM host usage by tag(s).
          format: double
          type: number
        appsec_fargate_percentage:
          description: The percentage of Application Security Monitoring ECS Fargate
            task usage by tag(s).
          format: double
          type: number
        appsec_fargate_usage:
          description: The Application Security Monitoring ECS Fargate task usage
            by tag(s).
          format: double
          type: number
        appsec_percentage:
          description: The percentage of Application Security Monitoring host usage
            by tag(s).
          format: double
          type: number
        appsec_usage:
          description: The Application Security Monitoring host usage by tag(s).
          format: double
          type: number
        browser_percentage:
          description: The percentage of synthetic browser test usage by tag(s).
          format: double
          type: number
        browser_usage:
          description: The synthetic browser test usage by tag(s).
          format: double
          type: number
        container_percentage:
          description: The percentage of container usage by tag(s).
          format: double
          type: number
        container_usage:
          description: The container usage by tag(s).
          format: double
          type: number
        cspm_container_percentage:
          description: The percentage of Cloud Security Management Pro container usage
            by tag(s)
          format: double
          type: number
        cspm_container_usage:
          description: The Cloud Security Management Pro container usage by tag(s)
          format: double
          type: number
        cspm_host_percentage:
          description: The percentage of Cloud Security Management Pro host usage
            by tag(s)
          format: double
          type: number
        cspm_host_usage:
          description: The Cloud Security Management Pro host usage by tag(s)
          format: double
          type: number
        custom_timeseries_percentage:
          description: The percentage of custom metrics usage by tag(s).
          format: double
          type: number
        custom_timeseries_usage:
          description: The custom metrics usage by tag(s).
          format: double
          type: number
        cws_container_percentage:
          description: The percentage of Cloud Workload Security container usage by
            tag(s)
          format: double
          type: number
        cws_container_usage:
          description: The Cloud Workload Security container usage by tag(s)
          format: double
          type: number
        cws_host_percentage:
          description: The percentage of Cloud Workload Security host usage by tag(s)
          format: double
          type: number
        cws_host_usage:
          description: The Cloud Workload Security host usage by tag(s)
          format: double
          type: number
        dbm_hosts_percentage:
          description: The percentage of Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_hosts_usage:
          description: The Database Monitoring host usage by tag(s).
          format: double
          type: number
        dbm_queries_percentage:
          description: The percentage of Database Monitoring normalized queries usage
            by tag(s).
          format: double
          type: number
        dbm_queries_usage:
          description: The Database Monitoring normalized queries usage by tag(s).
          format: double
          type: number
        estimated_indexed_logs_percentage:
          description: The percentage of estimated live indexed logs usage by tag(s).
          format: double
          type: number
        estimated_indexed_logs_usage:
          description: The estimated live indexed logs usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_percentage:
          description: The percentage of estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_indexed_spans_usage:
          description: The estimated indexed spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_logs_percentage:
          description: The percentage of estimated live ingested logs usage by tag(s).
          format: double
          type: number
        estimated_ingested_logs_usage:
          description: The estimated live ingested logs usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_percentage:
          description: The percentage of estimated ingested spans usage by tag(s).
          format: double
          type: number
        estimated_ingested_spans_usage:
          description: The estimated ingested spans usage by tag(s).
          format: double
          type: number
        estimated_rum_sessions_percentage:
          description: The percentage of estimated rum sessions usage by tag(s).
          format: double
          type: number
        estimated_rum_sessions_usage:
          description: The estimated rum sessions usage by tag(s).
          format: double
          type: number
        infra_host_percentage:
          description: The percentage of infrastructure host usage by tag(s).
          format: double
          type: number
        infra_host_usage:
          description: The infrastructure host usage by tag(s).
          format: double
          type: number
        lambda_functions_percentage:
          description: The percentage of Lambda function usage by tag(s).
          format: double
          type: number
        lambda_functions_usage:
          description: The Lambda function usage by tag(s).
          format: double
          type: number
        lambda_invocations_percentage:
          description: The percentage of Lambda invocation usage by tag(s).
          format: double
          type: number
        lambda_invocations_usage:
          description: The Lambda invocation usage by tag(s).
          format: double
          type: number
        npm_host_percentage:
          description: The percentage of network host usage by tag(s).
          format: double
          type: number
        npm_host_usage:
          description: The network host usage by tag(s).
          format: double
          type: number
        profiled_container_percentage:
          description: The percentage of profiled containers usage by tag(s).
          format: double
          type: number
        profiled_container_usage:
          description: The profiled container usage by tag(s).
          format: double
          type: number
        profiled_hosts_percentage:
          description: The percentage of profiled hosts usage by tag(s).
          format: double
          type: number
        profiled_hosts_usage:
          description: The profiled host usage by tag(s).
          format: double
          type: number
        snmp_percentage:
          description: The percentage of network device usage by tag(s).
          format: double
          type: number
        snmp_usage:
          description: The network device usage by tag(s).
          format: double
          type: number
      type: object
    UsageAuditLogsHour:
      description: Audit logs usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        lines_indexed:
          description: The total number of audit logs lines indexed during a given
            hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageAuditLogsResponse:
      description: Response containing the audit logs usage for each hour for a given
        organization.
      properties:
        usage:
          description: Get hourly usage for audit logs.
          items:
            $ref: '#/components/schemas/UsageAuditLogsHour'
          type: array
      type: object
    UsageBillableSummaryBody:
      description: Response with properties for each aggregated usage type.
      properties:
        account_billable_usage:
          description: The total account usage.
          format: int64
          type: integer
        elapsed_usage_hours:
          description: Elapsed usage hours for some billable product.
          format: int64
          type: integer
        first_billable_usage_hour:
          description: The first billable hour for the org.
          format: date-time
          type: string
        last_billable_usage_hour:
          description: The last billable hour for the org.
          format: date-time
          type: string
        org_billable_usage:
          description: The number of units used within the billable timeframe.
          format: int64
          type: integer
        percentage_in_account:
          description: The percentage of account usage the org represents.
          format: double
          type: number
        usage_unit:
          description: Units pertaining to the usage.
          type: string
      type: object
    UsageBillableSummaryHour:
      description: Response with monthly summary of data billed by Datadog.
      properties:
        billing_plan:
          description: The billing plan.
          type: string
        end_date:
          description: Shows the last date of usage.
          format: date-time
          type: string
        num_orgs:
          description: The number of organizations.
          format: int64
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        ratio_in_month:
          description: Shows usage aggregation for a billing period.
          format: double
          type: number
        region:
          description: The region of the organization.
          type: string
        start_date:
          description: Shows the first date of usage.
          format: date-time
          type: string
        usage:
          $ref: '#/components/schemas/UsageBillableSummaryKeys'
      type: object
    UsageBillableSummaryKeys:
      description: Response with aggregated usage types.
      properties:
        apm_fargate_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_fargate_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_profiler_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_profiler_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        apm_trace_search_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_fargate_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        application_security_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_indexed_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_pipeline_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_test_indexed_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_testing_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ci_testing_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cloud_cost_management_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cloud_cost_management_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cspm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        custom_event_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        cws_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_normalized_queries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        dbm_normalized_queries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_apm_and_profiler_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_apm_and_profiler_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_profiler_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_profiler_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        fargate_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        incident_management_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        incident_management_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_and_apm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_and_apm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        infra_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_spans_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        ingested_timeseries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        iot_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        iot_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        lambda_function_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        lambda_function_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_forwarding_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_15day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_180day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_30day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_360day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_3day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_45day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_60day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_7day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_90day_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_custom_retention_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_indexed_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        logs_ingested_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        network_device_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        network_device_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_flow_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        npm_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        observability_pipeline_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        online_archive_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_container_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_host_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        prof_host_top99p:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_lite_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_replay_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        rum_units_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        sensitive_data_scanner_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_apm_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_infra_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_infra_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        serverless_invocation_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        siem_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        standard_timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_api_tests_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_app_testing_maximum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        synthetics_browser_checks_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        timeseries_average:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
        timeseries_sum:
          $ref: '#/components/schemas/UsageBillableSummaryBody'
      type: object
    UsageBillableSummaryResponse:
      description: Response with monthly summary of data billed by Datadog.
      properties:
        usage:
          description: An array of objects regarding usage of billable summary.
          items:
            $ref: '#/components/schemas/UsageBillableSummaryHour'
          type: array
      type: object
    UsageCIVisibilityHour:
      description: CI visibility usage in a given hour.
      properties:
        ci_pipeline_indexed_spans:
          description: The number of spans for pipelines in the queried hour.
          format: int64
          nullable: true
          type: integer
        ci_test_indexed_spans:
          description: The number of spans for tests in the queried hour.
          format: int64
          nullable: true
          type: integer
        ci_visibility_itr_committers:
          description: Shows the total count of all active Git committers for Intelligent
            Test Runner in the current month. A committer is active if they commit
            at least 3 times in a given month.
          format: int64
          nullable: true
          type: integer
        ci_visibility_pipeline_committers:
          description: Shows the total count of all active Git committers for Pipelines
            in the current month. A committer is active if they commit at least 3
            times in a given month.
          format: int64
          nullable: true
          type: integer
        ci_visibility_test_committers:
          description: The total count of all active Git committers for tests in the
            current month. A committer is active if they commit at least 3 times in
            a given month.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCIVisibilityResponse:
      description: CI visibility usage response
      properties:
        usage:
          description: Response containing CI visibility usage.
          items:
            $ref: '#/components/schemas/UsageCIVisibilityHour'
          type: array
      type: object
    UsageCWSHour:
      description: Cloud Workload Security usage for a given organization for a given
        hour.
      properties:
        cws_container_count:
          description: "The total number of Cloud Workload Security container hours
            from the start of the given hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        cws_host_count:
          description: "The total number of Cloud Workload Security host hours from
            the start of the given hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCWSResponse:
      description: Response containing the Cloud Workload Security usage for each
        hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Cloud Workload Security.
          items:
            $ref: '#/components/schemas/UsageCWSHour'
          type: array
      type: object
    UsageCloudSecurityPostureManagementHour:
      description: Cloud Security Management Pro usage for a given organization for
        a given hour.
      properties:
        aas_host_count:
          description: The number of Cloud Security Management Pro Azure app services
            hosts during a given hour.
          format: double
          nullable: true
          type: number
        aws_host_count:
          description: The number of Cloud Security Management Pro AWS hosts during
            a given hour.
          format: double
          nullable: true
          type: number
        azure_host_count:
          description: The number of Cloud Security Management Pro Azure hosts during
            a given hour.
          format: double
          nullable: true
          type: number
        compliance_host_count:
          description: The number of Cloud Security Management Pro hosts during a
            given hour.
          format: double
          nullable: true
          type: number
        container_count:
          description: The total number of Cloud Security Management Pro containers
            during a given hour.
          format: double
          nullable: true
          type: number
        gcp_host_count:
          description: The number of Cloud Security Management Pro GCP hosts during
            a given hour.
          format: double
          nullable: true
          type: number
        host_count:
          description: The total number of Cloud Security Management Pro hosts during
            a given hour.
          format: double
          nullable: true
          type: number
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageCloudSecurityPostureManagementResponse:
      description: The response containing the Cloud Security Management Pro usage
        for each hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Cloud Security Management Pro.
          items:
            $ref: '#/components/schemas/UsageCloudSecurityPostureManagementHour'
          type: array
      type: object
    UsageCustomReportsAttributes:
      description: The response containing attributes for custom reports.
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of custom report.
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of custom report.
          type: string
        tags:
          description: A list of tags to apply to custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageCustomReportsData:
      description: The response containing the date and type for custom reports.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageCustomReportsMeta:
      description: The object containing document metadata.
      properties:
        page:
          $ref: '#/components/schemas/UsageCustomReportsPage'
      type: object
    UsageCustomReportsPage:
      description: The object containing page total count.
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageCustomReportsResponse:
      description: Response containing available custom reports.
      properties:
        data:
          description: An array of available custom reports.
          items:
            $ref: '#/components/schemas/UsageCustomReportsData'
          type: array
        meta:
          $ref: '#/components/schemas/UsageCustomReportsMeta'
      type: object
    UsageDBMHour:
      description: Database Monitoring usage for a given organization for a given
        hour.
      properties:
        dbm_host_count:
          description: "The total number of Database Monitoring host hours from the
            start of the given hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        dbm_queries_count:
          description: "The total number of normalized Database Monitoring queries
            from the start of the given hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageDBMResponse:
      description: Response containing the Database Monitoring usage for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for Database Monitoring
          items:
            $ref: '#/components/schemas/UsageDBMHour'
          type: array
      type: object
    UsageFargateHour:
      description: Number of Fargate tasks run and hourly usage.
      properties:
        apm_fargate_count:
          description: The high-water mark of APM ECS Fargate tasks during the given
            hour.
          format: int64
          nullable: true
          type: integer
        appsec_fargate_count:
          description: The Application Security Monitoring ECS Fargate tasks during
            the given hour.
          format: int64
          nullable: true
          type: integer
        avg_profiled_fargate_tasks:
          description: The average profiled task count for Fargate Profiling.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tasks_count:
          description: The number of Fargate tasks run.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageFargateResponse:
      description: Response containing the number of Fargate tasks run and hourly
        usage.
      properties:
        usage:
          description: Array with the number of hourly Fargate tasks recorded for
            a given organization.
          items:
            $ref: '#/components/schemas/UsageFargateHour'
          type: array
      type: object
    UsageHostHour:
      description: Number of hosts/containers recorded for each hour for a given organization.
      properties:
        agent_host_count:
          description: 'Contains the total number of infrastructure hosts reporting

            during a given hour that were running the Datadog Agent.'
          format: int64
          nullable: true
          type: integer
        alibaba_host_count:
          description: 'Contains the total number of hosts that reported through Alibaba
            integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
        apm_azure_app_service_host_count:
          description: Contains the total number of Azure App Services hosts using
            APM.
          format: int64
          nullable: true
          type: integer
        apm_host_count:
          description: 'Shows the total number of hosts using APM during the hour,

            these are counted as billable (except during trial periods).'
          format: int64
          nullable: true
          type: integer
        aws_host_count:
          description: 'Contains the total number of hosts that reported through the
            AWS integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
        azure_host_count:
          description: 'Contains the total number of hosts that reported through Azure
            integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
        container_count:
          description: Shows the total number of containers reported by the Docker
            integration during the hour.
          format: int64
          nullable: true
          type: integer
        gcp_host_count:
          description: 'Contains the total number of hosts that reported through the
            Google Cloud integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
        heroku_host_count:
          description: Contains the total number of Heroku dynos reported by the Datadog
            Agent.
          format: int64
          nullable: true
          type: integer
        host_count:
          description: 'Contains the total number of billable infrastructure hosts
            reporting during a given hour.

            This is the sum of `agent_host_count`, `aws_host_count`, and `gcp_host_count`.'
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          nullable: true
          type: string
        infra_azure_app_service:
          description: 'Contains the total number of hosts that reported through the
            Azure App Services integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
        opentelemetry_apm_host_count:
          description: Contains the total number of hosts using APM reported by Datadog
            exporter for the OpenTelemetry Collector.
          format: int64
          nullable: true
          type: integer
        opentelemetry_host_count:
          description: Contains the total number of hosts reported by Datadog exporter
            for the OpenTelemetry Collector.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        vsphere_host_count:
          description: 'Contains the total number of hosts that reported through vSphere
            integration

            (and were NOT running the Datadog Agent).'
          format: int64
          nullable: true
          type: integer
      type: object
    UsageHostsResponse:
      description: Host usage response.
      properties:
        usage:
          description: An array of objects related to host usage.
          items:
            $ref: '#/components/schemas/UsageHostHour'
          type: array
      type: object
    UsageIncidentManagementHour:
      description: Incident management usage for a given organization for a given
        hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        monthly_active_users:
          description: Contains the total number monthly active users from the start
            of the given hour's month until the given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIncidentManagementResponse:
      description: Response containing the incident management usage for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for incident management.
          items:
            $ref: '#/components/schemas/UsageIncidentManagementHour'
          type: array
      type: object
    UsageIndexedSpansHour:
      description: The hours of indexed spans usage.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of spans indexed.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIndexedSpansResponse:
      description: A response containing indexed spans usage.
      properties:
        usage:
          description: Array with the number of hourly traces indexed for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageIndexedSpansHour'
          type: array
      type: object
    UsageIngestedSpansHour:
      description: Ingested spans usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        ingested_events_bytes:
          description: Contains the total number of bytes ingested for APM spans during
            a given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIngestedSpansResponse:
      description: Response containing the ingested spans usage for each hour for
        a given organization.
      properties:
        usage:
          description: Get hourly usage for ingested spans.
          items:
            $ref: '#/components/schemas/UsageIngestedSpansHour'
          type: array
      type: object
    UsageIoTHour:
      description: IoT usage for a given organization for a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        iot_device_count:
          description: The total number of IoT devices during a given hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageIoTResponse:
      description: Response containing the IoT usage for each hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for IoT.
          items:
            $ref: '#/components/schemas/UsageIoTHour'
          type: array
      type: object
    UsageLambdaHour:
      description: 'Number of lambda functions and sum of the invocations of all lambda
        functions

        for each hour for a given organization.'
      properties:
        func_count:
          description: Contains the number of different functions for each region
            and AWS account.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        invocations_sum:
          description: Contains the sum of invocations of all functions.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageLambdaResponse:
      description: 'Response containing the number of lambda functions and sum of
        the invocations of all lambda functions

        for each hour for a given organization.'
      properties:
        usage:
          description: Get hourly usage for Lambda.
          items:
            $ref: '#/components/schemas/UsageLambdaHour'
          type: array
      type: object
    UsageLogsByIndexHour:
      description: Number of indexed logs for each hour and index for a given organization.
      properties:
        event_count:
          description: The total number of indexed logs for the queried hour.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        index_id:
          description: The index ID for this usage.
          type: string
        index_name:
          description: The user specified name for this index ID.
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        retention:
          description: The retention period (in days) for this index ID.
          format: int64
          type: integer
      type: object
    UsageLogsByIndexResponse:
      description: Response containing the number of indexed logs for each hour and
        index for a given organization.
      properties:
        usage:
          description: An array of objects regarding hourly usage of logs by index
            response.
          items:
            $ref: '#/components/schemas/UsageLogsByIndexHour'
          type: array
      type: object
    UsageLogsByRetentionHour:
      description: The number of indexed logs for each hour for a given organization
        broken down by retention period.
      properties:
        indexed_events_count:
          description: Total logs indexed with this retention period during a given
            hour.
          format: int64
          nullable: true
          type: integer
        live_indexed_events_count:
          description: Live logs indexed with this retention period during a given
            hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rehydrated_indexed_events_count:
          description: Rehydrated logs indexed with this retention period during a
            given hour.
          format: int64
          nullable: true
          type: integer
        retention:
          description: The retention period in days or "custom" for all custom retention
            usage.
          nullable: true
          type: string
      type: object
    UsageLogsByRetentionResponse:
      description: Response containing the indexed logs usage broken down by retention
        period for an organization during a given hour.
      properties:
        usage:
          description: Get hourly usage for indexed logs by retention period.
          items:
            $ref: '#/components/schemas/UsageLogsByRetentionHour'
          type: array
      type: object
    UsageLogsHour:
      description: Hour usage for logs.
      properties:
        billable_ingested_bytes:
          description: Contains the number of billable log bytes ingested.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of log events indexed.
          format: int64
          nullable: true
          type: integer
        ingested_events_bytes:
          description: Contains the number of log bytes ingested.
          format: int64
          nullable: true
          type: integer
        logs_forwarding_events_bytes:
          description: Contains the number of logs forwarded bytes (data available
            as of April 1st 2023)
          format: int64
          nullable: true
          type: integer
        logs_live_indexed_count:
          description: Contains the number of live log events indexed (data available
            as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_live_ingested_bytes:
          description: Contains the number of live log bytes ingested (data available
            as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_rehydrated_indexed_count:
          description: Contains the number of rehydrated log events indexed (data
            available as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        logs_rehydrated_ingested_bytes:
          description: Contains the number of rehydrated log bytes ingested (data
            available as of December 1, 2020).
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageLogsResponse:
      description: Response containing the number of logs for each hour.
      properties:
        usage:
          description: An array of objects regarding hourly usage of logs.
          items:
            $ref: '#/components/schemas/UsageLogsHour'
          type: array
      type: object
    UsageMetricCategory:
      description: Contains the metric category.
      enum:
      - standard
      - custom
      type: string
      x-enum-varnames:
      - STANDARD
      - CUSTOM
    UsageNetworkFlowsHour:
      description: Number of netflow events indexed for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        indexed_events_count:
          description: Contains the number of netflow events indexed.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageNetworkFlowsResponse:
      description: Response containing the number of netflow events indexed for each
        hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Network Flows.
          items:
            $ref: '#/components/schemas/UsageNetworkFlowsHour'
          type: array
      type: object
    UsageNetworkHostsHour:
      description: Number of active NPM hosts for each hour for a given organization.
      properties:
        host_count:
          description: Contains the number of active NPM hosts.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageNetworkHostsResponse:
      description: Response containing the number of active NPM hosts for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for NPM hosts.
          items:
            $ref: '#/components/schemas/UsageNetworkHostsHour'
          type: array
      type: object
    UsageOnlineArchiveHour:
      description: Online Archive usage in a given hour.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        online_archive_events_count:
          description: Total count of online archived events within the hour.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageOnlineArchiveResponse:
      description: Online Archive usage response.
      properties:
        usage:
          description: Response containing Online Archive usage.
          items:
            $ref: '#/components/schemas/UsageOnlineArchiveHour'
          type: array
      type: object
    UsageProfilingHour:
      description: The number of profiled hosts for each hour for a given organization.
      properties:
        aas_count:
          description: Contains the total number of profiled Azure app services reporting
            during a given hour.
          format: int64
          nullable: true
          type: integer
        avg_container_agent_count:
          description: Get average number of container agents for that hour.
          format: int64
          nullable: true
          type: integer
        host_count:
          description: Contains the total number of profiled hosts reporting during
            a given hour.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageProfilingResponse:
      description: Response containing the number of profiled hosts for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for profiled hosts.
          items:
            $ref: '#/components/schemas/UsageProfilingHour'
          type: array
      type: object
    UsageReportsType:
      default: reports
      description: The type of reports.
      enum:
      - reports
      example: reports
      type: string
      x-enum-varnames:
      - REPORTS
    UsageRumSessionsHour:
      description: Number of RUM Sessions recorded for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        replay_session_count:
          description: Contains the number of RUM Replay Sessions (data available
            beginning November 1, 2021).
          format: int64
          type: integer
        session_count:
          description: Contains the number of browser RUM Lite Sessions.
          format: int64
          nullable: true
          type: integer
        session_count_android:
          description: Contains the number of mobile RUM Sessions on Android (data
            available beginning December 1, 2020).
          format: int64
          nullable: true
          type: integer
        session_count_flutter:
          description: Contains the number of mobile RUM Sessions on Flutter (data
            available beginning March 1, 2023).
          format: int64
          nullable: true
          type: integer
        session_count_ios:
          description: Contains the number of mobile RUM Sessions on iOS (data available
            beginning December 1, 2020).
          format: int64
          nullable: true
          type: integer
        session_count_reactnative:
          description: Contains the number of mobile RUM Sessions on React Native
            (data available beginning May 1, 2022).
          format: int64
          nullable: true
          type: integer
      type: object
    UsageRumSessionsResponse:
      description: Response containing the number of RUM Sessions for each hour for
        a given organization.
      properties:
        usage:
          description: Get hourly usage for RUM Sessions.
          items:
            $ref: '#/components/schemas/UsageRumSessionsHour'
          type: array
      type: object
    UsageRumUnitsHour:
      description: Number of RUM Units used for each hour for a given organization
        (data available as of November 1, 2021).
      properties:
        browser_rum_units:
          description: The number of browser RUM units.
          format: int64
          nullable: true
          type: integer
        mobile_rum_units:
          description: The number of mobile RUM units.
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rum_units:
          description: Total RUM units across mobile and browser RUM.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageRumUnitsResponse:
      description: Response containing the number of RUM Units for each hour for a
        given organization.
      properties:
        usage:
          description: Get hourly usage for RUM Units.
          items:
            $ref: '#/components/schemas/UsageRumUnitsHour'
          type: array
      type: object
    UsageSDSHour:
      description: Sensitive Data Scanner usage for a given organization for a given
        hour.
      properties:
        apm_scanned_bytes:
          description: "The total number of bytes scanned of APM usage across all
            usage types by the Sensitive Data Scanner from the start of the given
            hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        events_scanned_bytes:
          description: "The total number of bytes scanned of Events usage across all
            usage types by the Sensitive Data Scanner from the start of the given
            hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        logs_scanned_bytes:
          description: "The total number of bytes scanned of logs usage by the Sensitive
            Data Scanner from the start of the given hour\u2019s month until the given
            hour."
          format: int64
          nullable: true
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        rum_scanned_bytes:
          description: "The total number of bytes scanned of RUM usage across all
            usage types by the Sensitive Data Scanner from the start of the given
            hour\u2019s month until the given hour."
          format: int64
          nullable: true
          type: integer
        total_scanned_bytes:
          description: "The total number of bytes scanned across all usage types by
            the Sensitive Data Scanner from the start of the given hour\u2019s month
            until the given hour."
          format: int64
          nullable: true
          type: integer
      type: object
    UsageSDSResponse:
      description: Response containing the Sensitive Data Scanner usage for each hour
        for a given organization.
      properties:
        usage:
          description: Get hourly usage for Sensitive Data Scanner.
          items:
            $ref: '#/components/schemas/UsageSDSHour'
          type: array
      type: object
    UsageSNMPHour:
      description: The number of SNMP devices for each hour for a given organization.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        snmp_devices:
          description: Contains the number of SNMP devices.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageSNMPResponse:
      description: Response containing the number of SNMP devices for each hour for
        a given organization.
      properties:
        usage:
          description: Get hourly usage for SNMP devices.
          items:
            $ref: '#/components/schemas/UsageSNMPHour'
          type: array
      type: object
    UsageSort:
      default: start_date
      description: The field to sort by.
      enum:
      - computed_on
      - size
      - start_date
      - end_date
      type: string
      x-enum-varnames:
      - COMPUTED_ON
      - SIZE
      - START_DATE
      - END_DATE
    UsageSortDirection:
      default: desc
      description: The direction to sort by.
      enum:
      - desc
      - asc
      type: string
      x-enum-varnames:
      - DESC
      - ASC
    UsageSpecifiedCustomReportsAttributes:
      description: The response containing attributes for specified custom reports.
      properties:
        computed_on:
          description: The date the specified custom report was computed.
          type: string
        end_date:
          description: The ending date of specified custom report.
          type: string
        location:
          description: A downloadable file for the specified custom reporting file.
          example: https://an-s3-or-gs-bucket.s3.amazonaws.com
          type: string
        size:
          description: size
          format: int64
          type: integer
        start_date:
          description: The starting date of specified custom report.
          type: string
        tags:
          description: A list of tags to apply to specified custom reports.
          items:
            description: A given tag in a list.
            example: env
            type: string
          type: array
      type: object
    UsageSpecifiedCustomReportsData:
      description: Response containing date and type for specified custom reports.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsAttributes'
        id:
          description: The date for specified custom reports.
          type: string
        type:
          $ref: '#/components/schemas/UsageReportsType'
      type: object
    UsageSpecifiedCustomReportsMeta:
      description: The object containing document metadata.
      properties:
        page:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsPage'
      type: object
    UsageSpecifiedCustomReportsPage:
      description: The object containing page total count for specified ID.
      properties:
        total_count:
          description: Total page count.
          format: int64
          type: integer
      type: object
    UsageSpecifiedCustomReportsResponse:
      description: Returns available specified custom reports.
      properties:
        data:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsData'
        meta:
          $ref: '#/components/schemas/UsageSpecifiedCustomReportsMeta'
      type: object
    UsageSummaryDate:
      description: Response with hourly report of all data billed by Datadog all organizations.
      properties:
        agent_host_top99p:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current date all organizations.
          format: int64
          type: integer
        apm_fargate_count_avg:
          description: Shows the average of all APM ECS Fargate tasks over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        apm_host_top99p:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        appsec_fargate_count_avg:
          description: Shows the average of all Application Security Monitoring ECS
            Fargate tasks over all hours in the current date for all organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          deprecated: true
          description: Shows the sum of audit logs lines indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        audit_trail_enabled_hwm:
          description: Shows the number of organizations that had Audit Trail enabled
            in the current date.
          format: int64
          type: integer
        avg_profiled_fargate_tasks:
          description: The average profiled task count for Fargate Profiling.
          format: int64
          type: integer
        aws_host_top99p:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the average of the number of functions that executed
            1 or more times each hour in the current date for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        browser_rum_lite_session_count_sum:
          description: Shows the sum of all browser lite sessions over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        browser_rum_replay_session_count_sum:
          description: Shows the sum of all browser replay sessions over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        browser_rum_units_sum:
          description: Shows the sum of all browser RUM units over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        ci_pipeline_indexed_spans_sum:
          description: Shows the sum of all CI pipeline indexed spans over all hours
            in the current month for all organizations.
          format: int64
          type: integer
        ci_test_indexed_spans_sum:
          description: Shows the sum of all CI test indexed spans over all hours in
            the current month for all organizations.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm:
          description: Shows the high-water mark of all CI visibility intelligent
            test runner committers over all hours in the current month for all organizations.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm:
          description: Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm:
          description: Shows the high-water mark of all CI visibility test committers
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg:
          description: Host count average of Cloud Cost Management for AWS for the
            given date and given organization.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg:
          description: Host count average of Cloud Cost Management for Azure for the
            given date and given organization.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg:
          description: Host count average of Cloud Cost Management for all cloud providers
            for the given date and given organization.
          format: int64
          type: integer
        cloud_siem_events_sum:
          description: Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current date for the given org.
          format: int64
          type: integer
        container_avg:
          description: Shows the average of all distinct containers over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        container_excl_agent_avg:
          description: Shows the average of containers without the Datadog Agent over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        container_hwm:
          description: Shows the high-water mark of all distinct containers over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_container_enterprise_total_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current date
            for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the current
            date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_aas_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure app services hosts over all hours in the current date for all
            organizations.
          format: int64
          type: integer
        cspm_aws_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro AWS hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_azure_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_avg:
          description: Shows the average number of Cloud Security Management Pro containers
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_container_hwm:
          description: Shows the high-water mark of Cloud Security Management Pro
            containers over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_gcp_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro GCP hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        cspm_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro hosts over all hours in the current date for all organizations.
          format: int64
          type: integer
        custom_ts_avg:
          description: Shows the average number of distinct custom metrics over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        cws_container_count_avg:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        cws_host_top99p:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        date:
          description: The date for the usage.
          format: date-time
          type: string
        dbm_host_top99p:
          description: Shows the 99th percentile of all Database Monitoring hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        dbm_queries_count_avg:
          description: Shows the average of all normalized Database Monitoring queries
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_avg:
          description: Shows the high-watermark of all Fargate tasks over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: Shows the average of all Fargate tasks over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        forwarding_events_bytes_sum:
          description: Shows the sum of all log bytes forwarded over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        gcp_host_top99p:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        heroku_host_top99p:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm:
          description: Shows the high-water mark of incident management monthly active
            users over all hours in the current date for all organizations.
          format: int64
          type: integer
        indexed_events_count_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        infra_host_top99p:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        iot_device_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        iot_device_top99p:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current date all organizations.
          format: int64
          type: integer
        mobile_rum_lite_session_count_sum:
          description: Shows the sum of all mobile lite sessions over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_flutter_sum:
          description: Shows the sum of all mobile RUM Sessions on Flutter over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_sum:
          description: Shows the sum of all mobile RUM Sessions on React Native over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_roku_sum:
          description: Shows the sum of all mobile RUM Sessions on Roku over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current date for all organizations
          format: int64
          type: integer
        mobile_rum_units_sum:
          description: Shows the sum of all mobile RUM units over all hours in the
            current date for all organizations.
          format: int64
          type: integer
        ndm_netflow_events_sum:
          description: Shows the sum of all Network Device Monitoring NetFlow events
            over all hours in the current date for the given org.
          format: int64
          type: integer
        netflow_indexed_events_count_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        npm_host_top99p:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_sum:
          description: Sum of all observability pipelines bytes processed over all
            hours in the current date for the given org.
          format: int64
          type: integer
        online_archive_events_count_sum:
          description: Sum of all online archived events over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p:
          description: Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for all organizations.
          format: int64
          type: integer
        orgs:
          description: Organizations associated with a user.
          items:
            $ref: '#/components/schemas/UsageSummaryDateOrg'
          type: array
        profiling_aas_count_top99p:
          description: Shows the 99th percentile of all profiled Azure app services
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        profiling_host_top99p:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        rum_browser_and_mobile_session_count:
          description: Shows the sum of all mobile sessions and all browser lite and
            legacy sessions over all hours in the current month for all organizations.
          format: int64
          type: integer
        rum_session_count_sum:
          description: Shows the sum of all browser RUM Lite Sessions over all hours
            in the current date for all organizations
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        rum_units_sum:
          description: Shows the sum of all browser and mobile RUM units over all
            hours in the current date for all organizations.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: Sum of all APM bytes scanned with sensitive data scanner over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: Sum of all event stream events bytes scanned with sensitive
            data scanner over all hours in the current date for all organizations.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for all organizations.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: Sum of all RUM bytes scanned with sensitive data scanner over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned across all usage types by
            the Sensitive Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        serverless_apps_azure_count_avg:
          description: Shows the average of the number of Serverless Apps for Azure
            for the given date and given org.
          format: int64
          type: integer
        serverless_apps_google_count_avg:
          description: Shows the average of the number of Serverless Apps for Google
            Cloud for the given date and given org.
          format: int64
          type: integer
        serverless_apps_total_count_avg:
          description: Shows the average of the number of Serverless Apps for Azure
            and Google Cloud for the given date and given org.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        synthetics_mobile_test_runs_sum:
          description: Shows the sum of all Synthetic mobile application tests over
            all hours in the current date for all organizations.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm:
          description: Shows the high-water mark of used synthetics parallel testing
            slots over all hours in the current date for all organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current date for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: Shows the sum of all ingested APM span bytes over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p:
          description: Shows the 99th percentile of all universal service management
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current date for all organizations.
          format: int64
          type: integer
        vuln_management_host_count_top99p:
          description: Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        workflow_executions_usage_sum:
          description: Sum of all workflows executed over all hours in the current
            date for all organizations.
          format: int64
          type: integer
      type: object
    UsageSummaryDateOrg:
      description: Global hourly report of all data billed by Datadog for a given
        organization.
      properties:
        agent_host_top99p:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current date for the given org.
          format: int64
          type: integer
        apm_fargate_count_avg:
          description: Shows the average of all APM ECS Fargate tasks over all hours
            in the current months for the given org.
          format: int64
          type: integer
        apm_host_top99p:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current date for the given org.
          format: int64
          type: integer
        appsec_fargate_count_avg:
          description: Shows the average of all Application Security Monitoring ECS
            Fargate tasks over all hours in the current months for the given org.
          format: int64
          type: integer
        audit_logs_lines_indexed_sum:
          deprecated: true
          description: Shows the sum of all audit logs lines indexed over all hours
            in the current date for the given org.
          format: int64
          type: integer
        audit_trail_enabled_hwm:
          description: Shows whether Audit Trail is enabled for the current date for
            the given org.
          format: int64
          type: integer
        avg_profiled_fargate_tasks:
          description: The average profiled task count for Fargate Profiling.
          format: int64
          type: integer
        aws_host_top99p:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for the given org.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current date for the given org.
          format: int64
          type: integer
        azure_app_service_top99p:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current date for the given org.
          format: int64
          type: integer
        billable_ingested_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        browser_rum_lite_session_count_sum:
          description: Shows the sum of all browser lite sessions over all hours in
            the current date for the given org.
          format: int64
          type: integer
        browser_rum_replay_session_count_sum:
          description: Shows the sum of all browser replay sessions over all hours
            in the current date for the given org.
          format: int64
          type: integer
        browser_rum_units_sum:
          description: Shows the sum of all browser RUM units over all hours in the
            current date for the given org.
          format: int64
          type: integer
        ci_pipeline_indexed_spans_sum:
          description: Shows the sum of all CI pipeline indexed spans over all hours
            in the current date for the given org.
          format: int64
          type: integer
        ci_test_indexed_spans_sum:
          description: Shows the sum of all CI test indexed spans over all hours in
            the current date for the given org.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm:
          description: Shows the high-water mark of all CI visibility intelligent
            test runner committers over all hours in the current date for the given
            org.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm:
          description: Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm:
          description: Shows the high-water mark of all CI visibility test committers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg:
          description: Host count average of Cloud Cost Management for AWS for the
            given date and given org.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg:
          description: Host count average of Cloud Cost Management for Azure for the
            given date and given org.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg:
          description: Host count average of Cloud Cost Management for all cloud providers
            for the given date and given org.
          format: int64
          type: integer
        cloud_siem_events_sum:
          description: Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current date for the given org.
          format: int64
          type: integer
        container_avg:
          description: Shows the average of all distinct containers over all hours
            in the current date for the given org.
          format: int64
          type: integer
        container_excl_agent_avg:
          description: Shows the average of containers without the Datadog Agent over
            all hours in the current date for the given organization.
          format: int64
          type: integer
        container_hwm:
          description: Shows the high-water mark of all distinct containers over all
            hours in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_container_enterprise_total_count_sum:
          description: Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current date
            for the given org.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the current
            date for the given org.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current date for the given
            org.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_aas_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure app services hosts over all hours in the current date for the
            given org.
          format: int64
          type: integer
        cspm_aws_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro AWS hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_azure_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_avg:
          description: Shows the average number of Cloud Security Management Pro containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_container_hwm:
          description: Shows the high-water mark of Cloud Security Management Pro
            containers over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_gcp_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro GCP hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        cspm_host_top99p:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        custom_ts_avg:
          description: Shows the average number of distinct custom metrics over all
            hours in the current date for the given org.
          format: int64
          type: integer
        cws_container_count_avg:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current date for the given org.
          format: int64
          type: integer
        cws_host_top99p:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        dbm_host_top99p_sum:
          description: Shows the 99th percentile of all Database Monitoring hosts
            over all hours in the current month for the given org.
          format: int64
          type: integer
        dbm_queries_avg_sum:
          description: Shows the average of all distinct Database Monitoring normalized
            queries over all hours in the current month for the given org.
          format: int64
          type: integer
        fargate_tasks_count_avg:
          description: The average task count for Fargate.
          format: int64
          type: integer
        fargate_tasks_count_hwm:
          description: Shows the high-water mark of all Fargate tasks over all hours
            in the current date for the given org.
          format: int64
          type: integer
        forwarding_events_bytes_sum:
          description: Shows the sum of all log bytes forwarded over all hours in
            the current date for the given org.
          format: int64
          type: integer
        gcp_host_top99p:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current date for the given org.
          format: int64
          type: integer
        heroku_host_top99p:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current date for the given org.
          format: int64
          type: integer
        id:
          description: The organization id.
          type: string
        incident_management_monthly_active_users_hwm:
          description: Shows the high-water mark of incident management monthly active
            users over all hours in the current date for the given org.
          format: int64
          type: integer
        indexed_events_count_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current date for the given org.
          format: int64
          type: integer
        infra_host_top99p:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current date for the given org.
          format: int64
          type: integer
        ingested_events_bytes_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current date for the given org.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            date for the given org.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_lite_session_count_sum:
          description: Shows the sum of all mobile lite sessions over all hours in
            the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_android_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_flutter_sum:
          description: Shows the sum of all mobile RUM Sessions on Flutter over all
            hours in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_ios_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_sum:
          description: Shows the sum of all mobile RUM Sessions on React Native over
            all hours in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_roku_sum:
          description: Shows the sum of all mobile RUM Sessions on Roku over all hours
            in the current date for the given org.
          format: int64
          type: integer
        mobile_rum_session_count_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current date for the given org.
          format: int64
          type: integer
        mobile_rum_units_sum:
          description: Shows the sum of all mobile RUM units over all hours in the
            current date for the given org.
          format: int64
          type: integer
        name:
          description: The organization name.
          type: string
        ndm_netflow_events_sum:
          description: Shows the sum of all Network Device Monitoring NetFlow events
            over all hours in the current date for the given org.
          format: int64
          type: integer
        netflow_indexed_events_count_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        npm_host_top99p:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current date for the given org.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_sum:
          description: Sum of all observability pipelines bytes processed over all
            hours in the current date for the given org.
          format: int64
          type: integer
        online_archive_events_count_sum:
          description: Sum of all online archived events over all hours in the current
            date for the given org.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p:
          description: Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for the given org.
          format: int64
          type: integer
        opentelemetry_host_top99p:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            date for the given org.
          format: int64
          type: integer
        profiling_aas_count_top99p:
          description: Shows the 99th percentile of all profiled Azure app services
            over all hours in the current date for all organizations.
          format: int64
          type: integer
        profiling_host_top99p:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        public_id:
          description: The organization public id.
          type: string
        region:
          description: The region of the organization.
          type: string
        rum_browser_and_mobile_session_count:
          description: Shows the sum of all mobile sessions and all browser lite and
            legacy sessions over all hours in the current date for the given org.
          format: int64
          type: integer
        rum_session_count_sum:
          description: Shows the sum of all browser RUM Lite Sessions over all hours
            in the current date for the given org.
          format: int64
          type: integer
        rum_total_session_count_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current date for the given org.
          format: int64
          type: integer
        rum_units_sum:
          description: Shows the sum of all browser and mobile RUM units over all
            hours in the current date for the given org.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: Sum of all APM bytes scanned with sensitive data scanner over
            all hours in the current date for the given org.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: Sum of all event stream events bytes scanned with sensitive
            data scanner over all hours in the current date for the given org.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for the given org.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: Sum of all RUM bytes scanned with sensitive data scanner over
            all hours in the current date for the given org.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned across all usage types by
            the Sensitive Data Scanner over all hours in the current month for the
            given org.
          format: int64
          type: integer
        serverless_apps_azure_count_avg:
          description: Shows the average of the number of Serverless Apps for Azure
            for the given date and given org.
          format: int64
          type: integer
        serverless_apps_google_count_avg:
          description: Shows the average of the number of Serverless Apps for Google
            Cloud for the given date and given org.
          format: int64
          type: integer
        serverless_apps_total_count_avg:
          description: Shows the average of the number of Serverless Apps for Azure
            and Google Cloud for the given date and given org.
          format: int64
          type: integer
        synthetics_browser_check_calls_count_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current date for the given org.
          format: int64
          type: integer
        synthetics_check_calls_count_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current date for the given org.
          format: int64
          type: integer
        synthetics_mobile_test_runs_sum:
          description: Shows the sum of all Synthetic mobile application tests over
            all hours in the current date for the given org.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm:
          description: Shows the high-water mark of used synthetics parallel testing
            slots over all hours in the current date for the given org.
          format: int64
          type: integer
        trace_search_indexed_events_count_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current date for the given org.
          format: int64
          type: integer
        twol_ingested_events_bytes_sum:
          description: Shows the sum of all ingested APM span bytes over all hours
            in the current date for the given org.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p:
          description: Shows the 99th percentile of all Universal Service Monitoring
            hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        vsphere_host_top99p:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current date for the given org.
          format: int64
          type: integer
        vuln_management_host_count_top99p:
          description: Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current date for the given org.
          format: int64
          type: integer
        workflow_executions_usage_sum:
          description: Sum of all workflows executed over all hours in the current
            date for the given org.
          format: int64
          type: integer
      type: object
    UsageSummaryResponse:
      description: Response summarizing all usage aggregated across the months in
        the request for all organizations, and broken down by month and by organization.
      properties:
        agent_host_top99p_sum:
          description: Shows the 99th percentile of all agent hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        apm_azure_app_service_host_top99p_sum:
          description: Shows the 99th percentile of all Azure app services using APM
            over all hours in the current months all organizations.
          format: int64
          type: integer
        apm_fargate_count_avg_sum:
          description: Shows the average of all APM ECS Fargate tasks over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        apm_host_top99p_sum:
          description: Shows the 99th percentile of all distinct APM hosts over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        appsec_fargate_count_avg_sum:
          description: Shows the average of all Application Security Monitoring ECS
            Fargate tasks over all hours in the current months for all organizations.
          format: int64
          type: integer
        audit_logs_lines_indexed_agg_sum:
          deprecated: true
          description: Shows the sum of all audit logs lines indexed over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        audit_trail_enabled_hwm_sum:
          description: Shows the total number of organizations that had Audit Trail
            enabled over a specific number of months.
          format: int64
          type: integer
        avg_profiled_fargate_tasks_sum:
          description: Shows the average of all profiled Fargate tasks over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        aws_host_top99p_sum:
          description: Shows the 99th percentile of all AWS hosts over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        aws_lambda_func_count:
          description: Shows the average of the number of functions that executed
            1 or more times each hour in the current months for all organizations.
          format: int64
          type: integer
        aws_lambda_invocations_sum:
          description: Shows the sum of all AWS Lambda invocations over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        azure_app_service_top99p_sum:
          description: Shows the 99th percentile of all Azure app services over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        azure_host_top99p_sum:
          description: Shows the 99th percentile of all Azure hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        billable_ingested_bytes_agg_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        browser_rum_lite_session_count_agg_sum:
          description: Shows the sum of all browser lite sessions over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        browser_rum_replay_session_count_agg_sum:
          description: Shows the sum of all browser replay sessions over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        browser_rum_units_agg_sum:
          description: Shows the sum of all browser RUM units over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        ci_pipeline_indexed_spans_agg_sum:
          description: Shows the sum of all CI pipeline indexed spans over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        ci_test_indexed_spans_agg_sum:
          description: Shows the sum of all CI test indexed spans over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        ci_visibility_itr_committers_hwm_sum:
          description: Shows the high-water mark of all CI visibility intelligent
            test runner committers over all hours in the current months for all organizations.
          format: int64
          type: integer
        ci_visibility_pipeline_committers_hwm_sum:
          description: Shows the high-water mark of all CI visibility pipeline committers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        ci_visibility_test_committers_hwm_sum:
          description: Shows the high-water mark of all CI visibility test committers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        cloud_cost_management_aws_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for
            AWS.
          format: int64
          type: integer
        cloud_cost_management_azure_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for
            Azure.
          format: int64
          type: integer
        cloud_cost_management_host_count_avg_sum:
          description: Sum of the host count average for Cloud Cost Management for
            all cloud providers.
          format: int64
          type: integer
        cloud_siem_events_agg_sum:
          description: Shows the sum of all Cloud Security Information and Event Management
            events over all hours in the current months for all organizations.
          format: int64
          type: integer
        container_avg_sum:
          description: Shows the average of all distinct containers over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        container_excl_agent_avg_sum:
          description: Shows the average of the containers without the Datadog Agent
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        container_hwm_sum:
          description: Shows the sum of the high-water marks of all distinct containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_container_enterprise_compliance_count_agg_sum:
          description: Shows the sum of all Cloud Security Management Enterprise compliance
            containers over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_container_enterprise_cws_count_agg_sum:
          description: Shows the sum of all Cloud Security Management Enterprise Cloud
            Workload Security containers over all hours in the current months for
            all organizations.
          format: int64
          type: integer
        csm_container_enterprise_total_count_agg_sum:
          description: Shows the sum of all Cloud Security Management Enterprise containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_aas_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure app services hosts over all hours in the current months
            for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_aws_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise AWS hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_azure_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Azure hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_compliance_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise compliance hosts over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        csm_host_enterprise_cws_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise Cloud Workload Security hosts over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_gcp_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise GCP hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        csm_host_enterprise_total_host_count_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Enterprise hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_aas_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure app services hosts over all hours in the current months for
            all organizations.
          format: int64
          type: integer
        cspm_aws_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro AWS hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_azure_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro Azure hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_container_avg_sum:
          description: Shows the average number of Cloud Security Management Pro containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_container_hwm_sum:
          description: Shows the sum of the the high-water marks of Cloud Security
            Management Pro containers over all hours in the current months for all
            organizations.
          format: int64
          type: integer
        cspm_gcp_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro GCP hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        cspm_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Security Management
            Pro hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        custom_ts_sum:
          description: Shows the average number of distinct custom metrics over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        cws_containers_avg_sum:
          description: Shows the average of all distinct Cloud Workload Security containers
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        cws_host_top99p_sum:
          description: Shows the 99th percentile of all Cloud Workload Security hosts
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        dbm_host_top99p_sum:
          description: Shows the 99th percentile of all Database Monitoring hosts
            over all hours in the current month for all organizations.
          format: int64
          type: integer
        dbm_queries_avg_sum:
          description: Shows the average of all distinct Database Monitoring Normalized
            Queries over all hours in the current month for all organizations.
          format: int64
          type: integer
        end_date:
          description: Shows the last date of usage in the current months for all
            organizations.
          format: date-time
          type: string
        fargate_tasks_count_avg_sum:
          description: Shows the average of all Fargate tasks over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        fargate_tasks_count_hwm_sum:
          description: Shows the sum of the high-water marks of all Fargate tasks
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        forwarding_events_bytes_agg_sum:
          description: Shows the sum of all logs forwarding bytes over all hours in
            the current months for all organizations (data available as of April 1,
            2023)
          format: int64
          type: integer
        gcp_host_top99p_sum:
          description: Shows the 99th percentile of all GCP hosts over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        heroku_host_top99p_sum:
          description: Shows the 99th percentile of all Heroku dynos over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        incident_management_monthly_active_users_hwm_sum:
          description: Shows sum of the the high-water marks of incident management
            monthly active users in the current months for all organizations.
          format: int64
          type: integer
        indexed_events_count_agg_sum:
          description: Shows the sum of all log events indexed over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        infra_host_top99p_sum:
          description: Shows the 99th percentile of all distinct infrastructure hosts
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        ingested_events_bytes_agg_sum:
          description: Shows the sum of all log bytes ingested over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        iot_device_agg_sum:
          description: Shows the sum of all IoT devices over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        iot_device_top99p_sum:
          description: Shows the 99th percentile of all IoT devices over all hours
            in the current months of all organizations.
          format: int64
          type: integer
        last_updated:
          description: Shows the the most recent hour in the current months for all
            organizations for which all usages were calculated.
          format: date-time
          type: string
        live_indexed_events_agg_sum:
          description: Shows the sum of all live logs indexed over all hours in the
            current months for all organizations (data available as of December 1,
            2020).
          format: int64
          type: integer
        live_ingested_bytes_agg_sum:
          description: Shows the sum of all live logs bytes ingested over all hours
            in the current months for all organizations (data available as of December
            1, 2020).
          format: int64
          type: integer
        logs_by_retention:
          $ref: '#/components/schemas/LogsByRetention'
        mobile_rum_lite_session_count_agg_sum:
          description: Shows the sum of all mobile lite sessions over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_agg_sum:
          description: Shows the sum of all mobile RUM Sessions over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_android_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on Android over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_flutter_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on Flutter over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_ios_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on iOS over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_reactnative_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on React Native over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_session_count_roku_agg_sum:
          description: Shows the sum of all mobile RUM Sessions on Roku over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        mobile_rum_units_agg_sum:
          description: Shows the sum of all mobile RUM units over all hours in the
            current months for all organizations.
          format: int64
          type: integer
        ndm_netflow_events_agg_sum:
          description: Shows the sum of all Network Device Monitoring NetFlow events
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        netflow_indexed_events_count_agg_sum:
          description: Shows the sum of all Network flows indexed over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        npm_host_top99p_sum:
          description: Shows the 99th percentile of all distinct Networks hosts over
            all hours in the current months for all organizations.
          format: int64
          type: integer
        observability_pipelines_bytes_processed_agg_sum:
          description: Sum of all observability pipelines bytes processed over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        online_archive_events_count_agg_sum:
          description: Sum of all online archived events over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        opentelemetry_apm_host_top99p_sum:
          description: Shows the 99th percentile of APM hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        opentelemetry_host_top99p_sum:
          description: Shows the 99th percentile of all hosts reported by the Datadog
            exporter for the OpenTelemetry Collector over all hours in the current
            months for all organizations.
          format: int64
          type: integer
        profiling_aas_count_top99p_sum:
          description: Shows the 99th percentile of all profiled Azure app services
            over all hours in the current months for all organizations.
          format: int64
          type: integer
        profiling_container_agent_count_avg:
          description: Shows the average number of profiled containers over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        profiling_host_count_top99p_sum:
          description: Shows the 99th percentile of all profiled hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        rehydrated_indexed_events_agg_sum:
          description: Shows the sum of all rehydrated logs indexed over all hours
            in the current months for all organizations (data available as of December
            1, 2020).
          format: int64
          type: integer
        rehydrated_ingested_bytes_agg_sum:
          description: Shows the sum of all rehydrated logs bytes ingested over all
            hours in the current months for all organizations (data available as of
            December 1, 2020).
          format: int64
          type: integer
        rum_browser_and_mobile_session_count:
          description: Shows the sum of all mobile sessions and all browser lite and
            legacy sessions over all hours in the current month for all organizations.
          format: int64
          type: integer
        rum_session_count_agg_sum:
          description: Shows the sum of all browser RUM Lite Sessions over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        rum_total_session_count_agg_sum:
          description: Shows the sum of RUM Sessions (browser and mobile) over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        rum_units_agg_sum:
          description: Shows the sum of all browser and mobile RUM units over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        sds_apm_scanned_bytes_sum:
          description: Sum of all APM bytes scanned with sensitive data scanner in
            the current months for all organizations.
          format: int64
          type: integer
        sds_events_scanned_bytes_sum:
          description: Sum of all event stream events bytes scanned with sensitive
            data scanner in the current months for all organizations.
          format: int64
          type: integer
        sds_logs_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned of logs usage by the Sensitive
            Data Scanner over all hours in the current month for all organizations.
          format: int64
          type: integer
        sds_rum_scanned_bytes_sum:
          description: Sum of all RUM bytes scanned with sensitive data scanner in
            the current months for all organizations.
          format: int64
          type: integer
        sds_total_scanned_bytes_sum:
          description: Shows the sum of all bytes scanned across all usage types by
            the Sensitive Data Scanner over all hours in the current month for all
            organizations.
          format: int64
          type: integer
        serverless_apps_azure_count_avg_sum:
          description: Sum of the average number of Serverless Apps for Azure in the
            current months for all organizations.
          format: int64
          type: integer
        serverless_apps_google_count_avg_sum:
          description: Sum of the average number of Serverless Apps for Google Cloud
            in the current months for all organizations.
          format: int64
          type: integer
        serverless_apps_total_count_avg_sum:
          description: Sum of the average number of Serverless Apps for Azure and
            Google Cloud in the current months for all organizations.
          format: int64
          type: integer
        start_date:
          description: Shows the first date of usage in the current months for all
            organizations.
          format: date-time
          type: string
        synthetics_browser_check_calls_count_agg_sum:
          description: Shows the sum of all Synthetic browser tests over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        synthetics_check_calls_count_agg_sum:
          description: Shows the sum of all Synthetic API tests over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        synthetics_mobile_test_runs_agg_sum:
          description: Shows the sum of Synthetic mobile application tests over all
            hours in the current months for all organizations.
          format: int64
          type: integer
        synthetics_parallel_testing_max_slots_hwm_sum:
          description: Shows the sum of the high-water marks of used synthetics parallel
            testing slots over all hours in the current month for all organizations.
          format: int64
          type: integer
        trace_search_indexed_events_count_agg_sum:
          description: Shows the sum of all Indexed Spans indexed over all hours in
            the current months for all organizations.
          format: int64
          type: integer
        twol_ingested_events_bytes_agg_sum:
          description: Shows the sum of all ingested APM span bytes over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        universal_service_monitoring_host_top99p_sum:
          description: Shows the 99th percentile of all Universal Service Monitoring
            hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        usage:
          description: An array of objects regarding hourly usage.
          items:
            $ref: '#/components/schemas/UsageSummaryDate'
          type: array
        vsphere_host_top99p_sum:
          description: Shows the 99th percentile of all vSphere hosts over all hours
            in the current months for all organizations.
          format: int64
          type: integer
        vuln_management_host_count_top99p_sum:
          description: Shows the 99th percentile of all Application Vulnerability
            Management hosts over all hours in the current months for all organizations.
          format: int64
          type: integer
        workflow_executions_usage_agg_sum:
          description: Sum of all workflows executed over all hours in the current
            months for all organizations.
          format: int64
          type: integer
      type: object
    UsageSyntheticsAPIHour:
      description: Number of Synthetics API tests run for each hour for a given organization.
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsAPIResponse:
      description: Response containing the number of Synthetics API tests run for
        each hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Synthetics API tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsAPIHour'
          type: array
      type: object
    UsageSyntheticsBrowserHour:
      description: Number of Synthetics Browser tests run for each hour for a given
        organization.
      properties:
        browser_check_calls_count:
          description: Contains the number of Synthetics Browser tests run.
          format: int64
          nullable: true
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsBrowserResponse:
      description: Response containing the number of Synthetics Browser tests run
        for each hour for a given organization.
      properties:
        usage:
          description: Get hourly usage for Synthetics Browser tests.
          items:
            $ref: '#/components/schemas/UsageSyntheticsBrowserHour'
          type: array
      type: object
    UsageSyntheticsHour:
      description: The number of synthetics tests run for each hour for a given organization.
      properties:
        check_calls_count:
          description: Contains the number of Synthetics API tests run.
          format: int64
          type: integer
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageSyntheticsResponse:
      description: Response containing the number of Synthetics API tests run for
        each hour for a given organization.
      properties:
        usage:
          description: Array with the number of hourly Synthetics test run for a given
            organization.
          items:
            $ref: '#/components/schemas/UsageSyntheticsHour'
          type: array
      type: object
    UsageTimeseriesHour:
      description: The hourly usage of timeseries.
      properties:
        hour:
          description: The hour for the usage.
          format: date-time
          type: string
        num_custom_input_timeseries:
          description: Contains the number of custom metrics that are inputs for aggregations
            (metric configured is custom).
          format: int64
          type: integer
        num_custom_output_timeseries:
          description: Contains the number of custom metrics that are outputs for
            aggregations (metric configured is custom).
          format: int64
          type: integer
        num_custom_timeseries:
          description: Contains sum of non-aggregation custom metrics and custom metrics
            that are outputs for aggregations.
          format: int64
          type: integer
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
      type: object
    UsageTimeseriesResponse:
      description: Response containing hourly usage of timeseries.
      properties:
        usage:
          description: An array of objects regarding hourly usage of timeseries.
          items:
            $ref: '#/components/schemas/UsageTimeseriesHour'
          type: array
      type: object
    UsageTopAvgMetricsHour:
      description: Number of hourly recorded custom metrics for a given organization.
      properties:
        avg_metric_hour:
          description: Average number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        max_metric_hour:
          description: Maximum number of timeseries per hour in which the metric occurs.
          format: int64
          type: integer
        metric_category:
          $ref: '#/components/schemas/UsageMetricCategory'
        metric_name:
          description: Contains the custom metric name.
          type: string
      type: object
    UsageTopAvgMetricsMetadata:
      description: The object containing document metadata.
      properties:
        day:
          description: The day value from the user request that contains the returned
            usage data. (If day was used the request)
          format: date-time
          type: string
        month:
          description: The month value from the user request that contains the returned
            usage data. (If month was used the request)
          format: date-time
          type: string
        pagination:
          $ref: '#/components/schemas/UsageTopAvgMetricsPagination'
      type: object
    UsageTopAvgMetricsPagination:
      description: The metadata for the current pagination.
      properties:
        limit:
          description: Maximum amount of records to be returned.
          format: int64
          type: integer
        next_record_id:
          description: The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
        total_number_of_records:
          description: Total number of records.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageTopAvgMetricsResponse:
      description: Response containing the number of hourly recorded custom metrics
        for a given organization.
      properties:
        metadata:
          $ref: '#/components/schemas/UsageTopAvgMetricsMetadata'
        usage:
          description: Number of hourly recorded custom metrics for a given organization.
          items:
            $ref: '#/components/schemas/UsageTopAvgMetricsHour'
          type: array
      type: object
    User:
      description: Create, edit, and disable users.
      properties:
        access_role:
          $ref: '#/components/schemas/AccessRole'
        disabled:
          description: The new disabled status of the user.
          example: false
          type: boolean
        email:
          description: The new email of the user.
          example: test@datadoghq.com
          format: email
          type: string
        handle:
          description: The user handle, must be a valid email.
          example: test@datadoghq.com
          format: email
          type: string
        icon:
          description: Gravatar icon associated to the user.
          example: /path/to/matching/gravatar/icon
          readOnly: true
          type: string
        name:
          description: The name of the user.
          example: test user
          type: string
        verified:
          description: Whether or not the user logged in Datadog at least once.
          example: true
          readOnly: true
          type: boolean
      type: object
    UserDisableResponse:
      description: Array of user disabled for a given organization.
      properties:
        message:
          description: Information pertaining to a user disabled for a given organization.
          type: string
      type: object
    UserListResponse:
      description: Array of Datadog users for a given organization.
      properties:
        users:
          description: Array of users.
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    UserResponse:
      description: A Datadog User.
      properties:
        user:
          $ref: '#/components/schemas/User'
      type: object
    Version:
      description: Version of the updated signal. If server side version is higher,
        update will be rejected.
      format: int64
      type: integer
    WebhooksIntegration:
      description: Datadog-Webhooks integration.
      properties:
        custom_headers:
          description: 'If `null`, uses no header.

            If given a JSON payload, these will be headers attached to your webhook.'
          nullable: true
          type: string
        encode_as:
          $ref: '#/components/schemas/WebhooksIntegrationEncoding'
        name:
          description: 'The name of the webhook. It corresponds with `<WEBHOOK_NAME>`.

            Learn more on how to use it in

            [monitor notifications](https://docs.datadoghq.com/monitors/notify).'
          example: WEBHOOK_NAME
          type: string
        payload:
          description: 'If `null`, uses the default payload.

            If given a JSON payload, the webhook returns the payload

            specified by the given payload.

            [Webhooks variable usage](https://docs.datadoghq.com/integrations/webhooks/#usage).'
          nullable: true
          type: string
        url:
          description: URL of the webhook.
          example: https://example.com/webhook
          type: string
      required:
      - name
      - url
      type: object
    WebhooksIntegrationCustomVariable:
      description: Custom variable for Webhook integration.
      properties:
        is_secret:
          description: 'Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the response
            payload.'
          example: true
          type: boolean
        name:
          description: The name of the variable. It corresponds with `<CUSTOM_VARIABLE_NAME>`.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: Value of the custom variable.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      required:
      - name
      - value
      - is_secret
      type: object
    WebhooksIntegrationCustomVariableResponse:
      description: Custom variable for Webhook integration.
      properties:
        is_secret:
          description: 'Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the response
            payload.'
          example: true
          type: boolean
        name:
          description: The name of the variable. It corresponds with `<CUSTOM_VARIABLE_NAME>`.
            It must only contains upper-case characters, integers or underscores.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: Value of the custom variable. It won't be returned if the variable
            is secret.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      required:
      - name
      - is_secret
      type: object
    WebhooksIntegrationCustomVariableUpdateRequest:
      description: 'Update request of a custom variable object.


        *All properties are optional.*'
      properties:
        is_secret:
          description: 'Make custom variable is secret or not.

            If the custom variable is secret, the value is not returned in the response
            payload.'
          type: boolean
        name:
          description: The name of the variable. It corresponds with `<CUSTOM_VARIABLE_NAME>`.
            It must only contains upper-case characters, integers or underscores.
          example: CUSTOM_VARIABLE_NAME
          type: string
        value:
          description: Value of the custom variable.
          example: CUSTOM_VARIABLE_VALUE
          type: string
      type: object
    WebhooksIntegrationEncoding:
      default: json
      description: Encoding type. Can be given either `json` or `form`.
      enum:
      - json
      - form
      type: string
      x-enum-varnames:
      - JSON
      - FORM
    WebhooksIntegrationUpdateRequest:
      description: 'Update request of a Webhooks integration object.


        *All properties are optional.*'
      properties:
        custom_headers:
          description: 'If `null`, uses no header.

            If given a JSON payload, these will be headers attached to your webhook.'
          type: string
        encode_as:
          $ref: '#/components/schemas/WebhooksIntegrationEncoding'
        name:
          description: 'The name of the webhook. It corresponds with `<WEBHOOK_NAME>`.

            Learn more on how to use it in

            [monitor notifications](https://docs.datadoghq.com/monitors/notify).'
          example: WEBHOOK_NAME
          type: string
        payload:
          description: 'If `null`, uses the default payload.

            If given a JSON payload, the webhook returns the payload

            specified by the given payload.

            [Webhooks variable usage](https://docs.datadoghq.com/integrations/webhooks/#usage).'
          nullable: true
          type: string
        url:
          description: URL of the webhook.
          example: https://example.com/webhook
          type: string
      type: object
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: Add, modify, and delete service catalog definitions
              when those definitions are maintained by Datadog.
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using
              the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share
              dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification
              settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: Create, view, and manage incidents in Datadog.
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in
              an organization. Mute and unmute hosts. The ability to write monitors
              is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit, mute, and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: Create, edit, and delete Security Filters.
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: Apply, edit, and delete SLO status corrections. A user
              with this permission can make status corrections, even if they do not
              have permission to edit those SLOs.
            slos_read: View SLOs and status corrections.
            slos_write: Create, edit, and delete SLOs.
            synthetics_global_variable_read: View, search, and use Synthetics global
              variables.
            synthetics_global_variable_write: Create, edit, and delete global variables
              for Synthetics.
            synthetics_private_location_read: View, search, and use Synthetics private
              locations.
            synthetics_private_location_write: Create and delete private locations
              in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: Create, edit, and delete Synthetic tests.
            teams_manage: Manage Teams. Create, delete, rename, and edit metadata
              of all Teams. To control Team membership across all Teams, use the User
              Access Manage permission.
            teams_read: Read Teams data. A User with this permission can view Team
              names, metadata, and which Users are on each Team.
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: Disable users, manage user roles, manage SAML-to-role
              mappings, and configure logs restriction queries.
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    apiKeyAuthQuery:
      description: Deprecated API Key as query argument.
      in: query
      name: api_key
      type: apiKey
      x-auth-id-alias: apiKeyAuth
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
    appKeyAuthQuery:
      description: Deprecated APP Key as query argument.
      in: query
      name: application_key
      type: apiKey
      x-auth-id-alias: appKeyAuth
      x-env-name: DD_APP_KEY
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: https://www.datadoghq.com/support/
  description: Collection of all Datadog Public endpoints.
  title: Datadog API V1 Collection
  version: '1.0'
openapi: 3.0.0
paths:
  /:
    get:
      description: Get information about Datadog IP ranges.
      operationId: GetIPRanges
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPRanges'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security: []
      servers:
      - url: https://{subdomain}.{site}
        variables:
          site:
            default: datadoghq.com
            description: The regional site for Datadog customers.
            enum:
            - datadoghq.com
            - us3.datadoghq.com
            - us5.datadoghq.com
            - ap1.datadoghq.com
            - datadoghq.eu
            - ddog-gov.com
          subdomain:
            default: ip-ranges
            description: The subdomain where the API is deployed.
      - url: '{protocol}://{name}'
        variables:
          name:
            default: ip-ranges.datadoghq.com
            description: Full site DNS name.
          protocol:
            default: https
            description: The protocol for accessing the API.
      - url: https://{subdomain}.datadoghq.com
        variables:
          subdomain:
            default: ip-ranges
            description: The subdomain where the API is deployed.
      summary: List IP Ranges
      tags:
      - IP Ranges
  /api/v1/api_key:
    get:
      description: Get all API keys available for your account.
      operationId: ListAPIKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all API keys
      tags:
      - Key Management
    post:
      description: Creates an API key with a given name.
      operationId: CreateAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an API key
      tags:
      - Key Management
      x-codegen-request-body-name: body
  /api/v1/api_key/{key}:
    delete:
      description: Delete a given API key.
      operationId: DeleteAPIKey
      parameters:
      - description: The specific API key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an API key
      tags:
      - Key Management
    get:
      description: Get a given API key.
      operationId: GetAPIKey
      parameters:
      - description: The specific API key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get API key
      tags:
      - Key Management
    put:
      description: Edit an API key name.
      operationId: UpdateAPIKey
      parameters:
      - description: The specific API key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an API key
      tags:
      - Key Management
      x-codegen-request-body-name: body
  /api/v1/application_key:
    get:
      description: Get all application keys available for your Datadog account.
      operationId: ListApplicationKeys
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all application keys
      tags:
      - Key Management
    post:
      description: Create an application key with a given name.
      operationId: CreateApplicationKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an application key
      tags:
      - Key Management
      x-codegen-request-body-name: body
  /api/v1/application_key/{key}:
    delete:
      description: Delete a given application key.
      operationId: DeleteApplicationKey
      parameters:
      - description: The specific APP key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key
      tags:
      - Key Management
    get:
      description: Get a given application key.
      operationId: GetApplicationKey
      parameters:
      - description: The specific APP key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an application key
      tags:
      - Key Management
    put:
      description: Edit an application key name.
      operationId: UpdateApplicationKey
      parameters:
      - description: The specific APP key you are working with.
        in: path
        name: key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key
      tags:
      - Key Management
      x-codegen-request-body-name: body
  /api/v1/check_run:
    post:
      description: 'Submit a list of Service Checks.


        **Notes**:

        - A valid API key is required.

        - Service checks can be submitted up to 10 minutes in the past.'
      operationId: SubmitServiceCheck
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceChecks'
        description: Service Check request body.
        required: true
      responses:
        '202':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        '400':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '408':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        '413':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      summary: Submit a Service Check
      tags:
      - Service Checks
      x-codegen-request-body-name: body
  /api/v1/daily_custom_reports:
    get:
      deprecated: true
      description: 'Get daily custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.'
      operationId: GetDailyCustomReports
      parameters:
      - description: The number of files to return in the response. `[default=60]`.
        in: query
        name: page[size]
        required: false
        schema:
          format: int64
          type: integer
      - description: The identifier of the first page to return. This parameter is
          used for the pagination feature `[default=0]`.
        in: query
        name: page[number]
        required: false
        schema:
          format: int64
          type: integer
      - description: 'The direction to sort by: `[desc, asc]`.'
        in: query
        name: sort_dir
        required: false
        schema:
          $ref: '#/components/schemas/UsageSortDirection'
      - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/UsageSort'
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get the list of available daily custom reports
      tags:
      - Usage Metering
  /api/v1/daily_custom_reports/{report_id}:
    get:
      deprecated: true
      description: 'Get specified daily custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.'
      operationId: GetSpecifiedDailyCustomReports
      parameters:
      - description: Date of the report in the format `YYYY-MM-DD`.
        in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '404':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get specified daily custom reports
      tags:
      - Usage Metering
  /api/v1/dashboard/lists/manual:
    get:
      description: Fetch all of your existing dashboard list definitions.
      operationId: ListDashboardLists
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_read
      summary: Get all dashboard lists
      tags:
      - Dashboard Lists
    post:
      description: Create an empty dashboard list.
      operationId: CreateDashboardList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Create a dashboard list request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_write
      summary: Create a dashboard list
      tags:
      - Dashboard Lists
      x-codegen-request-body-name: body
  /api/v1/dashboard/lists/manual/{list_id}:
    delete:
      description: Delete a dashboard list.
      operationId: DeleteDashboardList
      parameters:
      - description: ID of the dashboard list to delete.
        in: path
        name: list_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_write
      summary: Delete a dashboard list
      tags:
      - Dashboard Lists
    get:
      description: Fetch an existing dashboard list's definition.
      operationId: GetDashboardList
      parameters:
      - description: ID of the dashboard list to fetch.
        in: path
        name: list_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_read
      summary: Get a dashboard list
      tags:
      - Dashboard Lists
    put:
      description: Update the name of a dashboard list.
      operationId: UpdateDashboardList
      parameters:
      - description: ID of the dashboard list to update.
        in: path
        name: list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardList'
        description: Update a dashboard list request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardList'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_write
      summary: Update a dashboard list
      tags:
      - Dashboard Lists
      x-codegen-request-body-name: body
  /api/v1/downtime:
    get:
      description: Get all scheduled downtimes.
      operationId: ListDowntimes
      parameters:
      - description: Only return downtimes that are active when the request is made.
        in: query
        name: current_only
        required: false
        schema:
          type: boolean
      - description: Return creator information.
        in: query
        name: with_creator
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_read
      summary: Get all downtimes
      tags:
      - Downtimes
    post:
      description: Schedule a downtime.
      operationId: CreateDowntime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Schedule a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_downtime
      summary: Schedule a downtime
      tags:
      - Downtimes
      x-codegen-request-body-name: body
  /api/v1/downtime/cancel/by_scope:
    post:
      description: Delete all downtimes that match the scope of `X`.
      operationId: CancelDowntimesByScope
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDowntimesByScopeRequest'
        description: Scope to cancel downtimes for.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CanceledDowntimesIds'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtimes not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_downtime
      summary: Cancel downtimes by scope
      tags:
      - Downtimes
      x-codegen-request-body-name: body
  /api/v1/downtime/{downtime_id}:
    delete:
      description: Cancel a downtime.
      operationId: CancelDowntime
      parameters:
      - description: ID of the downtime to cancel.
        in: path
        name: downtime_id
        required: true
        schema:
          example: 123456
          format: int64
          type: integer
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_downtime
      summary: Cancel a downtime
      tags:
      - Downtimes
    get:
      description: Get downtime detail by `downtime_id`.
      operationId: GetDowntime
      parameters:
      - description: ID of the downtime to fetch.
        in: path
        name: downtime_id
        required: true
        schema:
          example: 123456
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_read
      summary: Get a downtime
      tags:
      - Downtimes
    put:
      description: Update a single downtime by `downtime_id`.
      operationId: UpdateDowntime
      parameters:
      - description: ID of the downtime to update.
        in: path
        name: downtime_id
        required: true
        schema:
          example: 123456
          format: int64
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Downtime'
        description: Update a downtime request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Downtime'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Downtime not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_downtime
      summary: Update a downtime
      tags:
      - Downtimes
      x-codegen-request-body-name: body
  /api/v1/events:
    get:
      description: "The event stream can be queried and filtered by time, priority,
        sources and tags.\n\n**Notes**:\n- If the event you\u2019re querying contains
        markdown formatting of any kind,\nyou may see characters such as `%`,`\\`,`n`
        in your output.\n\n- This endpoint returns a maximum of `1000` most recent
        results. To return additional results,\nidentify the last timestamp of the
        last result and set that as the `end` query time to\npaginate the results.
        You can also use the page parameter to specify which set of `1000` results
        to return."
      operationId: ListEvents
      parameters:
      - description: POSIX timestamp.
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
      - description: POSIX timestamp.
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
      - description: Priority of your events, either `low` or `normal`.
        in: query
        name: priority
        required: false
        schema:
          $ref: '#/components/schemas/EventPriority'
      - description: A comma separated string of sources.
        in: query
        name: sources
        schema:
          type: string
      - description: A comma separated list indicating what tags, if any, should be
          used to filter the list of events.
        example: host:host0
        in: query
        name: tags
        required: false
        schema:
          type: string
      - description: 'Set unaggregated to `true` to return all events within the specified
          [`start`,`end`] timeframe.

          Otherwise if an event is aggregated to a parent event with a timestamp outside
          of the timeframe,

          it won''t be available in the output. Aggregated events with `is_aggregate=true`
          in the response will still be returned unless exclude_aggregate is set to
          `true.`'
        in: query
        name: unaggregated
        required: false
        schema:
          type: boolean
      - description: 'Set `exclude_aggregate` to `true` to only return unaggregated
          events where `is_aggregate=false` in the response. If the `exclude_aggregate`
          parameter is set to `true`,

          then the unaggregated parameter is ignored and will be `true` by default.'
        in: query
        name: exclude_aggregate
        required: false
        schema:
          type: boolean
      - description: 'By default 1000 results are returned per request. Set page to
          the number of the page to return with `0` being the first page. The page
          parameter can only be used

          when either unaggregated or exclude_aggregate is set to `true.`'
        in: query
        name: page
        required: false
        schema:
          format: int32
          maximum: 2147483647
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - events_read
      summary: Get a list of events
      tags:
      - Events
    post:
      description: 'This endpoint allows you to post events to the stream.

        Tag them, set priority and event aggregate them with other events.'
      operationId: CreateEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventCreateRequest'
        description: Event request object
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      summary: Post an event
      tags:
      - Events
      x-codegen-request-body-name: body
  /api/v1/events/{event_id}:
    get:
      description: "This endpoint allows you to query for event details.\n\n**Note**:
        If the event you\u2019re querying contains markdown formatting of any kind,\nyou
        may see characters such as `%`,`\\`,`n` in your output."
      operationId: GetEvent
      parameters:
      - description: The ID of the event.
        in: path
        name: event_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - events_read
      summary: Get an event
      tags:
      - Events
  /api/v1/graph/snapshot:
    get:
      description: 'Take graph snapshots.

        **Note**: When a snapshot is created, there is some delay before it is available.'
      operationId: GetGraphSnapshot
      parameters:
      - description: The metric query.
        in: query
        name: metric_query
        schema:
          type: string
      - description: The POSIX timestamp of the start of the query in seconds.
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
      - description: The POSIX timestamp of the end of the query in seconds.
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
      - description: A query that adds event bands to the graph.
        in: query
        name: event_query
        required: false
        schema:
          type: string
      - description: 'A JSON document defining the graph. `graph_def` can be used
          instead of `metric_query`.

          The JSON document uses the [grammar defined here](https://docs.datadoghq.com/graphing/graphing_json/#grammar)

          and should be formatted to a single line then URL encoded.'
        in: query
        name: graph_def
        required: false
        schema:
          type: string
      - description: A title for the graph. If no title is specified, the graph does
          not have a title.
        in: query
        name: title
        required: false
        schema:
          type: string
      - description: The height of the graph. If no height is specified, the graph's
          original height is used.
        in: query
        name: height
        required: false
        schema:
          format: int64
          type: integer
      - description: The width of the graph. If no width is specified, the graph's
          original width is used.
        in: query
        name: width
        required: false
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphSnapshot'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Take graph snapshots
      tags:
      - Snapshots
  /api/v1/host/{host_name}/mute:
    post:
      description: Mute a host.
      operationId: MuteHost
      parameters:
      - description: Name of the host to mute.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostMuteSettings'
        description: Mute a host request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Mute a host
      tags:
      - Hosts
      x-codegen-request-body-name: body
  /api/v1/host/{host_name}/unmute:
    post:
      description: Unmutes a host. This endpoint takes no JSON arguments.
      operationId: UnmuteHost
      parameters:
      - description: Name of the host to unmute.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostMuteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Unmute a host
      tags:
      - Hosts
      x-codegen-request-body-name: body
  /api/v1/hosts:
    get:
      description: 'This endpoint allows searching for hosts by name, alias, or tag.

        Hosts live within the past 3 hours are included by default.

        Retention is 7 days.

        Results are paginated with a max of 1000 results at a time.'
      operationId: ListHosts
      parameters:
      - description: String to filter search results.
        in: query
        name: filter
        required: false
        schema:
          type: string
      - description: Sort hosts by this field.
        in: query
        name: sort_field
        required: false
        schema:
          type: string
      - description: Direction of sort. Options include `asc` and `desc`.
        in: query
        name: sort_dir
        required: false
        schema:
          type: string
      - description: Host result to start search from.
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
      - description: Number of hosts to return. Max 1000.
        in: query
        name: count
        required: false
        schema:
          format: int64
          type: integer
      - description: Number of seconds since UNIX epoch from which you want to search
          your hosts.
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: Include information on the muted status of hosts and when the
          mute expires.
        in: query
        name: include_muted_hosts_data
        required: false
        schema:
          type: boolean
      - description: Include additional metadata about the hosts (agent_version, machine,
          platform, processor, etc.).
        in: query
        name: include_hosts_metadata
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get all hosts for your organization
      tags:
      - Hosts
  /api/v1/hosts/totals:
    get:
      description: 'This endpoint returns the total number of active and up hosts
        in your Datadog account.

        Active means the host has reported in the past hour, and up means it has reported
        in the past two hours.'
      operationId: GetHostTotals
      parameters:
      - description: Number of seconds from which you want to get total number of
          active hosts.
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTotals'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get the total number of active hosts
      tags:
      - Hosts
  /api/v1/integration/aws:
    delete:
      description: Delete a Datadog-AWS integration matching the specified `account_id`
        and `role_name parameters`.
      operationId: DeleteAWSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountDeleteRequest'
        description: AWS request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an AWS integration
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
    get:
      description: List all Datadog-AWS integrations available in your Datadog organization.
      operationId: ListAWSAccounts
      parameters:
      - description: Only return AWS accounts that matches this `account_id`.
        in: query
        name: account_id
        required: false
        schema:
          type: string
      - description: Only return AWS accounts that matches this role_name.
        in: query
        name: role_name
        required: false
        schema:
          type: string
      - description: Only return AWS accounts that matches this `access_key_id`.
        in: query
        name: access_key_id
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all AWS integrations
      tags:
      - AWS Integration
    post:
      description: 'Create a Datadog-Amazon Web Services integration.

        Using the `POST` method updates your integration configuration

        by adding your new configuration to the existing one in your Datadog organization.

        A unique AWS Account ID for role based authentication.'
      operationId: CreateAWSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS Request Object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an AWS integration
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
    put:
      description: Update a Datadog-Amazon Web Services integration.
      operationId: UpdateAWSAccount
      parameters:
      - description: Only return AWS accounts that matches this `account_id`.
        in: query
        name: account_id
        required: false
        schema:
          type: string
      - description: 'Only return AWS accounts that match this `role_name`.

          Required if `account_id` is specified.'
        in: query
        name: role_name
        required: false
        schema:
          type: string
      - description: 'Only return AWS accounts that matches this `access_key_id`.

          Required if none of the other two options are specified.'
        in: query
        name: access_key_id
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: AWS request object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an AWS integration
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/available_namespace_rules:
    get:
      description: List all namespace rules for a given Datadog-AWS integration. This
        endpoint takes no arguments.
      operationId: ListAvailableAWSNamespaces
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - namespace1
                - namespace2
                - namespace3
                items:
                  type: string
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List namespace rules
      tags:
      - AWS Integration
  /api/v1/integration/aws/event_bridge:
    delete:
      description: Delete an Amazon EventBridge source.
      operationId: DeleteAWSEventBridgeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSEventBridgeDeleteRequest'
        description: Delete the Amazon EventBridge source with the given name, region,
          and associated AWS account.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an Amazon EventBridge source
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
    get:
      description: Get all Amazon EventBridge sources.
      operationId: ListAWSEventBridgeSources
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get all Amazon EventBridge sources
      tags:
      - AWS Integration
    post:
      description: Create an Amazon EventBridge source.
      operationId: CreateAWSEventBridgeSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSEventBridgeCreateRequest'
        description: Create an Amazon EventBridge source for an AWS account with a
          given name and region.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSEventBridgeCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an Amazon EventBridge source
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/filtering:
    delete:
      description: Delete a tag filtering entry.
      operationId: DeleteAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterDeleteRequest'
        description: Delete a tag filtering entry for a given AWS account and `dd-aws`
          namespace.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a tag filtering entry
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
    get:
      description: Get all AWS tag filters.
      operationId: ListAWSTagFilters
      parameters:
      - description: Only return AWS filters that matches this `account_id`.
        in: query
        name: account_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSTagFilterListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all AWS tag filters
      tags:
      - AWS Integration
    post:
      description: Set an AWS tag filter.
      operationId: CreateAWSTagFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSTagFilterCreateRequest'
        description: 'Set an AWS tag filter using an `aws_account_identifier`, `namespace`,
          and filtering string.

          Namespace options are `application_elb`, `elb`, `lambda`, `network_elb`,
          `rds`, `sqs`, and `custom`.'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Set an AWS tag filter
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/generate_new_external_id:
    put:
      description: Generate a new AWS external ID for a given AWS account ID and role
        name pair.
      operationId: CreateNewAWSExternalID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccount'
        description: 'Your Datadog role delegation name.

          For more information about your AWS account Role name,

          see the [Datadog AWS integration configuration info](https://docs.datadoghq.com/integrations/amazon_web_services/#setup).'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Generate a new external ID
      tags:
      - AWS Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/logs:
    delete:
      description: Delete a Datadog-AWS logs configuration by removing the specific
        Lambda ARN associated with a given AWS account.
      operationId: DeleteAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Delete AWS Lambda ARN request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an AWS Logs integration
      tags:
      - AWS Logs Integration
      x-codegen-request-body-name: body
    get:
      description: List all Datadog-AWS Logs integrations configured in your Datadog
        account.
      operationId: ListAWSLogsIntegrations
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - account_id: '123456789101'
                  lambdas: []
                  services:
                  - s3
                  - elb
                  - elbv2
                  - cloudfront
                  - redshift
                  - lambda
                items:
                  $ref: '#/components/schemas/AWSLogsListResponse'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all AWS Logs integrations
      tags:
      - AWS Logs Integration
    post:
      description: Attach the Lambda ARN of the Lambda created for the Datadog-AWS
        log collection to your AWS account ID to enable log collection.
      operationId: CreateAWSLambdaARN
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: AWS Log Lambda Async request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add AWS Log Lambda ARN
      tags:
      - AWS Logs Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/logs/check_async:
    post:
      description: 'Test if permissions are present to add a log-forwarding triggers
        for the given services and AWS account. The input

        is the same as for Enable an AWS service log collection. Subsequent requests
        will always repeat the above, so this

        endpoint can be polled intermittently instead of blocking.


        - Returns a status of ''created'' when it''s checking if the Lambda exists
        in the account.

        - Returns a status of ''waiting'' while checking.

        - Returns a status of ''checked and ok'' if the Lambda exists.

        - Returns a status of ''error'' if the Lambda does not exist.'
      operationId: CheckAWSLogsLambdaAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSAccountAndLambdaRequest'
        description: Check AWS Log Lambda Async request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Check that an AWS Lambda Function exists
      tags:
      - AWS Logs Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/logs/services:
    get:
      description: Get the list of current AWS services that Datadog offers automatic
        log collection. Use returned service IDs with the services parameter for the
        Enable an AWS service log collection API endpoint.
      operationId: ListAWSLogsServices
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                - id: s3
                  label: S3 Access Logs
                - id: elb
                  label: Classic ELB Access Logs
                - id: elbv2
                  label: Application ELB Access Logs
                - id: cloudfront
                  label: CloudFront Access Logs
                - id: redshift
                  label: Redshift Logs
                - id: lambda
                  label: Lambda Cloudwatch Logs
                items:
                  $ref: '#/components/schemas/AWSLogsListServicesResponse'
                type: array
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get list of AWS log ready services
      tags:
      - AWS Logs Integration
    post:
      description: Enable automatic log collection for a list of services. This should
        be run after running `CreateAWSLambdaARN` to save the configuration.
      operationId: EnableAWSLogServices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Enable AWS Log Services request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Enable an AWS Logs integration
      tags:
      - AWS Logs Integration
      x-codegen-request-body-name: body
  /api/v1/integration/aws/logs/services_async:
    post:
      description: "Test if permissions are present to add log-forwarding triggers
        for the\ngiven services and AWS account. Input is the same as for `EnableAWSLogServices`.\nDone
        async, so can be repeatedly polled in a non-blocking fashion until\nthe async
        request completes.\n\n- Returns a status of `created` when it's checking if
        the permissions exists\n  in the AWS account.\n- Returns a status of `waiting`
        while checking.\n- Returns a status of `checked and ok` if the Lambda exists.\n-
        Returns a status of `error` if the Lambda does not exist."
      operationId: CheckAWSLogsServicesAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSLogsServicesRequest'
        description: Check AWS Logs Async Services request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSLogsAsyncResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Check permissions for log services
      tags:
      - AWS Logs Integration
      x-codegen-request-body-name: body
  /api/v1/integration/azure:
    delete:
      description: Delete a given Datadog-Azure integration from your Datadog account.
      operationId: DeleteAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Delete a given Datadog-Azure integration request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an Azure integration
      tags:
      - Azure Integration
      x-codegen-request-body-name: body
    get:
      description: List all Datadog-Azure integrations configured in your Datadog
        account.
      operationId: ListAzureIntegration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all Azure integrations
      tags:
      - Azure Integration
    post:
      description: 'Create a Datadog-Azure integration.


        Using the `POST` method updates your integration configuration by adding your
        new

        configuration to the existing one in your Datadog organization.


        Using the `PUT` method updates your integration configuration by replacing
        your

        current configuration with the new one sent to your Datadog organization.'
      operationId: CreateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Create a Datadog-Azure integration for your Datadog account request
          body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an Azure integration
      tags:
      - Azure Integration
      x-codegen-request-body-name: body
    put:
      description: 'Update a Datadog-Azure integration. Requires an existing `tenant_name`
        and `client_id`.

        Any other fields supplied will overwrite existing values. To overwrite `tenant_name`
        or `client_id`,

        use `new_tenant_name` and `new_client_id`. To leave a field unchanged, do
        not supply that field in the payload.'
      operationId: UpdateAzureIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an Azure integration
      tags:
      - Azure Integration
      x-codegen-request-body-name: body
  /api/v1/integration/azure/host_filters:
    post:
      description: Update the defined list of host filters for a given Datadog-Azure
        integration.
      operationId: UpdateAzureHostFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccount'
        description: Update a Datadog-Azure integration's host filters request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Azure integration host filters
      tags:
      - Azure Integration
      x-codegen-request-body-name: body
  /api/v1/integration/gcp:
    delete:
      deprecated: true
      description: "This endpoint is deprecated \u2013 use the V2 endpoints instead.
        Delete a given Datadog-GCP integration."
      operationId: DeleteGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Delete a given Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a GCP integration
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
    get:
      deprecated: true
      description: "This endpoint is deprecated \u2013 use the V2 endpoints instead.
        List all Datadog-GCP integrations configured in your Datadog account."
      operationId: ListGCPIntegration
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPAccountListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all GCP integrations
      tags:
      - GCP Integration
    post:
      deprecated: true
      description: "This endpoint is deprecated \u2013 use the V2 endpoints instead.
        Create a Datadog-GCP integration."
      operationId: CreateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Create a Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a GCP integration
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
    put:
      deprecated: true
      description: "This endpoint is deprecated \u2013 use the V2 endpoints instead.
        Update a Datadog-GCP integrations host_filters and/or auto-mute.\nRequires
        a `project_id` and `client_email`, however these fields cannot be updated.\nIf
        you need to update these fields, delete and use the create (`POST`) endpoint.\nThe
        unspecified fields will keep their original values."
      operationId: UpdateGCPIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPAccount'
        description: Update a Datadog-GCP integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a GCP integration
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
  /api/v1/integration/pagerduty/configuration/services:
    post:
      description: Create a new service object in the PagerDuty integration.
      operationId: CreatePagerDutyIntegrationService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyService'
        description: Create a new service object request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new service object
      tags:
      - PagerDuty Integration
      x-codegen-request-body-name: body
  /api/v1/integration/pagerduty/configuration/services/{service_name}:
    delete:
      description: Delete a single service object in the Datadog-PagerDuty integration.
      operationId: DeletePagerDutyIntegrationService
      parameters:
      - description: The service name
        in: path
        name: service_name
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a single service object
      tags:
      - PagerDuty Integration
    get:
      description: Get service name in the Datadog-PagerDuty integration.
      operationId: GetPagerDutyIntegrationService
      parameters:
      - description: The service name.
        in: path
        name: service_name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagerDutyServiceName'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a single service object
      tags:
      - PagerDuty Integration
    put:
      description: Update a single service object in the Datadog-PagerDuty integration.
      operationId: UpdatePagerDutyIntegrationService
      parameters:
      - description: The service name
        in: path
        name: service_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagerDutyServiceKey'
        description: Update an existing service object request body.
        required: true
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a single service object
      tags:
      - PagerDuty Integration
      x-codegen-request-body-name: body
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels:
    get:
      description: Get a list of all channels configured for your Datadog-Slack integration.
      operationId: GetSlackIntegrationChannels
      parameters:
      - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannels'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all channels in a Slack integration
      tags:
      - Slack Integration
    post:
      description: Add a channel to your Datadog-Slack integration.
      operationId: CreateSlackIntegrationChannel
      parameters:
      - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing Slack channel to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Slack integration channel
      tags:
      - Slack Integration
      x-codegen-request-body-name: body
  /api/v1/integration/slack/configuration/accounts/{account_name}/channels/{channel_name}:
    delete:
      description: Remove a channel from your Datadog-Slack integration.
      operationId: RemoveSlackIntegrationChannel
      parameters:
      - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      responses:
        '204':
          description: The channel was removed successfully.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Remove a Slack integration channel
      tags:
      - Slack Integration
    get:
      description: Get a channel configured for your Datadog-Slack integration.
      operationId: GetSlackIntegrationChannel
      parameters:
      - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a Slack integration channel
      tags:
      - Slack Integration
    patch:
      description: Update a channel used in your Datadog-Slack integration.
      operationId: UpdateSlackIntegrationChannel
      parameters:
      - $ref: '#/components/parameters/SlackAccountNamePathParameter'
      - $ref: '#/components/parameters/SlackChannelNamePathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlackIntegrationChannel'
        description: Payload describing fields and values to be updated.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackIntegrationChannel'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a Slack integration channel
      tags:
      - Slack Integration
      x-codegen-request-body-name: body
  /api/v1/integration/webhooks/configuration/custom-variables:
    post:
      description: Creates an endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: CreateWebhooksIntegrationCustomVariable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegrationCustomVariable'
        description: Define a custom variable request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a custom variable
      tags:
      - Webhooks Integration
      x-codegen-request-body-name: body
  /api/v1/integration/webhooks/configuration/custom-variables/{custom_variable_name}:
    delete:
      description: Deletes the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: DeleteWebhooksIntegrationCustomVariable
      parameters:
      - description: The name of the custom variable.
        in: path
        name: custom_variable_name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a custom variable
      tags:
      - Webhooks Integration
    get:
      description: 'Shows the content of the custom variable with the name `<CUSTOM_VARIABLE_NAME>`.


        If the custom variable is secret, the value does not return in the

        response payload.'
      operationId: GetWebhooksIntegrationCustomVariable
      parameters:
      - description: The name of the custom variable.
        in: path
        name: custom_variable_name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a custom variable
      tags:
      - Webhooks Integration
    put:
      description: Updates the endpoint with the name `<CUSTOM_VARIABLE_NAME>`.
      operationId: UpdateWebhooksIntegrationCustomVariable
      parameters:
      - description: The name of the custom variable.
        in: path
        name: custom_variable_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegrationCustomVariableUpdateRequest'
        description: Update an existing custom variable request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegrationCustomVariableResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a custom variable
      tags:
      - Webhooks Integration
      x-codegen-request-body-name: body
  /api/v1/integration/webhooks/configuration/webhooks:
    post:
      description: Creates an endpoint with the name `<WEBHOOK_NAME>`.
      operationId: CreateWebhooksIntegration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegration'
        description: Create a webhooks integration request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - create_webhooks
      summary: Create a webhooks integration
      tags:
      - Webhooks Integration
      x-codegen-request-body-name: body
  /api/v1/integration/webhooks/configuration/webhooks/{webhook_name}:
    delete:
      description: Deletes the endpoint with the name `<WEBHOOK NAME>`.
      operationId: DeleteWebhooksIntegration
      parameters:
      - description: The name of the webhook.
        in: path
        name: webhook_name
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a webhook
      tags:
      - Webhooks Integration
    get:
      description: Gets the content of the webhook with the name `<WEBHOOK_NAME>`.
      operationId: GetWebhooksIntegration
      parameters:
      - description: The name of the webhook.
        in: path
        name: webhook_name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a webhook integration
      tags:
      - Webhooks Integration
    put:
      description: Updates the endpoint with the name `<WEBHOOK_NAME>`.
      operationId: UpdateWebhooksIntegration
      parameters:
      - description: The name of the webhook.
        in: path
        name: webhook_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhooksIntegrationUpdateRequest'
        description: Update an existing Datadog-Webhooks integration.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksIntegration'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Item Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a webhook
      tags:
      - Webhooks Integration
      x-codegen-request-body-name: body
  /api/v1/logs-queries/list:
    post:
      description: 'List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives'
      operationId: ListLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequest'
        description: Logs filter
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search logs
      tags:
      - Logs
      x-codegen-request-body-name: body
  /api/v1/logs/config/index-order:
    get:
      description: Get the current order of your log indexes. This endpoint takes
        no JSON arguments.
      operationId: GetLogsIndexOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get indexes order
      tags:
      - Logs Indexes
    put:
      description: 'This endpoint updates the index order of your organization.

        It returns the index order object passed in the request body when the request
        is successful.'
      operationId: UpdateLogsIndexOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexesOrder'
        description: Object containing the new ordered list of index names
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexesOrder'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update indexes order
      tags:
      - Logs Indexes
      x-codegen-request-body-name: body
  /api/v1/logs/config/indexes:
    get:
      description: 'The Index object describes the configuration of a log index.

        This endpoint returns an array of the `LogIndex` objects of your organization.'
      operationId: ListLogIndexes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndexListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get all indexes
      tags:
      - Logs Indexes
    post:
      description: Creates a new index. Returns the Index object passed in the request
        body when the request is successful.
      operationId: CreateLogsIndex
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndex'
        description: Object containing the new index.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an index
      tags:
      - Logs Indexes
      x-codegen-request-body-name: body
  /api/v1/logs/config/indexes/{name}:
    get:
      description: Get one log index from your organization. This endpoint takes no
        JSON arguments.
      operationId: GetLogsIndex
      parameters:
      - description: Name of the log index.
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an index
      tags:
      - Logs Indexes
    put:
      description: "Update an index as identified by its name.\nReturns the Index
        object passed in the request body when the request is successful.\n\nUsing
        the `PUT` method updates your index\u2019s configuration by **replacing**\nyour
        current configuration with the new one sent to your Datadog organization."
      operationId: UpdateLogsIndex
      parameters:
      - description: Name of the log index.
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsIndexUpdateRequest'
        description: Object containing the new `LogsIndexUpdateRequest`.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsIndex'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Invalid Parameter Error
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAPIErrorResponse'
          description: Too Many Requests
      summary: Update an index
      tags:
      - Logs Indexes
      x-codegen-request-body-name: body
  /api/v1/metrics:
    get:
      description: Get the list of actively reporting metrics from a given time until
        now.
      operationId: ListActiveMetrics
      parameters:
      - description: Seconds since the Unix epoch.
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - description: 'Hostname for filtering the list of metrics returned.

          If set, metrics retrieved are those with the corresponding hostname tag.'
        in: query
        name: host
        required: false
        schema:
          type: string
      - description: 'Filter metrics that have been submitted with the given tags.
          Supports boolean and wildcard expressions.

          Cannot be combined with other filters.'
        example: env IN (staging,test) AND service:web
        in: query
        name: tag_filter
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - metrics_read
      summary: Get active metrics list
      tags:
      - Metrics
  /api/v1/metrics/{metric_name}:
    get:
      description: Get metadata about a specific metric.
      operationId: GetMetricMetadata
      parameters:
      - description: Name of the metric for which to get metadata.
        in: path
        name: metric_name
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadata'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - metrics_read
      summary: Get metric metadata
      tags:
      - Metrics
    put:
      description: Edit metadata of a specific metric. Find out more about [supported
        types](https://docs.datadoghq.com/developers/metrics).
      operationId: UpdateMetricMetadata
      parameters:
      - description: Name of the metric for which to edit metadata.
        in: path
        name: metric_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricMetadata'
        description: New metadata.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricMetadata'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit metric metadata
      tags:
      - Metrics
      x-codegen-request-body-name: body
  /api/v1/monitor/{monitor_id}/downtimes:
    get:
      description: Get all active downtimes for the specified monitor.
      operationId: ListMonitorDowntimes
      parameters:
      - description: The id of the monitor
        in: path
        name: monitor_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Downtime'
                type: array
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - monitors_read
      summary: Get active downtimes for a monitor
      tags:
      - Downtimes
      x-codegen-request-body-name: body
  /api/v1/monthly_custom_reports:
    get:
      deprecated: true
      description: 'Get monthly custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.'
      operationId: GetMonthlyCustomReports
      parameters:
      - description: The number of files to return in the response `[default=60].`
        in: query
        name: page[size]
        required: false
        schema:
          format: int64
          type: integer
      - description: The identifier of the first page to return. This parameter is
          used for the pagination feature `[default=0]`.
        in: query
        name: page[number]
        required: false
        schema:
          format: int64
          type: integer
      - description: 'The direction to sort by: `[desc, asc]`.'
        in: query
        name: sort_dir
        required: false
        schema:
          $ref: '#/components/schemas/UsageSortDirection'
      - description: 'The field to sort by: `[computed_on, size, start_date, end_date]`.'
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/UsageSort'
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCustomReportsResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get the list of available monthly custom reports
      tags:
      - Usage Metering
  /api/v1/monthly_custom_reports/{report_id}:
    get:
      deprecated: true
      description: 'Get specified monthly custom reports.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.'
      operationId: GetSpecifiedMonthlyCustomReports
      parameters:
      - description: Date of the report in the format `YYYY-MM-DD`.
        in: path
        name: report_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSpecifiedCustomReportsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '404':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get specified monthly custom reports
      tags:
      - Usage Metering
  /api/v1/org:
    get:
      description: This endpoint returns data on your top-level organization.
      operationId: ListOrgs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List your managed organizations
      tags:
      - Organizations
    post:
      description: 'Create a child organization.


        This endpoint requires the

        [multi-organization account](https://docs.datadoghq.com/account_management/multi_organization/)

        feature and must be enabled by

        [contacting support](https://docs.datadoghq.com/help/).


        Once a new child organization is created, you can interact with it

        by using the `org.public_id`, `api_key.key`, and

        `application_key.hash` provided in the response.'
      operationId: CreateChildOrg
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateBody'
        description: Organization object that needs to be created
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a child organization
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v1/org/{public_id}:
    get:
      description: Get organization information.
      operationId: GetOrg
      parameters:
      - description: The `public_id` of the organization you are operating within.
        in: path
        name: public_id
        required: true
        schema:
          example: abc123
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get organization information
      tags:
      - Organizations
    put:
      description: Update your organization.
      operationId: UpdateOrg
      parameters:
      - description: The `public_id` of the organization you are operating within.
        in: path
        name: public_id
        required: true
        schema:
          example: abc123
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update your organization
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v1/org/{public_id}/downgrade:
    post:
      description: Only available for MSP customers. Removes a child organization
        from the hierarchy of the master organization and places the child organization
        on a 30-day trial.
      operationId: DowngradeOrg
      parameters:
      - description: The `public_id` of the organization you are operating within.
        in: path
        name: public_id
        required: true
        schema:
          example: abc123
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgDowngradedResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Spin-off Child Organization
      tags:
      - Organizations
  /api/v1/org/{public_id}/idp_metadata:
    post:
      description: 'There are a couple of options for updating the Identity Provider
        (IdP)

        metadata from your SAML IdP.


        * **Multipart Form-Data**: Post the IdP metadata file using a form post.


        * **XML Body:** Post the IdP metadata file as the body of the request.'
      operationId: UploadIdPForOrg
      parameters:
      - description: The `public_id` of the organization you are operating with
        in: path
        name: public_id
        required: true
        schema:
          example: abc123
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdpFormData'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '415':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unsupported Media Type
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Upload IdP metadata
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v1/query:
    get:
      description: Query timeseries points.
      operationId: QueryMetrics
      parameters:
      - description: Start of the queried time period, seconds since the Unix epoch.
        in: query
        name: from
        required: true
        schema:
          format: int64
          type: integer
      - description: End of the queried time period, seconds since the Unix epoch.
        in: query
        name: to
        required: true
        schema:
          format: int64
          type: integer
      - description: Query string.
        in: query
        name: query
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQueryResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - timeseries_query
      summary: Query timeseries points
      tags:
      - Metrics
  /api/v1/search:
    get:
      description: Search for metrics from the last 24 hours in Datadog.
      operationId: ListMetrics
      parameters:
      - description: Query string to search metrics upon. Can optionally be prefixed
          with `metrics:`.
        in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricSearchResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Search metrics
      tags:
      - Metrics
  /api/v1/security_analytics/signals/{signal_id}/add_to_incident:
    patch:
      description: Add a security signal to an incident. This makes it possible to
        search for signals by incident within the signal explorer and to view the
        signals on the incident timeline.
      operationId: AddSecurityMonitoringSignalToIncident
      parameters:
      - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddSignalToIncidentRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add a security signal to an incident
      tags:
      - Security Monitoring
      x-codegen-request-body-name: body
  /api/v1/security_analytics/signals/{signal_id}/assignee:
    patch:
      description: Modify the triage assignee of a security signal.
      operationId: EditSecurityMonitoringSignalAssignee
      parameters:
      - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalAssigneeUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Modify the triage assignee of a security signal
      tags:
      - Security Monitoring
      x-codegen-request-body-name: body
  /api/v1/security_analytics/signals/{signal_id}/state:
    patch:
      description: Change the triage state of a security signal.
      operationId: EditSecurityMonitoringSignalState
      parameters:
      - $ref: '#/components/parameters/SignalID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalStateUpdateRequest'
        description: Attributes describing the signal update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulSignalUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Change the triage state of a security signal
      tags:
      - Security Monitoring
      x-codegen-request-body-name: body
  /api/v1/series:
    post:
      description: "The metrics end-point allows you to post time-series data that
        can be graphed on Datadog\u2019s dashboards.\nThe maximum payload size is
        3.2 megabytes (3200000 bytes). Compressed payloads must have a decompressed
        size of less than 62 megabytes (62914560 bytes).\n\nIf you\u2019re submitting
        metrics directly to the Datadog API without using DogStatsD, expect:\n\n-
        64 bits for the timestamp\n- 64 bits for the value\n- 40 bytes for the metric
        names\n- 50 bytes for the timeseries\n- The full payload is approximately
        100 bytes. However, with the DogStatsD API,\ncompression is applied, which
        reduces the payload size."
      operationId: SubmitMetrics
      parameters:
      - description: HTTP header used to compress the media-type.
        in: header
        name: Content-Encoding
        required: false
        schema:
          $ref: '#/components/schemas/MetricContentEncoding'
      requestBody:
        content:
          text/json:
            examples:
              dynamic-points:
                description: "Post time-series data that can be graphed on Datadog\u2019s
                  dashboards."
                externalValue: examples/metrics/dynamic-points.json.sh
                summary: Dynamic Points
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/MetricsPayload'
        required: true
      responses:
        '202':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        '400':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '408':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        '413':
          content:
            text/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      summary: Submit metrics
      tags:
      - Metrics
      x-codegen-request-body-name: body
  /api/v1/slo:
    get:
      description: Get a list of service level objective objects for your organization.
      operationId: ListSLOs
      parameters:
      - description: A comma separated list of the IDs of the service level objectives
          objects.
        example: id1, id2, id3
        in: query
        name: ids
        required: false
        schema:
          type: string
      - description: The query string to filter results based on SLO names.
        example: monitor
        in: query
        name: query
        required: false
        schema:
          type: string
      - description: The query string to filter results based on a single SLO tag.
        example: env:prod
        in: query
        name: tags_query
        required: false
        schema:
          type: string
      - description: The query string to filter results based on SLO numerator and
          denominator.
        example: aws.elb.request_count
        in: query
        name: metrics_query
        required: false
        schema:
          type: string
      - description: The number of SLOs to return in the response.
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          format: int64
          type: integer
      - description: The specific offset to use as the beginning of the returned response.
        in: query
        name: offset
        required: false
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Get all SLOs
      tags:
      - Service Level Objectives
      x-pagination:
        limitParam: limit
        pageOffsetParam: offset
        resultsPath: data
    post:
      description: Create a service level objective object.
      operationId: CreateSLO
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjectiveRequest'
        description: Service level objective request object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_write
      summary: Create an SLO object
      tags:
      - Service Level Objectives
      x-codegen-request-body-name: body
  /api/v1/slo/bulk_delete:
    post:
      description: 'Delete (or partially delete) multiple service level objective
        objects.


        This endpoint facilitates deletion of one or more thresholds for one or more

        service level objective objects. If all thresholds are deleted, the service
        level

        objective object is deleted as well.'
      operationId: DeleteSLOTimeframeInBulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOBulkDelete'
        description: Delete multiple service level objective objects request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOBulkDeleteResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_write
      summary: Bulk Delete SLO Timeframes
      tags:
      - Service Level Objectives
      x-codegen-request-body-name: body
  /api/v1/slo/can_delete:
    get:
      description: 'Check if an SLO can be safely deleted. For example,

        assure an SLO can be deleted without disrupting a dashboard.'
      operationId: CheckCanDeleteSLO
      parameters:
      - description: A comma separated list of the IDs of the service level objectives
          objects.
        example: id1, id2, id3
        in: query
        name: ids
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckCanDeleteSLOResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Check if SLOs can be safely deleted
      tags:
      - Service Level Objectives
  /api/v1/slo/correction:
    get:
      description: Get all Service Level Objective corrections.
      operationId: ListSLOCorrection
      parameters:
      - description: The specific offset to use as the beginning of the returned response.
        in: query
        name: offset
        required: false
        schema:
          format: int64
          type: integer
      - description: The number of SLO corrections to return in the response. Default
          is 25.
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Get all SLO corrections
      tags:
      - Service Level Objective Corrections
      x-pagination:
        limitParam: limit
        pageOffsetParam: offset
        resultsPath: data
    post:
      description: Create an SLO Correction.
      operationId: CreateSLOCorrection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionCreateRequest'
        description: Create an SLO Correction
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: SLO Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_corrections
      summary: Create an SLO correction
      tags:
      - Service Level Objective Corrections
      x-codegen-request-body-name: body
  /api/v1/slo/correction/{slo_correction_id}:
    delete:
      description: Permanently delete the specified SLO correction object.
      operationId: DeleteSLOCorrection
      parameters:
      - description: The ID of the SLO correction object.
        in: path
        name: slo_correction_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an SLO correction
      tags:
      - Service Level Objective Corrections
    get:
      description: Get an SLO correction.
      operationId: GetSLOCorrection
      parameters:
      - description: The ID of the SLO correction object.
        in: path
        name: slo_correction_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an SLO correction for an SLO
      tags:
      - Service Level Objective Corrections
    patch:
      description: Update the specified SLO correction object.
      operationId: UpdateSLOCorrection
      parameters:
      - description: The ID of the SLO correction object.
        in: path
        name: slo_correction_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLOCorrectionUpdateRequest'
        description: The edited SLO correction object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an SLO correction
      tags:
      - Service Level Objective Corrections
      x-codegen-request-body-name: body
  /api/v1/slo/search:
    get:
      description: Get a list of service level objective objects for your organization.
      operationId: SearchSLO
      parameters:
      - description: 'The query string to filter results based on SLO names.

          Some examples of queries include `service:<service-name>`

          and `<slo-name>`.'
        in: query
        name: query
        required: false
        schema:
          type: string
      - description: The number of files to return in the response `[default=10]`.
        in: query
        name: page[size]
        required: false
        schema:
          format: int64
          type: integer
      - description: The identifier of the first page to return. This parameter is
          used for the pagination feature `[default=0]`.
        in: query
        name: page[number]
        required: false
        schema:
          format: int64
          type: integer
      - description: Whether or not to return facet information in the response `[default=false]`.
        in: query
        name: include_facets
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchSLOResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Search for SLOs
      tags:
      - Service Level Objectives
  /api/v1/slo/{slo_id}:
    delete:
      description: 'Permanently delete the specified service level objective object.


        If an SLO is used in a dashboard, the `DELETE /v1/slo/` endpoint returns

        a 409 conflict error because the SLO is referenced in a dashboard.'
      operationId: DeleteSLO
      parameters:
      - description: The ID of the service level objective.
        in: path
        name: slo_id
        required: true
        schema:
          type: string
      - description: Delete the monitor even if it's referenced by other resources
          (for example SLO, composite monitor).
        in: query
        name: force
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLODeleteResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_write
      summary: Delete an SLO
      tags:
      - Service Level Objectives
    get:
      description: Get a service level objective object.
      operationId: GetSLO
      parameters:
      - description: The ID of the service level objective object.
        in: path
        name: slo_id
        required: true
        schema:
          type: string
      - description: Get the IDs of SLO monitors that reference this SLO.
        example: true
        in: query
        name: with_configured_alert_ids
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Get an SLO's details
      tags:
      - Service Level Objectives
    put:
      description: Update the specified service level objective object.
      operationId: UpdateSLO
      parameters:
      - description: The ID of the service level objective object.
        in: path
        name: slo_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLevelObjective'
        description: The edited service level objective request object.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_write
      summary: Update an SLO
      tags:
      - Service Level Objectives
      x-codegen-request-body-name: body
  /api/v1/slo/{slo_id}/corrections:
    get:
      description: Get corrections applied to an SLO
      operationId: GetSLOCorrections
      parameters:
      - description: The ID of the service level objective object.
        in: path
        name: slo_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOCorrectionListResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Get Corrections For an SLO
      tags:
      - Service Level Objectives
  /api/v1/slo/{slo_id}/history:
    get:
      description: "Get a specific SLO\u2019s history, regardless of its SLO type.\n\nThe
        detailed history data is structured according to the source data type.\nFor
        example, metric data is included for event SLOs that use\nthe metric source,
        and monitor SLO types include the monitor transition history.\n\n**Note:**
        There are different response formats for event based and time based SLOs.\nExamples
        of both are shown."
      operationId: GetSLOHistory
      parameters:
      - description: The ID of the service level objective object.
        in: path
        name: slo_id
        required: true
        schema:
          type: string
      - description: The `from` timestamp for the query window in epoch seconds.
        in: query
        name: from_ts
        required: true
        schema:
          format: int64
          type: integer
      - description: The `to` timestamp for the query window in epoch seconds.
        in: query
        name: to_ts
        required: true
        schema:
          format: int64
          type: integer
      - description: The SLO target. If `target` is passed in, the response will include
          the remaining error budget and a timeframe value of `custom`.
        in: query
        name: target
        schema:
          exclusiveMaximum: true
          exclusiveMinimum: true
          format: double
          maximum: 100
          minimum: 0
          type: number
      - description: 'Defaults to `true`. If any SLO corrections are applied and this
          parameter is set to `false`,

          then the corrections will not be applied and the SLI values will not be
          affected.'
        in: query
        name: apply_correction
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLOHistoryResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - slos_read
      summary: Get an SLO's history
      tags:
      - Service Level Objectives
  /api/v1/tags/hosts:
    get:
      description: Return a mapping of tags to hosts for your whole infrastructure.
      operationId: ListHostTags
      parameters:
      - description: When specified, filters host list to those tags with the specified
          source.
        in: query
        name: source
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagToHosts'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get Tags
      tags:
      - Tags
  /api/v1/tags/hosts/{host_name}:
    delete:
      description: 'This endpoint allows you to remove all user-assigned tags

        for a single host.'
      operationId: DeleteHostTags
      parameters:
      - description: This endpoint allows you to remove all user-assigned tags for
          a single host.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      - description: 'The source of the tags (for example chef, puppet).

          [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'
        in: query
        name: source
        required: false
        schema:
          type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Remove host tags
      tags:
      - Tags
    get:
      description: Return the list of tags that apply to a given host.
      operationId: GetHostTags
      parameters:
      - description: When specified, filters list of tags to those tags with the specified
          source.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      - description: Source to filter.
        in: query
        name: source
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get host tags
      tags:
      - Tags
    post:
      description: 'This endpoint allows you to add new tags to a host,

        optionally specifying where these tags come from.'
      operationId: CreateHostTags
      parameters:
      - description: This endpoint allows you to add new tags to a host, optionally
          specifying where the tags came from.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      - description: 'The source of the tags.

          [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'
        example: chef
        in: query
        name: source
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Update host tags request body.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: Created
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add tags to a host
      tags:
      - Tags
      x-codegen-request-body-name: body
    put:
      description: 'This endpoint allows you to update/replace all tags in

        an integration source with those supplied in the request.'
      operationId: UpdateHostTags
      parameters:
      - description: This endpoint allows you to update/replace all in an integration
          source with those supplied in the request.
        in: path
        name: host_name
        required: true
        schema:
          type: string
      - description: 'The source of the tags (for example chef, puppet).

          [Complete list of source attribute values](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value)'
        in: query
        name: source
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostTags'
        description: Add tags to host
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTags'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update host tags
      tags:
      - Tags
      x-codegen-request-body-name: body
  /api/v1/usage/analyzed_logs:
    get:
      description: 'Get hourly usage for analyzed logs (Security Monitoring).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageAnalyzedLogs
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAnalyzedLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for analyzed logs
      tags:
      - Usage Metering
  /api/v1/usage/attribution:
    get:
      deprecated: true
      description: 'Get usage attribution.

        **Note:** This endpoint will be fully deprecated on December 1, 2022.

        Refer to [Migrating from v1 to v2 of the Usage Attribution API](https://docs.datadoghq.com/account_management/guide/usage-attribution-migration/)
        for the associated migration guide.'
      operationId: GetUsageAttribution
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage beginning in this month.

          Maximum of 15 months ago.'
        in: query
        name: start_month
        required: true
        schema:
          format: date-time
          type: string
      - description: Comma-separated list of usage types to return, or `*` for all
          usage types.
        in: query
        name: fields
        required: true
        schema:
          $ref: '#/components/schemas/UsageAttributionSupportedMetrics'
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      - description: 'The direction to sort by: `[desc, asc]`.'
        in: query
        name: sort_direction
        required: false
        schema:
          $ref: '#/components/schemas/UsageSortDirection'
      - description: The field to sort by.
        in: query
        name: sort_name
        required: false
        schema:
          $ref: '#/components/schemas/UsageAttributionSort'
      - description: Include child org usage in the response. Defaults to false.
        in: query
        name: include_descendants
        required: false
        schema:
          default: false
          type: boolean
      - description: Number of records to skip before beginning to return.
        in: query
        name: offset
        required: false
        schema:
          $ref: '#/components/schemas/UsageAttributionOffset'
      - description: Maximum number of records to be returned.
        in: query
        name: limit
        required: false
        schema:
          $ref: '#/components/schemas/UsageAttributionLimit'
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAttributionResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get usage attribution
      tags:
      - Usage Metering
  /api/v1/usage/audit_logs:
    get:
      deprecated: true
      description: 'Get hourly usage for audit logs.

        **Note:** This endpoint has been deprecated.'
      operationId: GetUsageAuditLogs
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageAuditLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for audit logs
      tags:
      - Usage Metering
  /api/v1/usage/aws_lambda:
    get:
      description: 'Get hourly usage for lambda.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageLambda
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for lambda
      tags:
      - Usage Metering
  /api/v1/usage/billable-summary:
    get:
      description: Get billable usage across your account.
      operationId: GetUsageBillableSummary
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage starting this month.'
        in: query
        name: month
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageBillableSummaryResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get billable usage across your account
      tags:
      - Usage Metering
  /api/v1/usage/ci-app:
    get:
      description: 'Get hourly usage for CI visibility (tests, pipeline, and spans).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageCIApp
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCIVisibilityResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for CI visibility
      tags:
      - Usage Metering
  /api/v1/usage/cspm:
    get:
      description: 'Get hourly usage for cloud security management (CSM) pro.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageCloudSecurityPostureManagement
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCloudSecurityPostureManagementResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for CSM Pro
      tags:
      - Usage Metering
  /api/v1/usage/cws:
    get:
      description: 'Get hourly usage for cloud workload security.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageCWS
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageCWSResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for cloud workload security
      tags:
      - Usage Metering
  /api/v1/usage/dbm:
    get:
      description: 'Get hourly usage for database monitoring

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageDBM
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageDBMResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for database monitoring
      tags:
      - Usage Metering
  /api/v1/usage/fargate:
    get:
      description: 'Get hourly usage for [Fargate](https://docs.datadoghq.com/integrations/ecs_fargate/).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageFargate
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageFargateResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for Fargate
      tags:
      - Usage Metering
  /api/v1/usage/hosts:
    get:
      description: 'Get hourly usage for hosts and containers.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageHosts
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageHostsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for hosts and containers
      tags:
      - Usage Metering
  /api/v1/usage/hourly-attribution:
    get:
      description: "Get hourly usage attribution. Multi-region data is available starting
        March 1, 2023.\n\nThis API endpoint is paginated. To make sure you receive
        all records, check if the value of `next_record_id` is\nset in the response.
        If it is, make another request and pass `next_record_id` as a parameter.\nPseudo
        code example:\n\n```\nresponse := GetHourlyUsageAttribution(start_month)\ncursor
        := response.metadata.pagination.next_record_id\nWHILE cursor != null BEGIN\n
        \ sleep(5 seconds)  # Avoid running into rate limit\n  response := GetHourlyUsageAttribution(start_month,
        next_record_id=cursor)\n  cursor := response.metadata.pagination.next_record_id\nEND\n```"
      operationId: GetHourlyUsageAttribution
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      - description: Usage type to retrieve.
        in: query
        name: usage_type
        required: true
        schema:
          $ref: '#/components/schemas/HourlyUsageAttributionUsageType'
      - description: List following results with a next_record_id provided in the
          previous query.
        in: query
        name: next_record_id
        required: false
        schema:
          type: string
      - description: 'Comma separated list of tags used to group usage. If no value
          is provided the usage will not be broken down by tags.


          To see which tags are available, look for the value of `tag_config_source`
          in the API response.'
        in: query
        name: tag_breakdown_keys
        required: false
        schema:
          type: string
      - description: Include child org usage in the response. Defaults to `true`.
        in: query
        name: include_descendants
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageAttributionResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage attribution
      tags:
      - Usage Metering
  /api/v1/usage/incident-management:
    get:
      description: 'Get hourly usage for incident management.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetIncidentManagement
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIncidentManagementResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for incident management
      tags:
      - Usage Metering
  /api/v1/usage/indexed-spans:
    get:
      description: 'Get hourly usage for indexed spans.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageIndexedSpans
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIndexedSpansResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for indexed spans
      tags:
      - Usage Metering
  /api/v1/usage/ingested-spans:
    get:
      description: 'Get hourly usage for ingested spans.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetIngestedSpans
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIngestedSpansResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for ingested spans
      tags:
      - Usage Metering
  /api/v1/usage/iot:
    get:
      description: 'Get hourly usage for IoT.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageInternetOfThings
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageIoTResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for IoT
      tags:
      - Usage Metering
  /api/v1/usage/logs:
    get:
      description: 'Get hourly usage for logs.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageLogs
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for logs
      tags:
      - Usage Metering
  /api/v1/usage/logs-by-retention:
    get:
      description: 'Get hourly usage for indexed logs by retention period.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageLogsByRetention
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByRetentionResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly logs usage by retention
      tags:
      - Usage Metering
  /api/v1/usage/logs_by_index:
    get:
      description: Get hourly usage for logs by index.
      operationId: GetUsageLogsByIndex
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      - description: Comma-separated list of log index names.
        in: query
        name: index_name
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLogsByIndexResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for logs by index
      tags:
      - Usage Metering
  /api/v1/usage/monthly-attribution:
    get:
      description: "Get monthly usage attribution. Multi-region data is available
        starting March 1, 2023.\n\nThis API endpoint is paginated. To make sure you
        receive all records, check if the value of `next_record_id` is\nset in the
        response. If it is, make another request and pass `next_record_id` as a parameter.\nPseudo
        code example:\n\n```\nresponse := GetMonthlyUsageAttribution(start_month)\ncursor
        := response.metadata.pagination.next_record_id\nWHILE cursor != null BEGIN\n
        \ sleep(5 seconds)  # Avoid running into rate limit\n  response := GetMonthlyUsageAttribution(start_month,
        next_record_id=cursor)\n  cursor := response.metadata.pagination.next_record_id\nEND\n```"
      operationId: GetMonthlyUsageAttribution
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage beginning in this month.

          Maximum of 15 months ago.'
        in: query
        name: start_month
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      - description: Comma-separated list of usage types to return, or `*` for all
          usage types.
        in: query
        name: fields
        required: true
        schema:
          $ref: '#/components/schemas/MonthlyUsageAttributionSupportedMetrics'
      - description: 'The direction to sort by: `[desc, asc]`.'
        in: query
        name: sort_direction
        required: false
        schema:
          $ref: '#/components/schemas/UsageSortDirection'
      - description: The field to sort by.
        in: query
        name: sort_name
        required: false
        schema:
          $ref: '#/components/schemas/MonthlyUsageAttributionSupportedMetrics'
      - description: 'Comma separated list of tag keys used to group usage. If no
          value is provided the usage will not be broken down by tags.


          To see which tags are available, look for the value of `tag_config_source`
          in the API response.'
        in: query
        name: tag_breakdown_keys
        required: false
        schema:
          type: string
      - description: List following results with a next_record_id provided in the
          previous query.
        in: query
        name: next_record_id
        required: false
        schema:
          type: string
      - description: Include child org usage in the response. Defaults to `true`.
        in: query
        name: include_descendants
        required: false
        schema:
          default: true
          type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/MonthlyUsageAttributionResponse'
          description: OK
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get monthly usage attribution
      tags:
      - Usage Metering
  /api/v1/usage/network_flows:
    get:
      description: 'Get hourly usage for network flows.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageNetworkFlows
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkFlowsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: get hourly usage for network flows
      tags:
      - Usage Metering
  /api/v1/usage/network_hosts:
    get:
      description: 'Get hourly usage for network hosts.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageNetworkHosts
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageNetworkHostsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for network hosts
      tags:
      - Usage Metering
  /api/v1/usage/online-archive:
    get:
      description: 'Get hourly usage for online archive.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageOnlineArchive
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageOnlineArchiveResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for online archive
      tags:
      - Usage Metering
  /api/v1/usage/profiling:
    get:
      description: 'Get hourly usage for profiled hosts.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageProfiling
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageProfilingResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for profiled hosts
      tags:
      - Usage Metering
  /api/v1/usage/rum:
    get:
      description: 'Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/)
        Units.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageRumUnits
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageRumUnitsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for RUM units
      tags:
      - Usage Metering
  /api/v1/usage/rum_sessions:
    get:
      description: 'Get hourly usage for [RUM](https://docs.datadoghq.com/real_user_monitoring/)
        Sessions.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageRumSessions
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      - description: 'RUM type: `[browser, mobile]`. Defaults to `browser`.'
        in: query
        name: type
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageRumSessionsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for RUM sessions
      tags:
      - Usage Metering
  /api/v1/usage/sds:
    get:
      description: 'Get hourly usage for sensitive data scanner.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageSDS
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSDSResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for sensitive data scanner
      tags:
      - Usage Metering
  /api/v1/usage/snmp:
    get:
      description: 'Get hourly usage for SNMP devices.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageSNMP
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSNMPResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for SNMP devices
      tags:
      - Usage Metering
  /api/v1/usage/summary:
    get:
      description: Get all usage across your account.
      operationId: GetUsageSummary
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage beginning in this month.

          Maximum of 15 months ago.'
        in: query
        name: start_month
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for usage ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      - description: Include usage summaries for each sub-org.
        in: query
        name: include_org_details
        required: false
        schema:
          type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSummaryResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get usage across your account
      tags:
      - Usage Metering
  /api/v1/usage/synthetics:
    get:
      deprecated: true
      description: 'Get hourly usage for [synthetics checks](https://docs.datadoghq.com/synthetics/).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageSynthetics
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for synthetics checks
      tags:
      - Usage Metering
  /api/v1/usage/synthetics_api:
    get:
      description: 'Get hourly usage for [synthetics API checks](https://docs.datadoghq.com/synthetics/).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageSyntheticsAPI
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsAPIResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for synthetics API checks
      tags:
      - Usage Metering
  /api/v1/usage/synthetics_browser:
    get:
      description: 'Get hourly usage for synthetics browser checks.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageSyntheticsBrowser
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageSyntheticsBrowserResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for synthetics browser checks
      tags:
      - Usage Metering
  /api/v1/usage/timeseries:
    get:
      description: 'Get hourly usage for [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/).

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family).
        Refer to [Migrating from the V1 Hourly Usage APIs to V2](https://docs.datadoghq.com/account_management/guide/hourly-usage-migration/)
        for the associated migration guide.'
      operationId: GetUsageTimeseries
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTimeseriesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for custom metrics
      tags:
      - Usage Metering
  /api/v1/usage/top_avg_metrics:
    get:
      description: Get all [custom metrics](https://docs.datadoghq.com/developers/metrics/custom_metrics/)
        by hourly average. Use the month parameter to get a month-to-date data resolution
        or use the day parameter to get a daily resolution. One of the two is required,
        and only one of the two is allowed.
      operationId: GetUsageTopAvgMetrics
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: [YYYY-MM]
          for usage beginning at this hour. (Either month or day should be specified,
          but not both)'
        in: query
        name: month
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to day: [YYYY-MM-DD]
          for usage beginning at this hour. (Either month or day should be specified,
          but not both)'
        in: query
        name: day
        schema:
          format: date-time
          type: string
      - description: Comma-separated list of metric names.
        in: query
        name: names
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Maximum number of results to return (between 1 and 5000) - defaults
          to 500 results if limit not specified.
        in: query
        name: limit
        required: false
        schema:
          default: 500
          format: int32
          maximum: 5000
          minimum: 1
          type: integer
      - description: List following results with a next_record_id provided in the
          previous query.
        in: query
        name: next_record_id
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageTopAvgMetricsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get all custom metrics by hourly average
      tags:
      - Usage Metering
  /api/v1/user:
    get:
      description: List all users for your organization.
      operationId: ListUsers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - user_access_read
      summary: List all users
      tags:
      - Users
    post:
      description: 'Create a user for your organization.


        **Note**: Users can only be created with the admin access role

        if application keys belong to administrators.'
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User object that needs to be created.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - user_access_invite
      summary: Create a user
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v1/user/{user_handle}:
    delete:
      description: 'Delete a user from an organization.


        **Note**: This endpoint can only be used with application keys belonging to

        administrators.'
      operationId: DisableUser
      parameters:
      - description: The handle of the user.
        in: path
        name: user_handle
        required: true
        schema:
          example: test@datadoghq.com
          format: email
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDisableResponse'
          description: User disabled
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Disable a user
      tags:
      - Users
    get:
      description: Get a user's details.
      operationId: GetUser
      parameters:
      - description: The ID of the user.
        in: path
        name: user_handle
        required: true
        schema:
          example: test@datadoghq.com
          format: email
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK for get user
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get user details
      tags:
      - Users
    put:
      description: 'Update a user information.


        **Note**: It can only be used with application keys belonging to administrators.'
      operationId: UpdateUser
      parameters:
      - description: The ID of the user.
        in: path
        name: user_handle
        required: true
        schema:
          example: test@datadoghq.com
          format: email
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Description of the update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User updated
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a user
      tags:
      - Users
      x-codegen-request-body-name: body
  /api/v1/validate:
    get:
      description: Check if the API key (not the APP key) is valid. If invalid, a
        403 is returned.
      operationId: Validate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationValidationResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      - AuthZ: []
      summary: Validate API key
      tags:
      - Authentication
  /v1/input:
    post:
      deprecated: true
      description: 'Send your logs to your Datadog platform over HTTP. Limits per
        HTTP request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns a
        2xx.

        - For a multi-logs request, the API processes all logs, truncates only logs
        larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending compressed
        logs.


        The status codes answered by the HTTP API are:

        - 200: OK

        - 400: Bad request (likely an issue in the payload formatting)

        - 403: Permission issue (likely using an invalid API Key)

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 5xx: Internal error, request should be retried after some time'
      operationId: SubmitLog
      parameters:
      - description: HTTP header used to compress the media-type.
        in: header
        name: Content-Encoding
        required: false
        schema:
          $ref: '#/components/schemas/ContentEncoding'
      - description: Log tags can be passed as query parameters with `text/plain`
          content type.
        example: env:prod,user:my-user
        in: query
        name: ddtags
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                - message: hello
                - message: world
            schema:
              $ref: '#/components/schemas/HTTPLog'
          application/json;simple:
            examples:
              simple-json-message:
                description: Log attributes can be passed as `key:value` pairs in
                  valid JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: agent
                  ddtags: env:prod,user:joe.doe
                  hostname: fa1e1e739d95
                  message: hello world
            schema:
              $ref: '#/components/schemas/HTTPLogItem'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: 'hello

                  world'
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: hello world
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: 'hello

                  world

                  '
              simple-raw-message:
                description: 'Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or the
                  source by using the `ddtags` and `ddsource` parameters: `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.'
                summary: Simple Raw Message
                value: hello world
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
          description: Response from server (always 200 empty JSON).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogError'
          description: unexpected error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      servers:
      - url: https://{subdomain}.{site}
        variables:
          site:
            default: datadoghq.com
            description: The regional site for Datadog customers.
            enum:
            - datadoghq.com
            - us3.datadoghq.com
            - us5.datadoghq.com
            - ap1.datadoghq.com
            - datadoghq.eu
            - ddog-gov.com
          subdomain:
            default: http-intake.logs
            description: The subdomain where the API is deployed.
      - url: '{protocol}://{name}'
        variables:
          name:
            default: http-intake.logs.datadoghq.com
            description: Full site DNS name.
          protocol:
            default: https
            description: The protocol for accessing the API.
      - url: https://{subdomain}.{site}
        variables:
          site:
            default: datadoghq.com
            description: Any Datadog deployment.
          subdomain:
            default: http-intake.logs
            description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
      - Logs
      x-codegen-request-body-name: body
security:
- apiKeyAuth: []
  appKeyAuth: []
servers:
- url: https://{subdomain}.{site}
  variables:
    site:
      default: datadoghq.com
      description: The regional site for a Datadog customer.
      enum:
      - datadoghq.com
      - us3.datadoghq.com
      - us5.datadoghq.com
      - ap1.datadoghq.com
      - datadoghq.eu
      - ddog-gov.com
    subdomain:
      default: api
      description: The subdomain where the API is deployed.
- url: '{protocol}://{name}'
  variables:
    name:
      default: api.datadoghq.com
      description: Full site DNS name.
    protocol:
      default: https
      description: The protocol for accessing the API.
- url: https://{subdomain}.{site}
  variables:
    site:
      default: datadoghq.com
      description: Any Datadog deployment.
    subdomain:
      default: api
      description: The subdomain where the API is deployed.
tags:
- description: 'Configure your Datadog-AWS integration directly through the Datadog
    API.

    For more information, see the [AWS integration page](https://docs.datadoghq.com/integrations/amazon_web_services).'
  name: AWS Integration
- description: 'Configure your Datadog-AWS-Logs integration directly through Datadog
    API.

    For more information, see the [AWS integration page](https://docs.datadoghq.com/api/?lang=bash#integration-aws-logs).'
  externalDocs:
    url: https://docs.datadoghq.com/api/?lang=bash#integration-aws-logs
  name: AWS Logs Integration
- description: "All requests to Datadog\u2019s API must be authenticated.\nRequests
    that write data require reporting access and require an `API key`.\nRequests that
    read data require full access and also require an `application key`.\n\n**Note:**
    All Datadog API clients are configured by default to consume Datadog US site APIs.\nIf
    you are on the Datadog EU site, set the environment variable `DATADOG_HOST` to\n`https://api.datadoghq.eu`
    or override this value directly when creating your client.\n\n[Manage your account\u2019s
    API and application keys](https://app.datadoghq.com/account/settings#api)."
  name: Authentication
- description: 'Configure your Datadog-Azure integration directly through the Datadog
    API.

    For more information, see the [Datadog-Azure integration page](https://docs.datadoghq.com/integrations/azure).'
  externalDocs:
    url: https://docs.datadoghq.com/integrations/azure
  name: Azure Integration
- description: 'Interact with your dashboard lists through the API to

    organize, find, and share all of your dashboards with your team and

    organization.'
  name: Dashboard Lists
  x-deprecated: true
- description: '[Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes)
    gives

    you greater control over monitor notifications by allowing you to globally exclude

    scopes from alerting. Downtime settings, which can be scheduled with start and

    end times, prevent all alerting related to specified Datadog tags.'
  name: Downtimes
- description: 'The events service allows you to programmatically post events to the
    event stream

    and fetch events from the event stream. Events are limited to 4000 characters.

    If an event is sent out with a message containing more than 4000 characters, only
    the

    first 4000 characters are displayed.'
  name: Events
- description: 'Configure your Datadog-Google Cloud Platform (GCP) integration directly

    through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).'
  externalDocs:
    url: https://docs.datadoghq.com/integrations/google_cloud_platform
  name: GCP Integration
- description: Get information about your live hosts in Datadog.
  name: Hosts
- description: Get a list of IP prefixes belonging to Datadog.
  name: IP Ranges
- description: 'Manage your Datadog API and application keys. You need an API key
    and

    an application key for a user with the required permissions to interact

    with these endpoints. The full list of API and application keys can be

    seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).'
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/account_management/api-app-keys/
  name: Key Management
- description: Search your logs and send them to your Datadog platform over HTTP.
  name: Logs
- description: 'Manage configuration of [log indexes](https://docs.datadoghq.com/logs/indexes/).

    You need an API and application key with Admin rights to interact with this endpoint.'
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/logs/indexes/
  name: Logs Indexes
- description: "The metrics endpoint allows you to:\n\n- Post metrics data so it can
    be graphed on Datadog\u2019s dashboards\n- Query metrics from any time period\n-
    Modify tag configurations for metrics\n- View tags and volumes for metrics\n\n**Note**:
    A graph can only contain a set number of points\nand as the timeframe over which
    a metric is viewed increases,\naggregation between points occurs to stay below
    that set number.\n\nThe Post, Patch, and Delete `manage_tags` API methods can
    only be performed by\na user who has the `Manage Tags for Metrics` permission."
  name: Metrics
- description: Create, edit, and manage your organizations. Read more about [multi-org
    accounts](https://docs.datadoghq.com/account_management/multi_organization).
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/account_management/multi_organization
  name: Organizations
- description: 'Configure your [Datadog-PagerDuty integration](https://docs.datadoghq.com/integrations/pagerduty/)

    directly through the Datadog API.'
  externalDocs:
    url: https://docs.datadoghq.com/integrations/pagerduty/
  name: PagerDuty Integration
- description: 'Detection rules for generating signals and listing of generated

    signals.'
  name: Security Monitoring
- description: 'The service check endpoint allows you to post check statuses for use
    with monitors.

    Service check messages are limited to 500 characters. If a check is posted with
    a message

    containing more than 500 characters, only the first 500 characters are displayed.
    Messages

    are limited for checks with a Critical or Warning status, they are dropped for
    checks with

    an OK status.


    - [Read more about Service Check monitors.][1]

    - [Read more about Process Check monitors.][2]

    - [Read more about Network Check monitors.][3]

    - [Read more about Custom Check monitors.][4]

    - [Read more about Service Check and status codes.][5]


    [1]: https://docs.datadoghq.com/monitors/create/types/host/?tab=checkalert

    [2]: https://docs.datadoghq.com/monitors/create/types/process_check/?tab=checkalert

    [3]: https://docs.datadoghq.com/monitors/create/types/network/?tab=checkalert

    [4]: https://docs.datadoghq.com/monitors/create/types/custom_check/?tab=checkalert

    [5]: https://docs.datadoghq.com/developers/service_checks/'
  name: Service Checks
- description: "SLO Status Corrections allow you to prevent specific time periods
    from negatively impacting\nyour SLO\u2019s status and error budget. You can use
    Status Corrections for various purposes, such\nas removing planned maintenance
    windows, non-business hours, or other time periods that do\nnot correspond to
    genuine issues."
  name: Service Level Objective Corrections
- description: '[Service Level Objectives](https://docs.datadoghq.com/monitors/service_level_objectives/#configuration)

    (or SLOs) are a key part of the site reliability engineering toolkit.

    SLOs provide a framework for defining clear targets around application performance,

    which ultimately help teams provide a consistent customer experience,

    balance feature development with platform stability,

    and improve communication with internal and external users.'
  name: Service Level Objectives
- description: 'Configure your [Datadog-Slack integration](https://docs.datadoghq.com/integrations/slack)

    directly through the Datadog API.'
  externalDocs:
    description: For more information about the Datadog-Slack integration, see the
      integration page.
    url: https://docs.datadoghq.com/integrations/slack
  name: Slack Integration
- description: Take graph snapshots using the API.
  name: Snapshots
- description: 'The tag endpoint allows you to assign tags to hosts,

    for example: `role:database`. Those tags are applied to

    all metrics sent by the host. Refer to hosts by name

    (`yourhost.example.com`) when fetching and applying

    tags to a particular host.


    The component of your infrastructure responsible for a tag is identified

    by a source. For example, some valid sources include nagios, hudson, jenkins,

    users, feed, chef, puppet, git, bitbucket, fabric, capistrano, etc.


    Read more about tags on the dedicated

    [documentation page](https://docs.datadoghq.com/tagging).'
  name: Tags
- description: 'The usage metering API allows you to get hourly, daily, and

    monthly usage across multiple facets of Datadog.

    This API is available to all Pro and Enterprise customers.

    Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).


    **Note**: Usage data is delayed by up to 72 hours from when it was incurred.

    It is retained for 15 months.


    You can retrieve up to 24 hours of hourly usage data for multiple organizations,

    and up to two months of hourly usage data for a single organization in one request.'
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/account_management/billing/usage_details/
  name: Usage Metering
- description: Create, edit, and disable users.
  externalDocs:
    url: https://docs.datadoghq.com/account_management/users
  name: Users
- description: 'Configure your Datadog-Webhooks integration directly through the Datadog
    API.

    For more information about the Datadog-Webhooks integration,

    see the [integration page](https://docs.datadoghq.com/integrations/webhooks).'
  externalDocs:
    url: https://docs.datadoghq.com/integrations/webhooks
  name: Webhooks Integration
x-group-parameters: true
