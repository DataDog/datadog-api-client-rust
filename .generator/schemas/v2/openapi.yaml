components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters:
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    PageNumber:
      description: Specific page number to return.
      in: query
      name: page[number]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    ResourceID:
      description: 'Identifier, formatted as `type:id`. Supported types: `connection`,
        `dashboard`, `notebook`, `security-rule`, `slo`.'
      example: dashboard:abc-def-ghi
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
  requestBodies: {}
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConcurrentModificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Concurrent Modification
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    FindingsBadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Bad Request: The server cannot process the request due to invalid
        syntax in the request.'
    FindingsForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Forbidden: Access denied'
    FindingsNotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Not Found: The requested finding cannot be found.'
    FindingsTooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONAPIErrorResponse'
      description: 'Too many requests: The rate limit set by the API has been exceeded.'
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Unauthorized
  schemas:
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
      - errors
      type: object
    ApmRetentionFilterType:
      default: apm_retention_filter
      description: The type of the resource.
      enum:
      - apm_retention_filter
      example: apm_retention_filter
      type: string
      x-enum-varnames:
      - apm_retention_filter
    AuditLogsEvent:
      description: Object description of an Audit Logs event after it is processed
        and stored by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/AuditLogsEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/AuditLogsEventType'
      type: object
    AuditLogsEventAttributes:
      description: JSON object containing all event attributes and their associated
        values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from Audit Logs events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        message:
          description: Message of the event.
          type: string
        service:
          description: 'Name of the application or service generating Audit Logs events.

            This name is used to correlate Audit Logs to APM, so make sure you specify
            the same

            value when you use both products.'
          example: web-app
          type: string
        tags:
          description: Array of tags associated with your event.
          example:
          - team:A
          items:
            description: Tag associated with your event.
            type: string
          type: array
        timestamp:
          description: Timestamp of your event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    AuditLogsEventType:
      default: audit
      description: Type of the event.
      enum:
      - audit
      example: audit
      type: string
      x-enum-varnames:
      - Audit
    AuditLogsEventsResponse:
      description: Response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/AuditLogsEvent'
          type: array
        links:
          $ref: '#/components/schemas/AuditLogsResponseLinks'
        meta:
          $ref: '#/components/schemas/AuditLogsResponseMetadata'
      type: object
    AuditLogsQueryFilter:
      description: Search and filter query settings.
      properties:
        from:
          default: now-15m
          description: Minimum time for the requested events. Supports date, math,
            and regular timestamps (in milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: Search query following the Audit Logs search syntax.
          example: '@type:session AND @session.type:user'
          type: string
        to:
          default: now
          description: Maximum time for the requested events. Supports date, math,
            and regular timestamps (in milliseconds).
          example: now
          type: string
      type: object
    AuditLogsQueryOptions:
      description: 'Global query options that are used during the query.

        Note: Specify either timezone or time offset, not both. Otherwise, the query
        fails.'
      properties:
        time_offset:
          description: Time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: The timezone can be specified as GMT, UTC, an offset from UTC
            (like UTC+1), or as a Timezone Database identifier (like America/New_York).
          example: GMT
          type: string
      type: object
    AuditLogsQueryPageOptions:
      description: Paging attributes for listing events.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous
            query.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of events in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    AuditLogsResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: 'Link for the next set of results. Note that the request can
            also be made using the

            POST endpoint.'
          example: https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: Time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/AuditLogsResponsePage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/AuditLogsResponseStatus'
        warnings:
          description: 'A list of warnings (non-fatal errors) encountered. Partial
            results may return if

            warnings are present in the response.'
          items:
            $ref: '#/components/schemas/AuditLogsWarning'
          type: array
      type: object
    AuditLogsResponsePage:
      description: Paging attributes.
      properties:
        after:
          description: The cursor to use to get the next results, if any. To make
            the next request, use the same parameters with the addition of `page[cursor]`.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponseStatus:
      description: The status of the response.
      enum:
      - done
      - timeout
      example: done
      type: string
      x-enum-varnames:
      - DONE
      - TIMEOUT
    AuditLogsSearchEventsRequest:
      description: The request for a Audit Logs events list.
      properties:
        filter:
          $ref: '#/components/schemas/AuditLogsQueryFilter'
        options:
          $ref: '#/components/schemas/AuditLogsQueryOptions'
        page:
          $ref: '#/components/schemas/AuditLogsQueryPageOptions'
        sort:
          $ref: '#/components/schemas/AuditLogsSort'
      type: object
    AuditLogsSort:
      description: Sort parameters when querying events.
      enum:
      - timestamp
      - -timestamp
      type: string
      x-enum-varnames:
      - TIMESTAMP_ASCENDING
      - TIMESTAMP_DESCENDING
    AuditLogsWarning:
      description: Warning message indicating something that went wrong with the query.
      properties:
        code:
          description: Unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: Detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: Short human-readable summary of the warning.
          example: One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    ChargebackBreakdown:
      description: Charges breakdown.
      properties:
        charge_type:
          description: The type of charge for a particular product.
          example: on_demand
          type: string
        cost:
          description: The cost for a particular product and charge type during a
            given month.
          format: double
          type: number
        product_name:
          description: The product for which cost is being reported.
          example: infra_host
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleAttributes:
      description: A Cloud Workload Security Agent rule returned by the API.
      properties:
        agentConstraint:
          description: The version of the agent.
          type: string
        category:
          description: The category of the Agent rule.
          example: Process Activity
          type: string
        creationAuthorUuId:
          description: The ID of the user who created the rule.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        creationDate:
          description: When the Agent rule was created, timestamp in milliseconds.
          example: 1624366480320
          format: int64
          type: integer
        creator:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreatorAttributes'
        defaultRule:
          description: Whether the rule is included by default.
          example: false
          type: boolean
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
        name:
          description: The name of the Agent rule.
          example: my_agent_rule
          type: string
        updateAuthorUuId:
          description: The ID of the user who updated the rule.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        updateDate:
          description: Timestamp in milliseconds when the Agent rule was last updated.
          example: 1624366480320
          format: int64
          type: integer
        updatedAt:
          description: When the Agent rule was last updated, timestamp in milliseconds.
          example: 1624366480320
          format: int64
          type: integer
        updater:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdaterAttributes'
        version:
          description: The version of the Agent rule.
          example: 23
          format: int64
          type: integer
      type: object
    CloudWorkloadSecurityAgentRuleCreateAttributes:
      description: Create a new Cloud Workload Security Agent rule.
      properties:
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
        name:
          description: The name of the Agent rule.
          example: my_agent_rule
          type: string
      required:
      - name
      - expression
      type: object
    CloudWorkloadSecurityAgentRuleCreateData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateAttributes'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
      - attributes
      - type
      type: object
    CloudWorkloadSecurityAgentRuleCreateRequest:
      description: Request object that includes the Agent rule to create.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateData'
      required:
      - data
      type: object
    CloudWorkloadSecurityAgentRuleCreatorAttributes:
      description: The attributes of the user who created the Agent rule.
      properties:
        handle:
          description: The handle of the user.
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user.
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAttributes'
        id:
          description: The ID of the Agent rule.
          example: 3dd-0uc-h1s
          type: string
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      type: object
    CloudWorkloadSecurityAgentRuleResponse:
      description: Response object that includes an Agent rule.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
      type: object
    CloudWorkloadSecurityAgentRuleType:
      default: agent_rule
      description: The type of the resource. The value should always be `agent_rule`.
      enum:
      - agent_rule
      example: agent_rule
      type: string
      x-enum-varnames:
      - AGENT_RULE
    CloudWorkloadSecurityAgentRuleUpdateAttributes:
      description: Update an existing Cloud Workload Security Agent rule.
      properties:
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        enabled:
          description: Whether the Agent rule is enabled.
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == \"sh\"
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleUpdateData:
      description: Object for a single Agent rule.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateAttributes'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
      - attributes
      - type
      type: object
    CloudWorkloadSecurityAgentRuleUpdateRequest:
      description: Request object that includes the Agent rule with the attributes
        to update.
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateData'
      required:
      - data
      type: object
    CloudWorkloadSecurityAgentRuleUpdaterAttributes:
      description: The attributes of the user who last updated the Agent rule.
      properties:
        handle:
          description: The handle of the user.
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user.
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentRulesListResponse:
      description: Response object that includes a list of Agent rule.
      properties:
        data:
          description: A list of Agent rules objects.
          items:
            $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
          type: array
      type: object
    CloudflareAccountCreateRequest:
      description: Payload schema when adding a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountCreateRequestData'
      required:
      - data
      type: object
    CloudflareAccountCreateRequestAttributes:
      description: Attributes object for creating a Cloudflare account.
      properties:
        api_key:
          description: The API key (or token) for the Cloudflare account.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        email:
          description: The email associated with the Cloudflare account. If an API
            key is provided (and not a token), this field is also required.
          example: test-email@example.com
          type: string
        name:
          description: The name of the Cloudflare account.
          example: test-name
          type: string
      required:
      - api_key
      - name
      type: object
    CloudflareAccountCreateRequestData:
      description: Data object for creating a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      required:
      - attributes
      - type
      type: object
    CloudflareAccountResponse:
      description: The expected response schema when getting a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountResponseData'
      type: object
    CloudflareAccountResponseAttributes:
      description: Attributes object of a Cloudflare account.
      properties:
        email:
          description: The email associated with the Cloudflare account.
          example: test-email@example.com
          type: string
        name:
          description: The name of the Cloudflare account.
          example: test-name
          type: string
      required:
      - name
      type: object
    CloudflareAccountResponseData:
      description: Data object of a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountResponseAttributes'
        id:
          description: The ID of the Cloudflare account, a hash of the account name.
          example: c1a8e059bfd1e911cf10b626340c9a54
          type: string
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      required:
      - attributes
      - id
      - type
      type: object
    CloudflareAccountType:
      default: cloudflare-accounts
      description: The JSON:API type for this API. Should always be `cloudflare-accounts`.
      enum:
      - cloudflare-accounts
      example: cloudflare-accounts
      type: string
      x-enum-varnames:
      - CLOUDFLARE_ACCOUNTS
    CloudflareAccountUpdateRequest:
      description: Payload schema when updating a Cloudflare account.
      properties:
        data:
          $ref: '#/components/schemas/CloudflareAccountUpdateRequestData'
      required:
      - data
      type: object
    CloudflareAccountUpdateRequestAttributes:
      description: Attributes object for updating a Cloudflare account.
      properties:
        api_key:
          description: The API key of the Cloudflare account.
          example: a94a8fe5ccb19ba61c4c0873d391e987982fbbd3
          type: string
        email:
          description: The email associated with the Cloudflare account. If an API
            key is provided (and not a token), this field is also required.
          example: test-email@example.com
          type: string
      required:
      - api_key
      type: object
    CloudflareAccountUpdateRequestData:
      description: Data object for updating a Cloudflare account.
      properties:
        attributes:
          $ref: '#/components/schemas/CloudflareAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/CloudflareAccountType'
      type: object
    CloudflareAccountsResponse:
      description: The expected response schema when getting Cloudflare accounts.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/CloudflareAccountResponseData'
          type: array
      type: object
    ConfluentAccountCreateRequest:
      description: Payload schema when adding a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountCreateRequestData'
      required:
      - data
      type: object
    ConfluentAccountCreateRequestAttributes:
      description: Attributes associated with the account creation request.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        api_secret:
          description: The API secret associated with your Confluent account.
          example: test-api-secret-123
          type: string
        resources:
          description: A list of Confluent resources associated with the Confluent
            account.
          items:
            $ref: '#/components/schemas/ConfluentAccountResourceAttributes'
          type: array
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - api_key
      - api_secret
      type: object
    ConfluentAccountCreateRequestData:
      description: The data body for adding a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
      - attributes
      - type
      type: object
    ConfluentAccountResourceAttributes:
      description: Attributes object for updating a Confluent resource.
      properties:
        enable_custom_metrics:
          default: false
          description: Enable the `custom.consumer_lag_offset` metric, which contains
            extra metric tags.
          example: false
          type: boolean
        id:
          description: The ID associated with a Confluent resource.
          example: resource-id-123
          type: string
        resource_type:
          description: The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - resource_type
      type: object
    ConfluentAccountResponse:
      description: The expected response schema when getting a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountResponseData'
      type: object
    ConfluentAccountResponseAttributes:
      description: The attributes of a Confluent account.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        resources:
          description: A list of Confluent resources associated with the Confluent
            account.
          items:
            $ref: '#/components/schemas/ConfluentResourceResponseAttributes'
          type: array
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - api_key
      type: object
    ConfluentAccountResponseData:
      description: An API key and API secret pair that represents a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountResponseAttributes'
        id:
          description: A randomly generated ID associated with a Confluent account.
          example: account_id_abc123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
      - attributes
      - id
      - type
      type: object
    ConfluentAccountType:
      default: confluent-cloud-accounts
      description: The JSON:API type for this API. Should always be `confluent-cloud-accounts`.
      enum:
      - confluent-cloud-accounts
      example: confluent-cloud-accounts
      type: string
      x-enum-varnames:
      - CONFLUENT_CLOUD_ACCOUNTS
    ConfluentAccountUpdateRequest:
      description: The JSON:API request for updating a Confluent account.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentAccountUpdateRequestData'
      required:
      - data
      type: object
    ConfluentAccountUpdateRequestAttributes:
      description: Attributes object for updating a Confluent account.
      properties:
        api_key:
          description: The API key associated with your Confluent account.
          example: TESTAPIKEY123
          type: string
        api_secret:
          description: The API secret associated with your Confluent account.
          example: test-api-secret-123
          type: string
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - api_key
      - api_secret
      type: object
    ConfluentAccountUpdateRequestData:
      description: Data object for updating a Confluent account.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/ConfluentAccountType'
      required:
      - attributes
      - type
      type: object
    ConfluentAccountsResponse:
      description: Confluent account returned by the API.
      properties:
        data:
          description: The Confluent account.
          items:
            $ref: '#/components/schemas/ConfluentAccountResponseData'
          type: array
      type: object
    ConfluentResourceRequest:
      description: The JSON:API request for updating a Confluent resource.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentResourceRequestData'
      required:
      - data
      type: object
    ConfluentResourceRequestAttributes:
      description: Attributes object for updating a Confluent resource.
      properties:
        enable_custom_metrics:
          default: false
          description: Enable the `custom.consumer_lag_offset` metric, which contains
            extra metric tags.
          example: false
          type: boolean
        resource_type:
          description: The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - resource_type
      type: object
    ConfluentResourceRequestData:
      description: JSON:API request for updating a Confluent resource.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentResourceRequestAttributes'
        id:
          description: The ID associated with a Confluent resource.
          example: resource-id-123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentResourceType'
      required:
      - attributes
      - type
      - id
      type: object
    ConfluentResourceResponse:
      description: Response schema when interacting with a Confluent resource.
      properties:
        data:
          $ref: '#/components/schemas/ConfluentResourceResponseData'
      type: object
    ConfluentResourceResponseAttributes:
      description: Model representation of a Confluent Cloud resource.
      properties:
        enable_custom_metrics:
          default: false
          description: Enable the `custom.consumer_lag_offset` metric, which contains
            extra metric tags.
          example: false
          type: boolean
        id:
          description: The ID associated with the Confluent resource.
          example: resource_id_abc123
          type: string
        resource_type:
          description: The resource type of the Resource. Can be `kafka`, `connector`,
            `ksql`, or `schema_registry`.
          example: kafka
          type: string
        tags:
          description: A list of strings representing tags. Can be a single key, or
            key-value pairs separated by a colon.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - resource_type
      type: object
    ConfluentResourceResponseData:
      description: Confluent Cloud resource data.
      properties:
        attributes:
          $ref: '#/components/schemas/ConfluentResourceResponseAttributes'
        id:
          description: The ID associated with the Confluent resource.
          example: resource_id_abc123
          type: string
        type:
          $ref: '#/components/schemas/ConfluentResourceType'
      required:
      - attributes
      - type
      - id
      type: object
    ConfluentResourceType:
      default: confluent-cloud-resources
      description: The JSON:API type for this request.
      enum:
      - confluent-cloud-resources
      example: confluent-cloud-resources
      type: string
      x-enum-varnames:
      - CONFLUENT_CLOUD_RESOURCES
    ConfluentResourcesResponse:
      description: Response schema when interacting with a list of Confluent resources.
      properties:
        data:
          description: The JSON:API data attribute.
          items:
            $ref: '#/components/schemas/ConfluentResourceResponseData'
          type: array
      type: object
    ContentEncoding:
      description: HTTP header used to compress the media-type.
      enum:
      - identity
      - gzip
      - deflate
      type: string
      x-enum-varnames:
      - IDENTITY
      - GZIP
      - DEFLATE
    CostByOrg:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/CostByOrgAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostByOrgType'
      type: object
    CostByOrgAttributes:
      description: Cost attributes data.
      properties:
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs
            to.
          type: string
        total_cost:
          description: The total cost of products for the month.
          format: double
          type: number
      type: object
    CostByOrgResponse:
      description: Chargeback Summary response.
      properties:
        data:
          description: Response containing Chargeback Summary.
          items:
            $ref: '#/components/schemas/CostByOrg'
          type: array
      type: object
    CostByOrgType:
      default: cost_by_org
      description: Type of cost data.
      enum:
      - cost_by_org
      example: cost_by_org
      type: string
      x-enum-varnames:
      - COST_BY_ORG
    Creator:
      description: Creator of the object.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          nullable: true
          type: string
      type: object
    DashboardListAddItemsRequest:
      description: Request containing a list of dashboards to add.
      properties:
        dashboards:
          description: List of dashboards to add the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListAddItemsResponse:
      description: Response containing a list of added dashboards.
      properties:
        added_dashboards_to_list:
          description: List of dashboards added to the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListDeleteItemsRequest:
      description: Request containing a list of dashboards to delete.
      properties:
        dashboards:
          description: List of dashboards to delete from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListDeleteItemsResponse:
      description: Response containing a list of deleted dashboards.
      properties:
        deleted_dashboards_from_list:
          description: List of dashboards deleted from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListItem:
      description: A dashboard within a list.
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard.
          format: date-time
          readOnly: true
          type: string
        icon:
          description: URL to the icon of the dashboard.
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        integration_id:
          description: The short name of the integration.
          nullable: true
          readOnly: true
          type: string
        is_favorite:
          description: Whether or not the dashboard is in the favorites.
          readOnly: true
          type: boolean
        is_read_only:
          description: Whether or not the dashboard is read only.
          readOnly: true
          type: boolean
        is_shared:
          description: Whether the dashboard is publicly shared or not.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard.
          format: date-time
          readOnly: true
          type: string
        popularity:
          description: Popularity of the dashboard.
          format: int32
          maximum: 5
          readOnly: true
          type: integer
        tags:
          description: List of team names representing ownership of a dashboard.
          items:
            description: The name of a Datadog team, formatted as `team:<name>`
            type: string
          maxItems: 5
          nullable: true
          readOnly: true
          type: array
        title:
          description: Title of the dashboard.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
        url:
          description: URL path to the dashboard.
          readOnly: true
          type: string
      required:
      - type
      - id
      type: object
    DashboardListItemRequest:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
      - type
      - id
      type: object
    DashboardListItemResponse:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
      - type
      - id
      type: object
    DashboardListItems:
      description: Dashboards within a list.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          example: []
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
        total:
          description: Number of dashboards in the dashboard list.
          format: int64
          readOnly: true
          type: integer
      required:
      - dashboards
      type: object
    DashboardListUpdateItemsRequest:
      description: Request containing the list of dashboards to update to.
      properties:
        dashboards:
          description: List of dashboards to update the dashboard list to.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListUpdateItemsResponse:
      description: Response containing a list of updated dashboards.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardType:
      description: The type of the dashboard.
      enum:
      - custom_timeboard
      - custom_screenboard
      - integration_screenboard
      - integration_timeboard
      - host_timeboard
      example: host_timeboard
      type: string
      x-enum-varnames:
      - CUSTOM_TIMEBOARD
      - CUSTOM_SCREENBOARD
      - INTEGRATION_SCREENBOARD
      - INTEGRATION_TIMEBOARD
      - HOST_TIMEBOARD
    DetailedFinding:
      description: A single finding with with message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/DetailedFindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/DetailedFindingType'
      type: object
    DetailedFindingAttributes:
      description: The JSON:API attributes of the detailed finding.
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        message:
          description: The remediation message for this finding.
          example: '## Remediation


            ### From the console


            1. Go to Storage Account

            2. For each Storage Account, navigate to Data Protection

            3. Select Set soft delete enabled and enter the number of days to retain
            soft deleted data.'
          type: string
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_configuration:
          description: The resource configuration for this finding.
          type: object
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    DetailedFindingType:
      default: detailed_finding
      description: The JSON:API type for findings that have the message and resource
        configuration.
      enum:
      - detailed_finding
      example: detailed_finding
      type: string
      x-enum-varnames:
      - DETAILED_FINDING
    Event:
      description: The metadata associated with a request.
      properties:
        id:
          description: Event ID.
          example: '6509751066204996294'
          type: string
        name:
          description: The event name.
          type: string
        source_id:
          description: Event source ID.
          example: 36
          format: int64
          type: integer
        type:
          description: Event type.
          example: error_tracking_alert
          type: string
      type: object
    EventAttributes:
      description: Object description of attributes from your event.
      properties:
        aggregation_key:
          description: Aggregation key of the event.
          type: string
        date_happened:
          description: 'POSIX timestamp of the event. Must be sent as an integer (no
            quotation marks).

            Limited to events no older than 18 hours.'
          format: int64
          type: integer
        device_name:
          description: A device name.
          type: string
        duration:
          description: The duration between the triggering of the event and its recovery
            in nanoseconds.
          format: int64
          type: integer
        event_object:
          description: The event title.
          example: Did you hear the news today?
          type: string
        evt:
          $ref: '#/components/schemas/Event'
        hostname:
          description: 'Host name to associate with the event.

            Any tags associated with the host are also applied to this event.'
          type: string
        monitor:
          $ref: '#/components/schemas/MonitorType'
        monitor_groups:
          description: List of groups referred to in the event.
          items:
            description: Group referred to in the event.
            type: string
          nullable: true
          type: array
        monitor_id:
          description: ID of the monitor that triggered the event. When an event isn't
            related to a monitor, this field is empty.
          format: int64
          nullable: true
          type: integer
        priority:
          $ref: '#/components/schemas/EventPriority'
        related_event_id:
          description: Related event ID.
          format: int64
          type: integer
        service:
          description: Service that triggered the event.
          example: datadog-api
          type: string
        source_type_name:
          description: 'The type of event being posted.

            For example, `nagios`, `hudson`, `jenkins`, `my_apps`, `chef`, `puppet`,
            `git` or `bitbucket`.

            The list of standard source attribute values is [available here](https://docs.datadoghq.com/integrations/faq/list-of-api-source-attribute-value).'
          type: string
        sourcecategory:
          description: Identifier for the source of the event, such as a monitor alert,
            an externally-submitted event, or an integration.
          type: string
        status:
          $ref: '#/components/schemas/EventStatusType'
        tags:
          description: A list of tags to apply to the event.
          example:
          - environment:test
          items:
            description: A tag.
            type: string
          type: array
        timestamp:
          description: POSIX timestamp of your event in milliseconds.
          example: 1652274265000
          format: int64
          type: integer
        title:
          description: The event title.
          example: Oh boy!
          type: string
      type: object
    EventPriority:
      description: The priority of the event's monitor. For example, `normal` or `low`.
      enum:
      - normal
      - low
      example: normal
      nullable: true
      type: string
      x-enum-varnames:
      - NORMAL
      - LOW
    EventResponse:
      description: The object description of an event after being processed and stored
        by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/EventResponseAttributes'
        id:
          description: the unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/EventType'
      type: object
    EventResponseAttributes:
      description: The object description of an event response attribute.
      properties:
        attributes:
          $ref: '#/components/schemas/EventAttributes'
        message:
          description: The message of the event.
          type: string
        tags:
          description: An array of tags associated with the event.
          example:
          - team:A
          items:
            description: The tag associated with the event.
            type: string
          type: array
        timestamp:
          description: The timestamp of the event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    EventStatusType:
      description: 'If an alert event is enabled, its status is one of the following:

        `failure`, `error`, `warning`, `info`, `success`, `user_update`,

        `recommendation`, or `snapshot`.'
      enum:
      - failure
      - error
      - warning
      - info
      - success
      - user_update
      - recommendation
      - snapshot
      example: info
      type: string
      x-enum-varnames:
      - FAILURE
      - ERROR
      - WARNING
      - INFO
      - SUCCESS
      - USER_UPDATE
      - RECOMMENDATION
      - SNAPSHOT
    EventType:
      default: event
      description: Type of the event.
      enum:
      - event
      example: event
      type: string
      x-enum-varnames:
      - EVENT
    EventsListRequest:
      description: The object sent with the request to retrieve a list of events from
        your organization.
      properties:
        filter:
          $ref: '#/components/schemas/EventsQueryFilter'
        options:
          $ref: '#/components/schemas/EventsQueryOptions'
        page:
          $ref: '#/components/schemas/EventsRequestPage'
        sort:
          $ref: '#/components/schemas/EventsSort'
      type: object
    EventsListResponse:
      description: The response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: An array of events matching the request.
          items:
            $ref: '#/components/schemas/EventResponse'
          type: array
        links:
          $ref: '#/components/schemas/EventsListResponseLinks'
        meta:
          $ref: '#/components/schemas/EventsResponseMetadata'
      type: object
    EventsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: 'Link for the next set of results. Note that the request can
            also be made using the

            POST endpoint.'
          example: https://app.datadoghq.com/api/v2/events?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    EventsQueryFilter:
      description: The search and filter query settings.
      properties:
        from:
          default: now-15m
          description: The minimum time for the requested events. Supports date math
            and regular timestamps in milliseconds.
          example: now-15m
          type: string
        query:
          default: '*'
          description: The search query following the event search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        to:
          default: now
          description: The maximum time for the requested events. Supports date math
            and regular timestamps in milliseconds.
          example: now
          type: string
      type: object
    EventsQueryOptions:
      description: 'The global query options that are used. Either provide a timezone
        or a time offset but not both,

        otherwise the query fails.'
      properties:
        timeOffset:
          description: The time offset to apply to the query in seconds.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: The timezone can be specified as GMT, UTC, an offset from UTC
            (like UTC+1), or as a Timezone Database identifier (like America/New_York).
          example: GMT
          type: string
      type: object
    EventsRequestPage:
      description: Pagination settings.
      properties:
        cursor:
          description: The returned paging point to use to get the next results.
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: The maximum number of logs in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    EventsResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: The time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/EventsResponseMetadataPage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          description: The request status.
          example: done
          type: string
        warnings:
          description: 'A list of warnings (non-fatal errors) encountered. Partial
            results might be returned if

            warnings are present in the response.'
          items:
            $ref: '#/components/schemas/EventsWarning'
          type: array
      type: object
    EventsResponseMetadataPage:
      description: Pagination attributes.
      properties:
        after:
          description: 'The cursor to use to get the next results, if any. To make
            the next request, use the same

            parameters with the addition of the `page[cursor]`.'
          example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    EventsSort:
      description: The sort parameters when querying events.
      enum:
      - timestamp
      - -timestamp
      type: string
      x-enum-varnames:
      - TIMESTAMP_ASCENDING
      - TIMESTAMP_DESCENDING
    EventsWarning:
      description: A warning message indicating something is wrong with the query.
      properties:
        code:
          description: A unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning.
          example: One or several indexes are missing or invalid. Results hold data
            from the other indexes.
          type: string
      type: object
    FastlyAccounResponseAttributes:
      description: Attributes object of a Fastly account.
      properties:
        name:
          description: The name of the Fastly account.
          example: test-name
          type: string
        services:
          description: A list of services belonging to the parent account.
          items:
            $ref: '#/components/schemas/FastlyService'
          type: array
      required:
      - name
      type: object
    FastlyAccountCreateRequest:
      description: Payload schema when adding a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountCreateRequestData'
      required:
      - data
      type: object
    FastlyAccountCreateRequestAttributes:
      description: Attributes object for creating a Fastly account.
      properties:
        api_key:
          description: The API key for the Fastly account.
          example: ABCDEFG123
          type: string
        name:
          description: The name of the Fastly account.
          example: test-name
          type: string
        services:
          description: A list of services belonging to the parent account.
          items:
            $ref: '#/components/schemas/FastlyService'
          type: array
      required:
      - api_key
      - name
      type: object
    FastlyAccountCreateRequestData:
      description: Data object for creating a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccountCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      required:
      - attributes
      - type
      type: object
    FastlyAccountResponse:
      description: The expected response schema when getting a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountResponseData'
      type: object
    FastlyAccountResponseData:
      description: Data object of a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccounResponseAttributes'
        id:
          description: The ID of the Fastly account, a hash of the account name.
          example: abc123
          type: string
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      required:
      - attributes
      - id
      - type
      type: object
    FastlyAccountType:
      default: fastly-accounts
      description: The JSON:API type for this API. Should always be `fastly-accounts`.
      enum:
      - fastly-accounts
      example: fastly-accounts
      type: string
      x-enum-varnames:
      - FASTLY_ACCOUNTS
    FastlyAccountUpdateRequest:
      description: Payload schema when updating a Fastly account.
      properties:
        data:
          $ref: '#/components/schemas/FastlyAccountUpdateRequestData'
      required:
      - data
      type: object
    FastlyAccountUpdateRequestAttributes:
      description: Attributes object for updating a Fastly account.
      properties:
        api_key:
          description: The API key of the Fastly account.
          example: ABCDEFG123
          type: string
      type: object
    FastlyAccountUpdateRequestData:
      description: Data object for updating a Fastly account.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyAccountUpdateRequestAttributes'
        type:
          $ref: '#/components/schemas/FastlyAccountType'
      type: object
    FastlyAccountsResponse:
      description: The expected response schema when getting Fastly accounts.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/FastlyAccountResponseData'
          type: array
      type: object
    FastlyService:
      description: The schema representation of a Fastly service.
      properties:
        id:
          description: The id of the Fastly service
          example: 6abc7de6893AbcDe9fghIj
          type: string
        tags:
          description: A list of tags for the Fastly service.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      required:
      - id
      type: object
    FastlyServiceAttributes:
      description: Attributes object for Fastly service requests.
      properties:
        tags:
          description: A list of tags for the Fastly service.
          example:
          - myTag
          - myTag2:myValue
          items:
            type: string
          type: array
      type: object
    FastlyServiceData:
      description: Data object for Fastly service requests.
      properties:
        attributes:
          $ref: '#/components/schemas/FastlyServiceAttributes'
        id:
          description: The ID of the Fastly service.
          example: abc123
          type: string
        type:
          $ref: '#/components/schemas/FastlyServiceType'
      required:
      - id
      - type
      type: object
    FastlyServiceRequest:
      description: Payload schema for Fastly service requests.
      properties:
        data:
          $ref: '#/components/schemas/FastlyServiceData'
      required:
      - data
      type: object
    FastlyServiceResponse:
      description: The expected response schema when getting a Fastly service.
      properties:
        data:
          $ref: '#/components/schemas/FastlyServiceData'
      type: object
    FastlyServiceType:
      default: fastly-services
      description: The JSON:API type for this API. Should always be `fastly-services`.
      enum:
      - fastly-services
      example: fastly-services
      type: string
      x-enum-varnames:
      - FASTLY_SERVICES
    FastlyServicesResponse:
      description: The expected response schema when getting Fastly services.
      properties:
        data:
          description: The JSON:API data schema.
          items:
            $ref: '#/components/schemas/FastlyServiceResponse'
          type: array
      type: object
    Finding:
      description: A single finding without the message and resource configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/FindingAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    FindingAttributes:
      description: The JSON:API attributes of the finding.
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        mute:
          $ref: '#/components/schemas/FindingMute'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    FindingEvaluation:
      description: The evaluation of the finding.
      enum:
      - pass
      - fail
      example: pass
      type: string
      x-enum-varnames:
      - PASS
      - FAIL
    FindingEvaluationChangedAt:
      description: The date on which the evaluation for this finding changed (Unix
        ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingID:
      description: The unique ID for this finding.
      example: AQAAAYbb1i0gijTHEQAAAABBWWJiMWkwZ0FBQ2FuNzBJVGZXZ3B3QUE
      type: string
    FindingMute:
      additionalProperties: false
      description: Information about the mute status of this finding.
      properties:
        description:
          description: Additional information about the reason why this finding is
            muted or unmuted.
          example: To be resolved later
          type: string
        expiration_date:
          description: The expiration date of the mute or unmute action (Unix ms).
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether this finding is muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
        start_date:
          description: The start of the mute period.
          example: 1678721573794
          format: int64
          type: integer
        uuid:
          description: The ID of the user who muted or unmuted this finding.
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
      type: object
    FindingMuteReason:
      description: The reason why this finding is muted or unmuted.
      enum:
      - PENDING_FIX
      - FALSE_POSITIVE
      - ACCEPTED_RISK
      - NO_PENDING_FIX
      - HUMAN_ERROR
      - NO_LONGER_ACCEPTED_RISK
      - OTHER
      example: ACCEPTED_RISK
      type: string
      x-enum-varnames:
      - PENDING_FIX
      - FALSE_POSITIVE
      - ACCEPTED_RISK
      - NO_PENDING_FIX
      - HUMAN_ERROR
      - NO_LONGER_ACCEPTED_RISK
      - OTHER
    FindingResource:
      description: The resource name of this finding.
      example: my_resource_name
      type: string
    FindingResourceDiscoveryDate:
      description: The date on which the resource was discovered (Unix ms).
      example: 1678721573794
      format: int64
      minimum: 1
      type: integer
    FindingResourceType:
      description: The resource type of this finding.
      example: azure_storage_account
      type: string
    FindingRule:
      additionalProperties: false
      description: The rule that triggered this finding.
      properties:
        id:
          description: The ID of the rule that triggered this finding.
          example: dv2-jzf-41i
          type: string
        name:
          description: The name of the rule that triggered this finding.
          example: Soft delete is enabled for Azure Storage
          type: string
      type: object
    FindingStatus:
      description: The status of the finding.
      enum:
      - critical
      - high
      - medium
      - low
      - info
      example: critical
      type: string
      x-enum-varnames:
      - CRITICAL
      - HIGH
      - MEDIUM
      - LOW
      - INFO
    FindingTags:
      description: The tags associated with this finding.
      example:
      - cloud_provider:aws
      - myTag:myValue
      items:
        description: The list of tags.
        type: string
      type: array
    FindingType:
      default: finding
      description: The JSON:API type for findings.
      enum:
      - finding
      example: finding
      type: string
      x-enum-varnames:
      - FINDING
    GCPSTSDelegateAccount:
      description: Datadog principal service account info.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSDelegateAccountAttributes'
        id:
          description: The ID of the delegate service account.
          example: ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
          type: string
        type:
          $ref: '#/components/schemas/GCPSTSDelegateAccountType'
      type: object
    GCPSTSDelegateAccountAttributes:
      description: Your delegate account attributes.
      properties:
        delegate_account_email:
          description: Your organization's Datadog principal email address.
          example: ddgci-1a19n28hb1a812221893@datadog-gci-sts-us5-prod.iam.gserviceaccount.com
          type: string
      type: object
    GCPSTSDelegateAccountResponse:
      description: Your delegate service account response data.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSDelegateAccount'
      type: object
    GCPSTSDelegateAccountType:
      default: gcp_sts_delegate
      description: The type of account.
      enum:
      - gcp_sts_delegate
      example: gcp_sts_delegate
      type: string
      x-enum-varnames:
      - GCP_STS_DELEGATE
    GCPSTSServiceAccount:
      description: Info on your service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        id:
          description: Your service account's unique ID.
          example: d291291f-12c2-22g4-j290-123456678897
          type: string
        meta:
          $ref: '#/components/schemas/GCPServiceAccountMeta'
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountAttributes:
      description: Attributes associated with your service account.
      properties:
        account_tags:
          description: Tags to be associated with GCP metrics and service checks from
            your account.
          items:
            description: Account Level Tag
            type: string
          type: array
        automute:
          description: Silence monitors for expected GCE instance shutdowns.
          type: boolean
        client_email:
          description: Your service account email address.
          example: datadog-service-account@test-project.iam.gserviceaccount.com
          type: string
        host_filters:
          description: Your Host Filters.
          items:
            description: Host Filters
            type: string
          type: array
        is_cspm_enabled:
          description: When enabled, Datadog performs configuration checks across
            your Google Cloud environment by continuously scanning every resource.
          type: boolean
      type: object
    GCPSTSServiceAccountCreateRequest:
      description: Data on your newly generated service account.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccountData'
      type: object
    GCPSTSServiceAccountData:
      description: Additional metadata on your generated service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountResponse:
      description: The account creation response.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccount'
      type: object
    GCPSTSServiceAccountUpdateRequest:
      description: Service account info.
      properties:
        data:
          $ref: '#/components/schemas/GCPSTSServiceAccountUpdateRequestData'
      type: object
    GCPSTSServiceAccountUpdateRequestData:
      description: Data on your service account.
      properties:
        attributes:
          $ref: '#/components/schemas/GCPSTSServiceAccountAttributes'
        id:
          description: Your service account's unique ID.
          example: d291291f-12c2-22g4-j290-123456678897
          type: string
        type:
          $ref: '#/components/schemas/GCPServiceAccountType'
      type: object
    GCPSTSServiceAccountsResponse:
      description: Object containing all your STS enabled accounts.
      properties:
        data:
          description: Array of GCP STS enabled service accounts.
          items:
            $ref: '#/components/schemas/GCPSTSServiceAccount'
          type: array
      type: object
    GCPServiceAccountMeta:
      description: Additional information related to your service account.
      properties:
        accessible_projects:
          description: The current list of projects accessible from your service account.
          items:
            description: List of GCP projects.
            type: string
          type: array
      type: object
    GCPServiceAccountType:
      default: gcp_service_account
      description: The type of account.
      enum:
      - gcp_service_account
      example: gcp_service_account
      type: string
      x-enum-varnames:
      - GCP_SERVICE_ACCOUNT
    GetFindingResponse:
      description: The expected response schema when getting a finding.
      properties:
        data:
          $ref: '#/components/schemas/DetailedFinding'
      required:
      - data
      type: object
    HTTPLog:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItem'
      type: array
    HTTPLogError:
      description: List of errors.
      properties:
        detail:
          description: Error message.
          example: Malformed payload
          type: string
        status:
          description: Error code.
          example: '400'
          type: string
        title:
          description: Error title.
          example: Bad Request
          type: string
      type: object
    HTTPLogErrors:
      description: Invalid query performed.
      properties:
        errors:
          description: Structured errors.
          items:
            $ref: '#/components/schemas/HTTPLogError'
          type: array
      type: object
    HTTPLogItem:
      additionalProperties:
        description: Additional log attributes.
        type: string
      description: Logs that are sent over HTTP.
      properties:
        ddsource:
          description: 'The integration name associated with your log: the technology
            from which the log originated.

            When it matches an integration name, Datadog automatically installs the
            corresponding parsers and facets.

            See [reserved attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).'
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: 'The message [reserved attribute](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message attribute
            as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where it
            is indexed for full text search.'
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: 'The name of the application or service generating the log
            events.

            It is used to switch from Logs to APM, so make sure you define the same
            value when you use both products.

            See [reserved attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).'
          example: payment
          type: string
      required:
      - message
      type: object
    HourlyUsage:
      description: Hourly usage for a product family for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/HourlyUsageAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    HourlyUsageAttributes:
      description: Attributes of hourly usage for a product family for an org for
        a time period.
      properties:
        measurements:
          description: List of the measured usage values for the product family for
            the org for the time period.
          items:
            $ref: '#/components/schemas/HourlyUsageMeasurement'
          type: array
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs
            to.
          type: string
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
      type: object
    HourlyUsageMeasurement:
      description: Usage amount for a given usage type.
      properties:
        usage_type:
          description: Type of usage.
          type: string
        value:
          description: Contains the number measured for the given usage_type during
            the hour.
          format: int64
          nullable: true
          type: integer
      type: object
    HourlyUsageMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsagePagination'
      type: object
    HourlyUsagePagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
      type: object
    HourlyUsageResponse:
      description: Hourly usage response.
      properties:
        data:
          description: Response containing hourly usage.
          items:
            $ref: '#/components/schemas/HourlyUsage'
          type: array
        meta:
          $ref: '#/components/schemas/HourlyUsageMetadata'
      type: object
    HourlyUsageType:
      description: Usage type that is being measured.
      enum:
      - app_sec_host_count
      - observability_pipelines_bytes_processed
      - lambda_traced_invocations_count
      example: observability_pipelines_bytes_processed
      type: string
      x-enum-varnames:
      - APP_SEC_HOST_COUNT
      - OBSERVABILITY_PIPELINES_BYTES_PROCESSSED
      - LAMBDA_TRACED_INVOCATIONS_COUNT
    IPAllowlistAttributes:
      description: Attributes of the IP allowlist.
      properties:
        enabled:
          description: Whether the IP allowlist logic is enabled or not.
          type: boolean
        entries:
          description: Array of entries in the IP allowlist.
          items:
            $ref: '#/components/schemas/IPAllowlistEntry'
          type: array
      type: object
    IPAllowlistData:
      description: IP allowlist data.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistAttributes'
        id:
          description: The unique identifier of the org.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistType'
      required:
      - type
      type: object
    IPAllowlistEntry:
      description: IP allowlist entry object.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistEntryData'
      required:
      - data
      type: object
    IPAllowlistEntryAttributes:
      description: Attributes of the IP allowlist entry.
      properties:
        cidr_block:
          description: The CIDR block describing the IP range of the entry.
          type: string
        created_at:
          description: Creation time of the entry.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last entry modification.
          format: date-time
          readOnly: true
          type: string
        note:
          description: A note describing the IP allowlist entry.
          type: string
      type: object
    IPAllowlistEntryData:
      description: Data of the IP allowlist entry object.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistEntryAttributes'
        id:
          description: The unique identifier of the IP allowlist entry.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistEntryType'
      required:
      - type
      type: object
    IPAllowlistEntryType:
      default: ip_allowlist_entry
      description: IP allowlist Entry type.
      enum:
      - ip_allowlist_entry
      example: ip_allowlist_entry
      type: string
      x-enum-varnames:
      - IP_ALLOWLIST_ENTRY
    IPAllowlistResponse:
      description: Response containing information about the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      type: object
    IPAllowlistType:
      default: ip_allowlist
      description: IP allowlist type.
      enum:
      - ip_allowlist
      example: ip_allowlist
      type: string
      x-enum-varnames:
      - IP_ALLOWLIST
    IPAllowlistUpdateRequest:
      description: Update the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      required:
      - data
      type: object
    IdPMetadataFormData:
      description: The form data submitted to upload IdP metadata
      properties:
        idp_file:
          description: The IdP metadata XML file
          format: binary
          type: string
          x-mimetype: application/xml
      type: object
    IntakePayloadAccepted:
      description: The payload accepted for intake.
      properties:
        errors:
          description: A list of errors.
          items:
            description: An empty error list.
            type: string
          type: array
      type: object
    JSONAPIErrorItem:
      description: API error response body
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the error.
          example: Missing required attribute in body
          type: string
        status:
          description: Status code of the response.
          example: '400'
          type: string
        title:
          description: Short human-readable summary of the error.
          example: Bad Request
          type: string
      type: object
    JSONAPIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/JSONAPIErrorItem'
          type: array
      required:
      - errors
      type: object
    ListFindingsData:
      description: Array of findings.
      items:
        $ref: '#/components/schemas/Finding'
      type: array
    ListFindingsMeta:
      additionalProperties: false
      description: Metadata for pagination.
      properties:
        page:
          $ref: '#/components/schemas/ListFindingsPage'
        snapshot_timestamp:
          description: The point in time corresponding to the listed findings.
          example: 1678721573794
          format: int64
          minimum: 1
          type: integer
      type: object
    ListFindingsPage:
      additionalProperties: false
      description: Pagination and findings count information.
      properties:
        cursor:
          description: The cursor used to paginate requests.
          example: eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
          type: string
        total_filtered_count:
          description: The total count of findings after the filter has been applied.
          example: 213
          format: int64
          type: integer
      type: object
    ListFindingsResponse:
      description: The expected response schema when listing findings.
      properties:
        data:
          $ref: '#/components/schemas/ListFindingsData'
        meta:
          $ref: '#/components/schemas/ListFindingsMeta'
      required:
      - data
      - meta
      type: object
    LogsMetricCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: The path to the value the log-based metric will aggregate on
            (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
      - aggregation_type
      type: object
    LogsMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
      - count
      - distribution
      example: distribution
      type: string
      x-enum-varnames:
      - COUNT
      - DISTRIBUTION
    LogsMetricComputeIncludePercentiles:
      description: 'Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.'
      example: true
      type: boolean
    LogsMetricCreateAttributes:
      description: The object describing the Datadog log-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      required:
      - compute
      type: object
    LogsMetricCreateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
      - id
      - type
      - attributes
      type: object
    LogsMetricCreateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricCreateData'
      required:
      - data
      type: object
    LogsMetricFilter:
      description: The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated
            over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: status_code
          type: string
      required:
      - path
      type: object
    LogsMetricID:
      description: The name of the log-based metric.
      example: logs.page.load.count
      type: string
    LogsMetricResponse:
      description: The log-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricResponseData'
      type: object
    LogsMetricResponseAttributes:
      description: The object describing a Datadog log-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricResponseGroupBy'
          type: array
      type: object
    LogsMetricResponseCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricResponseComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: The path to the value the log-based metric will aggregate on
            (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    LogsMetricResponseComputeAggregationType:
      description: The type of aggregation to use.
      enum:
      - count
      - distribution
      example: distribution
      type: string
      x-enum-varnames:
      - COUNT
      - DISTRIBUTION
    LogsMetricResponseData:
      description: The log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      type: object
    LogsMetricResponseFilter:
      description: The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated
            over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: status_code
          type: string
      type: object
    LogsMetricType:
      default: logs_metrics
      description: The type of the resource. The value should always be logs_metrics.
      enum:
      - logs_metrics
      example: logs_metrics
      type: string
      x-enum-varnames:
      - LOGS_METRICS
    LogsMetricUpdateAttributes:
      description: The log-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      type: object
    LogsMetricUpdateCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
      type: object
    LogsMetricUpdateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
      - type
      - attributes
      type: object
    LogsMetricUpdateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricUpdateData'
      required:
      - data
      type: object
    LogsMetricsResponse:
      description: All the available log-based metric objects.
      properties:
        data:
          description: A list of log-based metric objects.
          items:
            $ref: '#/components/schemas/LogsMetricResponseData'
          type: array
      type: object
    MetricContentEncoding:
      default: deflate
      description: HTTP header used to compress the media-type.
      enum:
      - deflate
      - zstd1
      - gzip
      example: deflate
      type: string
      x-enum-varnames:
      - DEFLATE
      - ZSTD1
      - GZIP
    MetricIntakeType:
      description: The type of metric. The available types are `0` (unspecified),
        `1` (count), `2` (rate), and `3` (gauge).
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
      x-enum-varnames:
      - UNSPECIFIED
      - COUNT
      - RATE
      - GAUGE
    MetricMetadata:
      description: Metadata for the metric.
      properties:
        origin:
          $ref: '#/components/schemas/MetricOrigin'
      type: object
    MetricOrigin:
      description: Metric origin information.
      properties:
        metric_type:
          default: 0
          description: The origin metric type code
          format: int32
          maximum: 1000
          type: integer
        product:
          default: 0
          description: The origin product code
          format: int32
          maximum: 1000
          type: integer
        service:
          default: 0
          description: The origin service code
          format: int32
          maximum: 1000
          type: integer
      type: object
    MetricPayload:
      description: The metrics' payload.
      properties:
        series:
          description: A list of time series to submit to Datadog.
          example:
          - metric: system.load.1
            points:
            - timestamp: 1475317847
              value: 0.7
            resources:
            - name: dummyhost
              type: host
          items:
            $ref: '#/components/schemas/MetricSeries'
          type: array
      required:
      - series
      type: object
    MetricPoint:
      description: A point object is of the form `{POSIX_timestamp, numeric_value}`.
      example:
        timestamp: 1575317847
        value: 0.5
      properties:
        timestamp:
          description: 'The timestamp should be in seconds and current.

            Current is defined as not more than 10 minutes in the future or more than
            1 hour in the past.'
          format: int64
          type: integer
        value:
          description: The numeric value format should be a 64bit float gauge-type
            value.
          format: double
          type: number
      type: object
    MetricResource:
      description: Metric resource.
      example:
        name: dummyhost
        type: host
      properties:
        name:
          description: The name of the resource.
          type: string
        type:
          description: The type of the resource.
          type: string
      type: object
    MetricSeries:
      description: 'A metric to submit to Datadog.

        See [Datadog metrics](https://docs.datadoghq.com/developers/metrics/#custom-metrics-properties).'
      properties:
        interval:
          description: If the type of the metric is rate or count, define the corresponding
            interval.
          example: 20
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/MetricMetadata'
        metric:
          description: The name of the timeseries.
          example: system.load.1
          type: string
        points:
          description: Points relating to a metric. All points must be objects with
            timestamp and a scalar value (cannot be a string). Timestamps should be
            in POSIX time in seconds, and cannot be more than ten minutes in the future
            or more than one hour in the past.
          items:
            $ref: '#/components/schemas/MetricPoint'
          type: array
        resources:
          description: A list of resources to associate with this metric.
          items:
            $ref: '#/components/schemas/MetricResource'
          type: array
        source_type_name:
          description: The source type name.
          example: datadog
          type: string
        tags:
          description: A list of tags associated with the metric.
          example:
          - environment:test
          items:
            description: Individual tags.
            type: string
          type: array
        type:
          $ref: '#/components/schemas/MetricIntakeType'
        unit:
          description: The unit of point value.
          example: second
          type: string
      required:
      - metric
      - points
      type: object
    MonitorType:
      description: Attributes from the monitor that triggered the event.
      nullable: true
      properties:
        created_at:
          description: The POSIX timestamp of the monitor's creation in nanoseconds.
          example: 1646318692000
          format: int64
          type: integer
        group_status:
          description: Monitor group status used when there is no `result_groups`.
          format: int32
          maximum: 2147483647
          type: integer
        groups:
          description: Groups to which the monitor belongs.
          items:
            description: A group.
            type: string
          type: array
        id:
          description: The monitor ID.
          format: int64
          type: integer
        message:
          description: The monitor message.
          type: string
        modified:
          description: The monitor's last-modified timestamp.
          format: int64
          type: integer
        name:
          description: The monitor name.
          type: string
        query:
          description: The query that triggers the alert.
          type: string
        tags:
          description: A list of tags attached to the monitor.
          example:
          - environment:test
          items:
            description: A tag.
            type: string
          type: array
        templated_name:
          description: The templated name of the monitor before resolving any template
            variables.
          type: string
        type:
          description: The monitor type.
          type: string
      type: object
    MuteFindingRequest:
      description: The new mute finding request.
      properties:
        data:
          $ref: '#/components/schemas/MuteFindingRequestData'
      required:
      - data
      type: object
    MuteFindingRequestAttributes:
      additionalProperties: false
      description: The mute properties to be updated.
      properties:
        mute:
          $ref: '#/components/schemas/MuteFindingRequestProperties'
      required:
      - mute
      type: object
    MuteFindingRequestData:
      description: Data object containing the new mute properties of the finding.
      properties:
        attributes:
          $ref: '#/components/schemas/MuteFindingRequestAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/FindingType'
      required:
      - id
      - type
      - attributes
      type: object
    MuteFindingRequestProperties:
      additionalProperties: false
      description: Object containing the new mute properties of the finding.
      properties:
        description:
          description: Additional information about the reason why this finding is
            muted or unmuted. This field has a maximum limit of 280 characters.
          example: To be resolved later
          type: string
        expiration_date:
          description: 'The expiration date of the mute or unmute action (Unix ms).
            It must be set to a value greater than the current timestamp.

            If this field is not provided, the finding will be muted or unmuted indefinitely,
            which is equivalent to setting the expiration date to 9999999999999.

            '
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether this finding is muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
      required:
      - muted
      - reason
      type: object
    MuteFindingResponse:
      description: The expected response schema.
      properties:
        data:
          $ref: '#/components/schemas/MuteFindingResponseData'
      required:
      - data
      type: object
    MuteFindingResponseAttributes:
      description: The JSON:API attributes of the finding.
      properties:
        evaluation:
          $ref: '#/components/schemas/FindingEvaluation'
        evaluation_changed_at:
          $ref: '#/components/schemas/FindingEvaluationChangedAt'
        mute:
          $ref: '#/components/schemas/MuteFindingResponseProperties'
        resource:
          $ref: '#/components/schemas/FindingResource'
        resource_discovery_date:
          $ref: '#/components/schemas/FindingResourceDiscoveryDate'
        resource_type:
          $ref: '#/components/schemas/FindingResourceType'
        rule:
          $ref: '#/components/schemas/FindingRule'
        status:
          $ref: '#/components/schemas/FindingStatus'
        tags:
          $ref: '#/components/schemas/FindingTags'
      type: object
    MuteFindingResponseData:
      description: Data object containing the updated finding.
      properties:
        attributes:
          $ref: '#/components/schemas/MuteFindingResponseAttributes'
        id:
          $ref: '#/components/schemas/FindingID'
        type:
          $ref: '#/components/schemas/FindingType'
      type: object
    MuteFindingResponseProperties:
      additionalProperties: false
      description: Information about the mute status of this finding.
      properties:
        description:
          description: 'Additional information about the reason why this finding is
            muted or unmuted.

            This attribute will not be included in the response if the description
            is not provided in the request body.

            '
          example: To be resolved later
          type: string
        expiration_date:
          description: 'The expiration date of the mute or unmute action.

            If the expiration date is not provided in the request body, this attribute
            will not be included in the response and the finding will be muted or
            unmuted indefinitely.

            '
          example: 1778721573794
          format: int64
          type: integer
        muted:
          description: Whether this finding is muted or unmuted.
          example: true
          type: boolean
        reason:
          $ref: '#/components/schemas/FindingMuteReason'
      type: object
    OnDemandConcurrencyCap:
      description: On-demand concurrency cap.
      properties:
        attributes:
          $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        type:
          $ref: '#/components/schemas/OnDemandConcurrencyCapType'
      type: object
    OnDemandConcurrencyCapAttributes:
      description: On-demand concurrency cap attributes.
      properties:
        on_demand_concurrency_cap:
          description: Value of the on-demand concurrency cap.
          format: double
          type: number
      type: object
    OnDemandConcurrencyCapResponse:
      description: On-demand concurrency cap response.
      properties:
        data:
          $ref: '#/components/schemas/OnDemandConcurrencyCap'
      type: object
    OnDemandConcurrencyCapType:
      description: On-demand concurrency cap type.
      enum:
      - on_demand_concurrency_cap
      type: string
      x-enum-varnames:
      - ON_DEMAND_CONCURRENCY_CAP
    OpsgenieServiceCreateAttributes:
      description: The Opsgenie service attributes for a create request.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: https://example.com
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          type: string
        opsgenie_api_key:
          description: The Opsgenie API key for your Opsgenie service.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      required:
      - name
      - opsgenie_api_key
      - region
      type: object
    OpsgenieServiceCreateData:
      description: Opsgenie service data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceCreateAttributes'
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
      - type
      - attributes
      type: object
    OpsgenieServiceCreateRequest:
      description: Create request for an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceCreateData'
      required:
      - data
      type: object
    OpsgenieServiceRegionType:
      description: The region for the Opsgenie service.
      enum:
      - us
      - eu
      - custom
      example: us
      type: string
      x-enum-varnames:
      - US
      - EU
      - CUSTOM
    OpsgenieServiceResponse:
      description: Response of an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceResponseData'
      required:
      - data
      type: object
    OpsgenieServiceResponseAttributes:
      description: The attributes from an Opsgenie service response.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: null
          nullable: true
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      type: object
    OpsgenieServiceResponseData:
      description: Opsgenie service data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceResponseAttributes'
        id:
          description: The ID of the Opsgenie service.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          type: string
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
      - id
      - type
      - attributes
      type: object
    OpsgenieServiceType:
      default: opsgenie-service
      description: Opsgenie service resource type.
      enum:
      - opsgenie-service
      example: opsgenie-service
      type: string
      x-enum-varnames:
      - OPSGENIE_SERVICE
    OpsgenieServiceUpdateAttributes:
      description: The Opsgenie service attributes for an update request.
      properties:
        custom_url:
          description: The custom URL for a custom region.
          example: https://example.com
          nullable: true
          type: string
        name:
          description: The name for the Opsgenie service.
          example: fake-opsgenie-service-name
          type: string
        opsgenie_api_key:
          description: The Opsgenie API key for your Opsgenie service.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        region:
          $ref: '#/components/schemas/OpsgenieServiceRegionType'
      type: object
    OpsgenieServiceUpdateData:
      description: Opsgenie service for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/OpsgenieServiceUpdateAttributes'
        id:
          description: The ID of the Opsgenie service.
          example: 596da4af-0563-4097-90ff-07230c3f9db3
          type: string
        type:
          $ref: '#/components/schemas/OpsgenieServiceType'
      required:
      - id
      - type
      - attributes
      type: object
    OpsgenieServiceUpdateRequest:
      description: Update request for an Opsgenie service.
      properties:
        data:
          $ref: '#/components/schemas/OpsgenieServiceUpdateData'
      required:
      - data
      type: object
    OpsgenieServicesResponse:
      description: Response with a list of Opsgenie services.
      properties:
        data:
          description: An array of Opsgenie services.
          example:
          - attributes:
              custom_url: null
              name: fake-opsgenie-service-name
              region: us
            id: 596da4af-0563-4097-90ff-07230c3f9db3
            type: opsgenie-service
          - attributes:
              custom_url: null
              name: fake-opsgenie-service-name-2
              region: eu
            id: 0d2937f1-b561-44fa-914a-99910f848014
            type: opsgenie-service
          items:
            $ref: '#/components/schemas/OpsgenieServiceResponseData'
          type: array
      required:
      - data
      type: object
    Organization:
      description: Organization object.
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationAttributes'
        id:
          description: ID of the organization.
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
      - type
      type: object
    OrganizationAttributes:
      description: Attributes of the organization.
      properties:
        created_at:
          description: Creation time of the organization.
          format: date-time
          type: string
        description:
          description: Description of the organization.
          type: string
        disabled:
          description: Whether or not the organization is disabled.
          type: boolean
        modified_at:
          description: Time of last organization modification.
          format: date-time
          type: string
        name:
          description: Name of the organization.
          type: string
        public_id:
          description: Public ID of the organization.
          type: string
        sharing:
          description: Sharing type of the organization.
          type: string
        url:
          description: URL of the site that this organization exists at.
          type: string
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
      - orgs
      example: orgs
      type: string
      x-enum-varnames:
      - ORGS
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    Permission:
      description: Permission object.
      properties:
        attributes:
          $ref: '#/components/schemas/PermissionAttributes'
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      required:
      - type
      type: object
    PermissionAttributes:
      description: Attributes of a permission.
      properties:
        created:
          description: Creation time of the permission.
          format: date-time
          type: string
        description:
          description: Description of the permission.
          type: string
        display_name:
          description: Displayed name for the permission.
          type: string
        display_type:
          description: Display type.
          type: string
        group_name:
          description: Name of the permission group.
          type: string
        name:
          description: Name of the permission.
          type: string
        restricted:
          description: Whether or not the permission is restricted.
          type: boolean
      type: object
    PermissionsResponse:
      description: Payload with API-returned permissions.
      properties:
        data:
          description: Array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    PermissionsType:
      default: permissions
      description: Permissions resource type.
      enum:
      - permissions
      example: permissions
      type: string
      x-enum-varnames:
      - PERMISSIONS
    ProcessSummariesMeta:
      description: Response metadata object.
      properties:
        page:
          $ref: '#/components/schemas/ProcessSummariesMetaPage'
      type: object
    ProcessSummariesMetaPage:
      description: Paging attributes.
      properties:
        after:
          description: 'The cursor used to get the next results, if any. To make the
            next request, use the same

            parameters with the addition of the `page[cursor]`.'
          example: 911abf1204838d9cdfcb9a96d0b6a1bd03e1b514074f1ce1737c4cbd
          type: string
        size:
          description: Number of results returned.
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
      type: object
    ProcessSummariesResponse:
      description: List of process summaries.
      properties:
        data:
          description: Array of process summary objects.
          items:
            $ref: '#/components/schemas/ProcessSummary'
          type: array
        meta:
          $ref: '#/components/schemas/ProcessSummariesMeta'
      type: object
    ProcessSummary:
      description: Process summary object.
      properties:
        attributes:
          $ref: '#/components/schemas/ProcessSummaryAttributes'
        id:
          description: Process ID.
          type: string
        type:
          $ref: '#/components/schemas/ProcessSummaryType'
      type: object
    ProcessSummaryAttributes:
      description: Attributes for a process summary.
      properties:
        cmdline:
          description: Process command line.
          type: string
        host:
          description: Host running the process.
          type: string
        pid:
          description: Process ID.
          format: int64
          type: integer
        ppid:
          description: Parent process ID.
          format: int64
          type: integer
        start:
          description: Time the process was started.
          type: string
        tags:
          description: List of tags associated with the process.
          items:
            description: A tag associated with the process.
            type: string
          type: array
        timestamp:
          description: Time the process was seen.
          type: string
        user:
          description: Process owner.
          type: string
      type: object
    ProcessSummaryType:
      default: process
      description: Type of process summary.
      enum:
      - process
      example: process
      type: string
      x-enum-varnames:
      - PROCESS
    QuerySortOrder:
      default: desc
      description: Direction of sort.
      enum:
      - asc
      - desc
      type: string
      x-enum-varnames:
      - ASC
      - DESC
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
      - data
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
      - id
      - type
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
      - data
      type: object
    RelationshipToPermission:
      description: Relationship to a permissions object.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToPermissionData'
      type: object
    RelationshipToPermissionData:
      description: Relationship to permission object.
      properties:
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      type: object
    RelationshipToPermissions:
      description: Relationship to multiple permissions objects.
      properties:
        data:
          description: Relationships to permission objects.
          items:
            $ref: '#/components/schemas/RelationshipToPermissionData'
          type: array
      type: object
    ReorderRetentionFiltersRequest:
      description: A list of retention filters to reorder.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterWithoutAttributes'
          type: array
      required:
      - data
      type: object
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    RestrictionPolicy:
      description: Restriction policy object.
      properties:
        attributes:
          $ref: '#/components/schemas/RestrictionPolicyAttributes'
        id:
          description: The identifier, always equivalent to the value specified in
            the `resource_id` path parameter.
          example: dashboard:abc-def-ghi
          type: string
        type:
          $ref: '#/components/schemas/RestrictionPolicyType'
      required:
      - type
      - id
      - attributes
      type: object
    RestrictionPolicyAttributes:
      description: Restriction policy attributes.
      example:
        bindings: []
      properties:
        bindings:
          description: An array of bindings.
          items:
            $ref: '#/components/schemas/RestrictionPolicyBinding'
          type: array
      required:
      - bindings
      type: object
    RestrictionPolicyBinding:
      description: Specifies which principals are associated with a relation.
      properties:
        principals:
          description: 'An array of principals. A principal is a subject or group
            of subjects.

            Each principal is formatted as `type:id`. Supported types: `role`, `team`,
            `user`, and `org`.

            The org ID can be obtained through the api/v2/current_user API.

            The user principal type accepts service account IDs.'
          example:
          - role:00000000-0000-1111-0000-000000000000
          items:
            description: 'Subject or group of subjects. Each principal is formatted
              as `type:id`.

              Supported types: `role`, `team`, `user`, and `org`.

              The org ID can be obtained through the api/v2/current_user API.

              The user principal type accepts service account IDs.'
            type: string
          type: array
        relation:
          description: The role/level of access.
          example: editor
          type: string
      required:
      - relation
      - principals
      type: object
    RestrictionPolicyResponse:
      description: Response containing information about a single restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
      - data
      type: object
    RestrictionPolicyType:
      default: restriction_policy
      description: Restriction policy type.
      enum:
      - restriction_policy
      example: restriction_policy
      type: string
      x-enum-varnames:
      - RESTRICTION_POLICY
    RestrictionPolicyUpdateRequest:
      description: Update request for a restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
      - data
      type: object
    RetentionFilter:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
      - id
      - type
      - attributes
      type: object
    RetentionFilterAll:
      description: The definition of the retention filter.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterAllAttributes'
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
      - id
      - type
      - attributes
      type: object
    RetentionFilterAllAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterAllType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: 'Sample rate to apply to spans going through this retention
            filter,

            a value of 1.0 keeps all spans matching the query.'
          example: 1.0
          format: double
          type: number
      type: object
    RetentionFilterAllType:
      default: spans-sampling-processor
      description: The type of retention filter.
      enum:
      - spans-sampling-processor
      - spans-errors-sampling-processor
      - spans-appsec-sampling-processor
      type: string
      x-enum-varnames:
      - SPANS_SAMPLING_PROCESSOR
      - SPANS_ERRORS_SAMPLING_PROCESSOR
      - SPANS_APPSEC_SAMPLING_PROCESSOR
    RetentionFilterAttributes:
      description: The attributes of the retention filter.
      properties:
        created_at:
          description: The creation timestamp of the retention filter.
          format: int64
          type: integer
        created_by:
          description: The creator of the retention filter.
          type: string
        editable:
          description: Shows whether the filter can be edited.
          example: true
          type: boolean
        enabled:
          description: The status of the retention filter (Enabled/Disabled).
          example: true
          type: boolean
        execution_order:
          description: The execution order of the retention filter.
          format: int64
          type: integer
        filter:
          $ref: '#/components/schemas/SpansFilter'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        modified_at:
          description: The modification timestamp of the retention filter.
          format: int64
          type: integer
        modified_by:
          description: The modifier of the retention filter.
          type: string
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: 'Sample rate to apply to spans going through this retention
            filter,

            a value of 1.0 keeps all spans matching the query.'
          example: 1.0
          format: double
          type: number
      type: object
    RetentionFilterCreateAttributes:
      description: The object describing the configuration of the retention filter
        to create/update.
      properties:
        enabled:
          description: Enable/Disable the retention filter.
          example: true
          type: boolean
        filter:
          $ref: '#/components/schemas/SpansFilterCreate'
        filter_type:
          $ref: '#/components/schemas/RetentionFilterType'
        name:
          description: The name of the retention filter.
          example: my retention filter
          type: string
        rate:
          description: 'Sample rate to apply to spans going through this retention
            filter,

            a value of 1.0 keeps all spans matching the query.'
          example: 1.0
          format: double
          type: number
      required:
      - name
      - filter
      - enabled
      - filter_type
      - rate
      type: object
    RetentionFilterCreateData:
      description: The body of the retention filter to be created.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterCreateAttributes'
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
      - attributes
      - type
      type: object
    RetentionFilterCreateRequest:
      description: The body of the retention filter to be created.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterCreateData'
      required:
      - data
      type: object
    RetentionFilterResponse:
      description: The retention filters definition.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilter'
      type: object
    RetentionFilterType:
      default: spans-sampling-processor
      description: The type of retention filter. The value should always be spans-sampling-processor.
      enum:
      - spans-sampling-processor
      example: spans-sampling-processor
      type: string
      x-enum-varnames:
      - SPANS_SAMPLING_PROCESSOR
    RetentionFilterUpdateData:
      description: The body of the retention filter to be updated.
      properties:
        attributes:
          $ref: '#/components/schemas/RetentionFilterCreateAttributes'
        id:
          description: The ID of the retention filter.
          example: retention-filter-id
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
      - id
      - attributes
      - type
      type: object
    RetentionFilterUpdateRequest:
      description: The body of the retention filter to be updated.
      properties:
        data:
          $ref: '#/components/schemas/RetentionFilterUpdateData'
      required:
      - data
      type: object
    RetentionFilterWithoutAttributes:
      description: The retention filter object .
      properties:
        id:
          description: The ID of the retention filter.
          example: 7RBOb7dLSYWI01yc3pIH8w
          type: string
        type:
          $ref: '#/components/schemas/ApmRetentionFilterType'
      required:
      - id
      - type
      type: object
    RetentionFiltersResponse:
      description: An ordered list of retention filters.
      properties:
        data:
          description: A list of retention filters objects.
          items:
            $ref: '#/components/schemas/RetentionFilterAll'
          type: array
      required:
      - data
      type: object
    SpansFilter:
      description: The spans filter used to index spans.
      properties:
        query:
          description: The search query - following the [span search syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansFilterCreate:
      description: The spans filter. Spans matching this filter will be indexed and
        stored.
      properties:
        query:
          description: The search query - following the [span search syntax](https://docs.datadoghq.com/tracing/trace_explorer/query_syntax/).
          example: '@http.status_code:200 service:my-service'
          type: string
      required:
      - query
      type: object
    SpansMetricCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: The path to the value the span-based metric will aggregate
            on (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
      - aggregation_type
      type: object
    SpansMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
      - count
      - distribution
      example: distribution
      type: string
      x-enum-varnames:
      - COUNT
      - DISTRIBUTION
    SpansMetricComputeIncludePercentiles:
      description: 'Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.'
      example: false
      type: boolean
    SpansMetricCreateAttributes:
      description: The object describing the Datadog span-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      required:
      - compute
      type: object
    SpansMetricCreateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
      - id
      - type
      - attributes
      type: object
    SpansMetricCreateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricCreateData'
      required:
      - data
      type: object
    SpansMetricFilter:
      description: The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated
            over.
          example: resource_name
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: resource_name
          type: string
      required:
      - path
      type: object
    SpansMetricID:
      description: The name of the span-based metric.
      example: my.metric
      type: string
    SpansMetricResponse:
      description: The span-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricResponseData'
      type: object
    SpansMetricResponseAttributes:
      description: The object describing a Datadog span-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricResponseGroupBy'
          type: array
      type: object
    SpansMetricResponseCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/SpansMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
        path:
          description: The path to the value the span-based metric will aggregate
            on (only used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    SpansMetricResponseData:
      description: The span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/SpansMetricID'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      type: object
    SpansMetricResponseFilter:
      description: The span-based metric filter. Spans matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the span search syntax.
          example: '@http.status_code:200 service:my-service'
          type: string
      type: object
    SpansMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the span-based metric will be aggregated
            over.
          example: resource_name
          type: string
        tag_name:
          description: Eventual name of the tag that gets created. By default, the
            path attribute is used as the tag name.
          example: resource_name
          type: string
      type: object
    SpansMetricType:
      default: spans_metrics
      description: The type of resource. The value should always be spans_metrics.
      enum:
      - spans_metrics
      example: spans_metrics
      type: string
      x-enum-varnames:
      - SPANS_METRICS
    SpansMetricUpdateAttributes:
      description: The span-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/SpansMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/SpansMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/SpansMetricGroupBy'
          type: array
      type: object
    SpansMetricUpdateCompute:
      description: The compute rule to compute the span-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/SpansMetricComputeIncludePercentiles'
      type: object
    SpansMetricUpdateData:
      description: The new span-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/SpansMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/SpansMetricType'
      required:
      - type
      - attributes
      type: object
    SpansMetricUpdateRequest:
      description: The new span-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/SpansMetricUpdateData'
      required:
      - data
      type: object
    SpansMetricsResponse:
      description: All the available span-based metric objects.
      properties:
        data:
          description: A list of span-based metric objects.
          items:
            $ref: '#/components/schemas/SpansMetricResponseData'
          type: array
      type: object
    UsageApplicationSecurityMonitoringResponse:
      description: Application Security Monitoring usage response.
      properties:
        data:
          description: Response containing Application Security Monitoring usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageAttributesObject:
      description: Usage attributes data.
      properties:
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs
            to.
          type: string
        timeseries:
          description: List of usage data reported for each requested hour.
          items:
            $ref: '#/components/schemas/UsageTimeSeriesObject'
          type: array
        usage_type:
          $ref: '#/components/schemas/HourlyUsageType'
      type: object
    UsageDataObject:
      description: Usage data.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageAttributesObject'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    UsageLambdaTracedInvocationsResponse:
      description: Lambda Traced Invocations usage response.
      properties:
        data:
          description: Response containing Lambda Traced Invocations usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageObservabilityPipelinesResponse:
      description: Observability Pipelines usage response.
      properties:
        data:
          description: Response containing Observability Pipelines usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageTimeSeriesObject:
      description: Usage timeseries data.
      properties:
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
        value:
          description: Contains the number measured for the given usage_type during
            the hour.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageTimeSeriesType:
      default: usage_timeseries
      description: Type of usage data.
      enum:
      - usage_timeseries
      example: usage_timeseries
      type: string
      x-enum-varnames:
      - USAGE_TIMESERIES
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: Add, modify, and delete service catalog definitions
              when those definitions are maintained by Datadog.
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using
              the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share
              dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification
              settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: Create, view, and manage incidents in Datadog.
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in
              an organization. Mute and unmute hosts. The ability to write monitors
              is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit, mute, and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: Create, edit, and delete Security Filters.
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: Apply, edit, and delete SLO status corrections. A user
              with this permission can make status corrections, even if they do not
              have permission to edit those SLOs.
            slos_read: View SLOs and status corrections.
            slos_write: Create, edit, and delete SLOs.
            synthetics_global_variable_read: View, search, and use Synthetics global
              variables.
            synthetics_global_variable_write: Create, edit, and delete global variables
              for Synthetics.
            synthetics_private_location_read: View, search, and use Synthetics private
              locations.
            synthetics_private_location_write: Create and delete private locations
              in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: Create, edit, and delete Synthetic tests.
            teams_manage: Manage Teams. Create, delete, rename, and edit metadata
              of all Teams. To control Team membership across all Teams, use the User
              Access Manage permission.
            teams_read: Read Teams data. A User with this permission can view Team
              names, metadata, and which Users are on each Team.
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: Disable users, manage user roles, manage SAML-to-role
              mappings, and configure logs restriction queries.
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: https://www.datadoghq.com/support/
  description: Collection of all Datadog Public endpoints.
  title: Datadog API V2 Collection
  version: '1.0'
openapi: 3.0.0
paths:
  /api/v2/apm/config/metrics:
    get:
      description: Get the list of configured span-based metrics with their definitions.
      operationId: ListSpansMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all span-based metrics
      tags:
      - Spans Metrics
    post:
      description: 'Create a metric based on your ingested spans in your organization.

        Returns the span-based metric object from the request body when the request
        is successful.'
      operationId: CreateSpansMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricCreateRequest'
        description: The definition of the new span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a span-based metric
      tags:
      - Spans Metrics
      x-codegen-request-body-name: body
  /api/v2/apm/config/metrics/{metric_id}:
    delete:
      description: Delete a specific span-based metric from your organization.
      operationId: DeleteSpansMetric
      parameters:
      - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a span-based metric
      tags:
      - Spans Metrics
    get:
      description: Get a specific span-based metric from your organization.
      operationId: GetSpansMetric
      parameters:
      - $ref: '#/components/parameters/SpansMetricIDParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a span-based metric
      tags:
      - Spans Metrics
    patch:
      description: 'Update a specific span-based metric from your organization.

        Returns the span-based metric object from the request body when the request
        is successful.'
      operationId: UpdateSpansMetric
      parameters:
      - $ref: '#/components/parameters/SpansMetricIDParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpansMetricUpdateRequest'
        description: New definition of the span-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpansMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a span-based metric
      tags:
      - Spans Metrics
      x-codegen-request-body-name: body
  /api/v2/apm/config/retention-filters:
    get:
      description: Get the list of APM retention filters.
      operationId: ListApmRetentionFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFiltersResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all APM retention filters
      tags:
      - APM Retention Filters
    post:
      description: 'Create a retention filter to index spans in your organization.

        Returns the retention filter definition when the request is successful.'
      operationId: CreateApmRetentionFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterCreateRequest'
        description: The definition of the new retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a retention filter
      tags:
      - APM Retention Filters
      x-codegen-request-body-name: body
  /api/v2/apm/config/retention-filters-execution-order:
    put:
      description: Re-order the execution order of retention filters.
      operationId: ReorderApmRetentionFilters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderRetentionFiltersRequest'
        description: The list of retention filters in the new order.
        required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Re-order retention filters
      tags:
      - APM Retention Filters
      x-codegen-request-body-name: body
  /api/v2/apm/config/retention-filters/{filter_id}:
    delete:
      description: Delete a specific retention filter from your organization.
      operationId: DeleteApmRetentionFilter
      parameters:
      - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a retention filter
      tags:
      - APM Retention Filters
    get:
      description: Get an APM retention filter.
      operationId: GetApmRetentionFilter
      parameters:
      - $ref: '#/components/parameters/RetentionFilterIdParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a given APM retention filter
      tags:
      - APM Retention Filters
    put:
      description: Update a retention filter from your organization.
      operationId: UpdateApmRetentionFilter
      parameters:
      - $ref: '#/components/parameters/RetentionFilterIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetentionFilterUpdateRequest'
        description: The updated definition of the retention filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetentionFilterResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a retention filter
      tags:
      - APM Retention Filters
      x-codegen-request-body-name: body
  /api/v2/audit/events:
    get:
      description: 'List endpoint returns events that match a Audit Logs search query.

        [Results are paginated][1].


        Use this endpoint to see your latest Audit Logs events.


        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'
      operationId: ListAuditLogs
      parameters:
      - description: Search query following Audit Logs syntax.
        example: '@type:session @application_id:xxxx'
        in: query
        name: filter[query]
        required: false
        schema:
          type: string
      - description: Minimum timestamp for requested events.
        example: '2019-01-02T09:42:36.320Z'
        in: query
        name: filter[from]
        required: false
        schema:
          format: date-time
          type: string
      - description: Maximum timestamp for requested events.
        example: '2019-01-03T09:42:36.320Z'
        in: query
        name: filter[to]
        required: false
        schema:
          format: date-time
          type: string
      - description: Order of events in results.
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/AuditLogsSort'
      - description: List following results with a cursor provided in the previous
          query.
        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        in: query
        name: page[cursor]
        required: false
        schema:
          type: string
      - description: Maximum number of events in the response.
        example: 25
        in: query
        name: page[limit]
        required: false
        schema:
          default: 10
          format: int32
          maximum: 1000
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a list of Audit Logs events
      tags:
      - Audit
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
  /api/v2/audit/events/search:
    post:
      description: 'List endpoint returns Audit Logs events that match an Audit search
        query.

        [Results are paginated][1].


        Use this endpoint to build complex Audit Logs events filtering and search.


        [1]: https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination'
      operationId: SearchAuditLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogsSearchEventsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search Audit Logs events
      tags:
      - Audit
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    delete:
      description: Delete dashboards from an existing dashboard list.
      operationId: DeleteDashboardListItems
      parameters:
      - description: ID of the dashboard list to delete items from.
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListDeleteItemsRequest'
        description: Dashboards to delete from the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete items from a dashboard list
      tags:
      - Dashboard Lists
      x-codegen-request-body-name: body
    get:
      description: "Fetch the dashboard list\u2019s dashboard definitions."
      operationId: GetDashboardListItems
      parameters:
      - description: ID of the dashboard list to get items from.
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - dashboards_read
      summary: Get items of a Dashboard List
      tags:
      - Dashboard Lists
    post:
      description: Add dashboards to an existing dashboard list.
      operationId: CreateDashboardListItems
      parameters:
      - description: ID of the dashboard list to add items to.
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListAddItemsRequest'
        description: Dashboards to add to the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListAddItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Items to a Dashboard List
      tags:
      - Dashboard Lists
      x-codegen-request-body-name: body
    put:
      description: Update dashboards of an existing dashboard list.
      operationId: UpdateDashboardListItems
      parameters:
      - description: ID of the dashboard list to update items from.
        in: path
        name: dashboard_list_id
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListUpdateItemsRequest'
        description: New dashboards of the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListUpdateItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update items of a dashboard list
      tags:
      - Dashboard Lists
      x-codegen-request-body-name: body
  /api/v2/events:
    get:
      description: 'List endpoint returns events that match an events search query.

        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to see your latest events.'
      operationId: ListEvents
      parameters:
      - description: Search query following events syntax.
        in: query
        name: filter[query]
        required: false
        schema:
          type: string
      - description: Minimum timestamp for requested events.
        in: query
        name: filter[from]
        required: false
        schema:
          type: string
      - description: Maximum timestamp for requested events.
        in: query
        name: filter[to]
        required: false
        schema:
          type: string
      - description: Order of events in results.
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/EventsSort'
      - description: List following results with a cursor provided in the previous
          query.
        example: eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
        in: query
        name: page[cursor]
        required: false
        schema:
          type: string
      - description: Maximum number of events in the response.
        example: 25
        in: query
        name: page[limit]
        required: false
        schema:
          default: 10
          format: int32
          maximum: 1000
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - events_read
      summary: Get a list of events
      tags:
      - Events
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-unstable: '**Note**: This endpoint is in beta.

        For access, contact [Datadog support](https://docs.datadoghq.com/help/).'
  /api/v2/events/search:
    post:
      description: 'List endpoint returns events that match an events search query.

        [Results are paginated similarly to logs](https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination).


        Use this endpoint to build complex events filtering and search.'
      operationId: SearchEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventsListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - events_read
      summary: Search events
      tags:
      - Events
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-unstable: '**Note**: This endpoint is in beta.

        For access, contact [Datadog support](https://docs.datadoghq.com/help/).'
  /api/v2/integration/gcp/accounts:
    get:
      description: List all GCP STS-enabled service accounts configured in your Datadog
        account.
      operationId: ListGCPSTSAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all GCP STS-enabled service accounts
      tags:
      - GCP Integration
    post:
      description: Create a new entry within Datadog for your STS enabled service
        account.
      operationId: CreateGCPSTSAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPSTSServiceAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new entry for your service account
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
  /api/v2/integration/gcp/accounts/{account_id}:
    delete:
      description: Delete an STS enabled GCP account from within Datadog.
      operationId: DeleteGCPSTSAccount
      parameters:
      - $ref: '#/components/parameters/GCPSTSServiceAccountID'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an STS enabled GCP Account
      tags:
      - GCP Integration
    patch:
      description: Update an STS enabled service account.
      operationId: UpdateGCPSTSAccount
      parameters:
      - $ref: '#/components/parameters/GCPSTSServiceAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPSTSServiceAccountUpdateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSServiceAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update STS Service Account
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
  /api/v2/integration/gcp/sts_delegate:
    get:
      description: List your Datadog-GCP STS delegate account configured in your Datadog
        account.
      operationId: GetGCPSTSDelegate
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSDelegateAccountResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List delegate account
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
    post:
      description: Create a Datadog GCP principal.
      operationId: MakeGCPSTSDelegate
      requestBody:
        content:
          application/json:
            schema:
              example: {}
              type: object
        description: Create a delegate service account within Datadog.
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPSTSDelegateAccountResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Datadog GCP principal
      tags:
      - GCP Integration
      x-codegen-request-body-name: body
  /api/v2/integration/opsgenie/services:
    get:
      description: Get a list of all services from the Datadog Opsgenie integration.
      operationId: ListOpsgenieServices
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServicesResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all service objects
      tags:
      - Opsgenie Integration
    post:
      description: Create a new service object in the Opsgenie integration.
      operationId: CreateOpsgenieService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpsgenieServiceCreateRequest'
        description: Opsgenie service payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new service object
      tags:
      - Opsgenie Integration
      x-codegen-request-body-name: body
  /api/v2/integration/opsgenie/services/{integration_service_id}:
    delete:
      description: Delete a single service object in the Datadog Opsgenie integration.
      operationId: DeleteOpsgenieService
      parameters:
      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a single service object
      tags:
      - Opsgenie Integration
    get:
      description: Get a single service from the Datadog Opsgenie integration.
      operationId: GetOpsgenieService
      parameters:
      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a single service object
      tags:
      - Opsgenie Integration
    patch:
      description: Update a single service object in the Datadog Opsgenie integration.
      operationId: UpdateOpsgenieService
      parameters:
      - $ref: '#/components/parameters/OpsgenieServiceIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpsgenieServiceUpdateRequest'
        description: Opsgenie service payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpsgenieServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a single service object
      tags:
      - Opsgenie Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/cloudflare/accounts:
    get:
      description: List Cloudflare accounts.
      operationId: ListCloudflareAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Cloudflare accounts
      tags:
      - Cloudflare Integration
    post:
      description: Create a Cloudflare account.
      operationId: CreateCloudflareAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudflareAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Cloudflare account
      tags:
      - Cloudflare Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/cloudflare/accounts/{account_id}:
    delete:
      description: Delete a Cloudflare account.
      operationId: DeleteCloudflareAccount
      parameters:
      - description: None
        in: path
        name: account_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Cloudflare account
      tags:
      - Cloudflare Integration
    get:
      description: Get a Cloudflare account.
      operationId: GetCloudflareAccount
      parameters:
      - description: None
        in: path
        name: account_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Cloudflare account
      tags:
      - Cloudflare Integration
    patch:
      description: Update a Cloudflare account.
      operationId: UpdateCloudflareAccount
      parameters:
      - description: None
        in: path
        name: account_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudflareAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudflareAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Cloudflare account
      tags:
      - Cloudflare Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/confluent-cloud/accounts:
    get:
      description: List Confluent accounts.
      operationId: ListConfluentAccount
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Confluent accounts
      tags:
      - Confluent Cloud
    post:
      description: Create a Confluent account.
      operationId: CreateConfluentAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentAccountCreateRequest'
        description: Confluent payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Confluent account
      tags:
      - Confluent Cloud
      x-codegen-request-body-name: body
  /api/v2/integrations/confluent-cloud/accounts/{account_id}:
    delete:
      description: Delete a Confluent account with the provided account ID.
      operationId: DeleteConfluentAccount
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Confluent account
      tags:
      - Confluent Cloud
    get:
      description: Get the Confluent account with the provided account ID.
      operationId: GetConfluentAccount
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Confluent account
      tags:
      - Confluent Cloud
    patch:
      description: Update the Confluent account with the provided account ID.
      operationId: UpdateConfluentAccount
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentAccountUpdateRequest'
        description: Confluent payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Confluent account
      tags:
      - Confluent Cloud
      x-codegen-request-body-name: body
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources:
    get:
      description: Get a Confluent resource for the account associated with the provided
        ID.
      operationId: ListConfluentResource
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourcesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Confluent Account resources
      tags:
      - Confluent Cloud
    post:
      description: Create a Confluent resource for the account associated with the
        provided ID.
      operationId: CreateConfluentResource
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentResourceRequest'
        description: Confluent payload
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add resource to Confluent account
      tags:
      - Confluent Cloud
      x-codegen-request-body-name: body
  /api/v2/integrations/confluent-cloud/accounts/{account_id}/resources/{resource_id}:
    delete:
      description: Delete a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      operationId: DeleteConfluentResource
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      - $ref: '#/components/parameters/ConfluentResourceID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete resource from Confluent account
      tags:
      - Confluent Cloud
    get:
      description: Get a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      operationId: GetConfluentResource
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      - $ref: '#/components/parameters/ConfluentResourceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get resource from Confluent account
      tags:
      - Confluent Cloud
    patch:
      description: Update a Confluent resource with the provided resource id for the
        account associated with the provided account ID.
      operationId: UpdateConfluentResource
      parameters:
      - $ref: '#/components/parameters/ConfluentAccountID'
      - $ref: '#/components/parameters/ConfluentResourceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfluentResourceRequest'
        description: Confluent payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfluentResourceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update resource in Confluent account
      tags:
      - Confluent Cloud
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
        - STANDARD
  /api/v2/integrations/fastly/accounts:
    get:
      description: List Fastly accounts.
      operationId: ListFastlyAccounts
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Fastly accounts
      tags:
      - Fastly Integration
    post:
      description: Create a Fastly account.
      operationId: CreateFastlyAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Fastly account
      tags:
      - Fastly Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/fastly/accounts/{account_id}:
    delete:
      description: Delete a Fastly account.
      operationId: DeleteFastlyAccount
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Fastly account
      tags:
      - Fastly Integration
    get:
      description: Get a Fastly account.
      operationId: GetFastlyAccount
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Fastly account
      tags:
      - Fastly Integration
    patch:
      description: Update a Fastly account.
      operationId: UpdateFastlyAccount
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyAccountUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyAccountResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Fastly account
      tags:
      - Fastly Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/fastly/accounts/{account_id}/services:
    get:
      description: List Fastly services for an account.
      operationId: ListFastlyServices
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServicesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Fastly services
      tags:
      - Fastly Integration
    post:
      description: Create a Fastly service for an account.
      operationId: CreateFastlyService
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyServiceRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Fastly service
      tags:
      - Fastly Integration
      x-codegen-request-body-name: body
  /api/v2/integrations/fastly/accounts/{account_id}/services/{service_id}:
    delete:
      description: Delete a Fastly service for an account.
      operationId: DeleteFastlyService
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      - $ref: '#/components/parameters/FastlyServiceID'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete Fastly service
      tags:
      - Fastly Integration
    get:
      description: Get a Fastly service for an account.
      operationId: GetFastlyService
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      - $ref: '#/components/parameters/FastlyServiceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get Fastly service
      tags:
      - Fastly Integration
    patch:
      description: Update a Fastly service for an account.
      operationId: UpdateFastlyService
      parameters:
      - $ref: '#/components/parameters/FastlyAccountID'
      - $ref: '#/components/parameters/FastlyServiceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FastlyServiceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FastlyServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update Fastly service
      tags:
      - Fastly Integration
      x-codegen-request-body-name: body
  /api/v2/ip_allowlist:
    get:
      description: Returns the IP allowlist and its enabled or disabled state.
      operationId: GetIPAllowlist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get IP Allowlist
      tags:
      - IP Allowlist
    patch:
      description: Edit the entries in the IP allowlist, and enable or disable it.
      operationId: UpdateIPAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAllowlistUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update IP Allowlist
      tags:
      - IP Allowlist
      x-codegen-request-body-name: body
  /api/v2/logs:
    post:
      description: 'Send your logs to your Datadog platform over HTTP. Limits per
        HTTP request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns a
        2xx.

        - For a multi-logs request, the API processes all logs, truncates only logs
        larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending compressed
        logs.

        Log events can be submitted with a timestamp that is up to 18 hours in the
        past.


        The status codes answered by the HTTP API are:

        - 202: Accepted: the request has been accepted for processing

        - 400: Bad request (likely an issue in the payload formatting)

        - 401: Unauthorized (likely a missing API Key)

        - 403: Permission issue (likely using an invalid API Key)

        - 408: Request Timeout, request should be retried after some time

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 429: Too Many Requests, request should be retried after some time

        - 500: Internal Server Error, the server encountered an unexpected condition
        that prevented it from fulfilling the request, request should be retried after
        some time

        - 503: Service Unavailable, the server is not ready to handle the request
        probably because it is overloaded, request should be retried after some time'
      operationId: SubmitLog
      parameters:
      - description: HTTP header used to compress the media-type.
        in: header
        name: Content-Encoding
        required: false
        schema:
          $ref: '#/components/schemas/ContentEncoding'
      - description: Log tags can be passed as query parameters with `text/plain`
          content type.
        example: env:prod,user:my-user
        in: query
        name: ddtags
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                - ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345678
                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  service: payment
                - ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345679
                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World
                  service: payment
              simple-json-message:
                description: Log attributes can be passed as `key:value` pairs in
                  valid JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345678
                  message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                    World
                  service: payment
            schema:
              $ref: '#/components/schemas/HTTPLog'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: '2019-11-19T14:37:58,995 INFO [process.name][20081] Hello

                  2019-11-19T14:37:58,995 INFO [process.name][20081] World'
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: '2019-11-19T14:37:58,995 INFO [process.name][20081] Hello

                  2019-11-19T14:37:58,995 INFO [process.name][20081] World

                  '
              simple-raw-message:
                description: 'Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or the
                  source by using the `ddtags` and `ddsource` parameters: `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.'
                summary: Simple Raw Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
          description: Request accepted for processing (always 202 empty JSON).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Forbidden
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Request Timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Payload Too Large
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Too Many Requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Service Unavailable
      security:
      - apiKeyAuth: []
      servers:
      - url: https://{subdomain}.{site}
        variables:
          site:
            default: datadoghq.com
            description: The regional site for customers.
            enum:
            - datadoghq.com
            - us3.datadoghq.com
            - us5.datadoghq.com
            - ap1.datadoghq.com
            - datadoghq.eu
            - ddog-gov.com
          subdomain:
            default: http-intake.logs
            description: The subdomain where the API is deployed.
      - url: '{protocol}://{name}'
        variables:
          name:
            default: http-intake.logs.datadoghq.com
            description: Full site DNS name.
          protocol:
            default: https
            description: The protocol for accessing the API.
      - url: https://{subdomain}.{site}
        variables:
          site:
            default: datadoghq.com
            description: Any Datadog deployment.
          subdomain:
            default: http-intake.logs
            description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
      - Logs
      x-codegen-request-body-name: body
  /api/v2/logs/config/metrics:
    get:
      description: Get the list of configured log-based metrics with their definitions.
      operationId: ListLogsMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get all log-based metrics
      tags:
      - Logs Metrics
    post:
      description: 'Create a metric based on your ingested logs in your organization.

        Returns the log-based metric object from the request body when the request
        is successful.'
      operationId: CreateLogsMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricCreateRequest'
        description: The definition of the new log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a log-based metric
      tags:
      - Logs Metrics
      x-codegen-request-body-name: body
  /api/v2/logs/config/metrics/{metric_id}:
    delete:
      description: Delete a specific log-based metric from your organization.
      operationId: DeleteLogsMetric
      parameters:
      - $ref: '#/components/parameters/MetricID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a log-based metric
      tags:
      - Logs Metrics
    get:
      description: Get a specific log-based metric from your organization.
      operationId: GetLogsMetric
      parameters:
      - $ref: '#/components/parameters/MetricID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get a log-based metric
      tags:
      - Logs Metrics
    patch:
      description: 'Update a specific log-based metric from your organization.

        Returns the log-based metric object from the request body when the request
        is successful.'
      operationId: UpdateLogsMetric
      parameters:
      - $ref: '#/components/parameters/MetricID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricUpdateRequest'
        description: New definition of the log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a log-based metric
      tags:
      - Logs Metrics
      x-codegen-request-body-name: body
  /api/v2/permissions:
    get:
      description: Returns a list of all permissions, including name, description,
        and ID.
      operationId: ListPermissions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - user_access_read
      summary: List permissions
      tags:
      - Roles
  /api/v2/posture_management/findings:
    get:
      description: "Get a list of CSPM findings.\n\n### Filtering\n\nFilters can be
        applied by appending query parameters to the URL.\n\n  - Using a single filter:
        `?filter[attribute_key]=attribute_value`\n  - Chaining filters: `?filter[attribute_key]=attribute_value&filter[attribute_key]=attribute_value...`\n
        \ - Filtering on tags: `?filter[tags]=tag_key:tag_value&filter[tags]=tag_key_2:tag_value_2`\n\nHere,
        `attribute_key` can be any of the filter keys described further below.\n\nQuery
        parameters of type `integer` support comparison operators (`>`, `>=`, `<`,
        `<=`). This is particularly useful when filtering by `evaluation_changed_at`
        or `resource_discovery_timestamp`. For example: `?filter[evaluation_changed_at]=>20123123121`.\n\nYou
        can also use the negation operator on strings. For example, use `filter[resource_type]=-aws*`
        to filter for any non-AWS resources.\n\nThe operator must come after the equal
        sign. For example, to filter with the `>=` operator, add the operator after
        the equal sign: `filter[evaluation_changed_at]=>=1678809373257`.\n\nQuery
        parameters must be only among the documented ones and with values of correct
        types. Duplicated query parameters (e.g. `filter[status]=low&filter[status]=info`)
        are not allowed.\n\n### Response\n\nThe response includes an array of finding
        objects, pagination metadata, and a count of items that match the query.\n\nEach
        finding object contains the following:\n\n- The finding ID that can be used
        in a `GetFinding` request to retrieve the full finding details.\n- Core attributes,
        including status, evaluation, high-level resource details, muted state, and
        rule details.\n- `evaluation_changed_at` and `resource_discovery_date` time
        stamps.\n- An array of associated tags.\n"
      operationId: ListFindings
      parameters:
      - description: Limit the number of findings returned. Must be <= 1000.
        example: 50
        in: query
        name: page[limit]
        required: false
        schema:
          default: 100
          format: int64
          maximum: 1000
          minimum: 1
          type: integer
      - description: Return findings for a given snapshot of time (Unix ms).
        example: 1678721573794
        in: query
        name: snapshot_timestamp
        required: false
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Return the next page of findings pointed to by the cursor.
        example: eyJhZnRlciI6IkFRQUFBWWJiaEJXQS1OY1dqUUFBQUFCQldXSmlhRUpYUVVGQlJFSktkbTlDTUdaWFRVbDNRVUUiLCJ2YWx1ZXMiOlsiY3JpdGljYWwiXX0=
        in: query
        name: page[cursor]
        required: false
        schema:
          type: string
      - description: Return findings that have these associated tags (repeatable).
        example: filter[tags]=cloud_provider:aws&filter[tags]=aws_account:999999999999
        in: query
        name: filter[tags]
        required: false
        schema:
          type: string
      - description: Return findings that have changed from pass to fail or vice versa
          on a specified date (Unix ms) or date range (using comparison operators).
        example: '>=1678721573794'
        in: query
        name: filter[evaluation_changed_at]
        required: false
        schema:
          type: string
      - description: Set to `true` to return findings that are muted. Set to `false`
          to return unmuted findings.
        in: query
        name: filter[muted]
        required: false
        schema:
          type: boolean
      - description: Return findings for the specified rule ID.
        in: query
        name: filter[rule_id]
        required: false
        schema:
          type: string
      - description: Return findings for the specified rule.
        in: query
        name: filter[rule_name]
        required: false
        schema:
          type: string
      - description: Return only findings for the specified resource type.
        in: query
        name: filter[resource_type]
        required: false
        schema:
          type: string
      - description: Return findings that were found on a specified date (Unix ms)
          or date range (using comparison operators).
        example: '>=1678721573794'
        in: query
        name: filter[discovery_timestamp]
        required: false
        schema:
          type: string
      - description: Return only `pass` or `fail` findings.
        example: pass
        in: query
        name: filter[evaluation]
        required: false
        schema:
          $ref: '#/components/schemas/FindingEvaluation'
      - description: Return only findings with the specified status.
        example: critical
        in: query
        name: filter[status]
        required: false
        schema:
          $ref: '#/components/schemas/FindingStatus'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFindingsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - security_monitoring_findings_read
      summary: List findings
      tags:
      - Security Monitoring
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.cursor
        limitParam: page[limit]
        resultsPath: data
      x-unstable: '**Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'
  /api/v2/posture_management/findings/{finding_id}:
    get:
      description: Returns a single finding with message and resource configuration.
      operationId: GetFinding
      parameters:
      - description: The ID of the finding.
        in: path
        name: finding_id
        required: true
        schema:
          type: string
      - description: Return the finding for a given snapshot of time (Unix ms).
        example: 1678721573794
        in: query
        name: snapshot_timestamp
        required: false
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFindingResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - security_monitoring_findings_read
      summary: Get a finding
      tags:
      - Security Monitoring
      x-unstable: '**Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'
    patch:
      description: 'Mute or unmute a specific finding.

        The API returns the updated finding object when the request is successful.'
      operationId: UpdateFinding
      parameters:
      - description: The ID of the finding.
        in: path
        name: finding_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteFindingRequest'
        description: 'To mute or unmute a finding, the request body should include
          at least two attributes: `muted` and `reason`. The allowed reasons depend
          on whether the finding is being muted or unmuted:

          - To mute a finding: `PENDING_FIX`, `FALSE_POSITIVE`, `ACCEPTED_RISK`, `OTHER`.

          - To unmute a finding : `NO_PENDING_FIX`, `HUMAN_ERROR`, `NO_LONGER_ACCEPTED_RISK`,
          `OTHER`.

          '
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteFindingResponse'
          description: OK
        '400':
          $ref: '#/components/responses/FindingsBadRequestResponse'
        '403':
          $ref: '#/components/responses/FindingsForbiddenResponse'
        '404':
          $ref: '#/components/responses/FindingsNotFoundResponse'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Resource Conflict: The finding has already been muted or unmuted
            within the last 60 seconds.'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: 'Invalid Request: The server understands the request syntax
            but cannot process it due to invalid data.'
        '429':
          $ref: '#/components/responses/FindingsTooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      summary: Mute or unmute a finding
      tags:
      - Security Monitoring
      x-codegen-request-body-name: body
      x-unstable: '**Note**: This endpoint is in public beta.

        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).'
  /api/v2/processes:
    get:
      description: Get all processes for your organization.
      operationId: ListProcesses
      parameters:
      - description: String to search processes by.
        in: query
        name: search
        required: false
        schema:
          type: string
      - description: Comma-separated list of tags to filter processes by.
        example: account:prod,user:admin
        in: query
        name: tags
        required: false
        schema:
          type: string
      - description: 'Unix timestamp (number of seconds since epoch) of the start
          of the query window.

          If not provided, the start of the query window will be 15 minutes before
          the `to` timestamp. If neither

          `from` nor `to` are provided, the query window will be `[now - 15m, now]`.'
        in: query
        name: from
        required: false
        schema:
          format: int64
          type: integer
      - description: 'Unix timestamp (number of seconds since epoch) of the end of
          the query window.

          If not provided, the end of the query window will be 15 minutes after the
          `from` timestamp. If neither

          `from` nor `to` are provided, the query window will be `[now - 15m, now]`.'
        in: query
        name: to
        required: false
        schema:
          format: int64
          type: integer
      - description: Maximum number of results returned.
        in: query
        name: page[limit]
        required: false
        schema:
          default: 1000
          format: int32
          maximum: 10000
          minimum: 1
          type: integer
      - description: 'String to query the next page of results.

          This key is provided with each valid response from the API in `meta.page.after`.'
        in: query
        name: page[cursor]
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessSummariesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ: []
      summary: Get all processes
      tags:
      - Processes
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
  /api/v2/restriction_policy/{resource_id}:
    delete:
      description: Deletes the restriction policy associated with a specified resource.
      operationId: DeleteRestrictionPolicy
      parameters:
      - $ref: '#/components/parameters/ResourceID'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      summary: Delete a restriction policy
      tags:
      - Restriction Policies
    get:
      description: Retrieves the restriction policy associated with a specified resource.
      operationId: GetRestrictionPolicy
      parameters:
      - $ref: '#/components/parameters/ResourceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      summary: Get a restriction policy
      tags:
      - Restriction Policies
    post:
      description: 'Updates the restriction policy associated with a resource.


        #### Supported resources

        Restriction policies can be applied to the following resources:

        - Connections: `connection`

        - Dashboards: `dashboard`

        - Notebooks: `notebook`

        - Security Rules: `security-rule`

        - Service Level Objectives: `slo`


        #### Supported relations for resources

        Resource Type            | Supported Relations

        -------------------------|--------------------------

        Connections              | `viewer`, `editor`, `resolver`

        Dashboards               | `viewer`, `editor`

        Notebooks                | `viewer`, `editor`

        Security Rules           | `viewer`, `editor`

        Service Level Objectives | `viewer`, `editor`'
      operationId: UpdateRestrictionPolicy
      parameters:
      - $ref: '#/components/parameters/ResourceID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionPolicyUpdateRequest'
        description: Restriction policy payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      summary: Update a restriction policy
      tags:
      - Restriction Policies
      x-codegen-request-body-name: body
  /api/v2/saml_configurations/idp_metadata:
    post:
      description: 'Endpoint for uploading IdP metadata for SAML setup.


        Use this endpoint to upload or replace IdP metadata for SAML login configuration.'
      operationId: UploadIdPMetadata
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdPMetadataFormData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Upload IdP metadata
      tags:
      - Organizations
      x-codegen-request-body-name: body
  /api/v2/security/cloud_workload/policy/download:
    get:
      description: 'The download endpoint generates a Cloud Workload Security policy
        file from your currently active

        Cloud Workload Security rules, and downloads them as a .policy file. This
        file can then be deployed to

        your Agents to update the policy running in your environment.'
      operationId: DownloadCloudWorkloadPolicyFile
      responses:
        '200':
          content:
            application/yaml:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the latest Cloud Workload Security policy
      tags:
      - Cloud Workload Security
  /api/v2/security_monitoring/cloud_workload_security/agent_rules:
    get:
      description: Get the list of Agent rules.
      operationId: ListCloudWorkloadSecurityAgentRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRulesListResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all Cloud Workload Security Agent rules
      tags:
      - Cloud Workload Security
    post:
      description: Create a new Agent rule with the given parameters.
      operationId: CreateCloudWorkloadSecurityAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateRequest'
        description: The definition of the new Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Cloud Workload Security Agent rule
      tags:
      - Cloud Workload Security
      x-codegen-request-body-name: body
  /api/v2/security_monitoring/cloud_workload_security/agent_rules/{agent_rule_id}:
    delete:
      description: Delete a specific Agent rule.
      operationId: DeleteCloudWorkloadSecurityAgentRule
      parameters:
      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a Cloud Workload Security Agent rule
      tags:
      - Cloud Workload Security
    get:
      description: Get the details of a specific Agent rule.
      operationId: GetCloudWorkloadSecurityAgentRule
      parameters:
      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a Cloud Workload Security Agent rule
      tags:
      - Cloud Workload Security
    patch:
      description: 'Update a specific Agent rule.

        Returns the Agent rule object when the request is successful.'
      operationId: UpdateCloudWorkloadSecurityAgentRule
      parameters:
      - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateRequest'
        description: New definition of the Agent rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a Cloud Workload Security Agent rule
      tags:
      - Cloud Workload Security
      x-codegen-request-body-name: body
  /api/v2/series:
    post:
      description: "The metrics end-point allows you to post time-series data that
        can be graphed on Datadog\u2019s dashboards.\nThe maximum payload size is
        500 kilobytes (512000 bytes). Compressed payloads must have a decompressed
        size of less than 5 megabytes (5242880 bytes).\n\nIf you\u2019re submitting
        metrics directly to the Datadog API without using DogStatsD, expect:\n\n-
        64 bits for the timestamp\n- 64 bits for the value\n- 20 bytes for the metric
        names\n- 50 bytes for the timeseries\n- The full payload is approximately
        100 bytes.\n\nHost name is one of the resources in the Resources field."
      operationId: SubmitMetrics
      parameters:
      - description: HTTP header used to compress the media-type.
        in: header
        name: Content-Encoding
        required: false
        schema:
          $ref: '#/components/schemas/MetricContentEncoding'
      requestBody:
        content:
          application/json:
            examples:
              dynamic-points:
                description: "Post time-series data that can be graphed on Datadog\u2019s
                  dashboards."
                externalValue: examples/metrics/dynamic-points.json.sh
                summary: Dynamic Points
                x-variables:
                  NOW: $(date +%s)
            schema:
              $ref: '#/components/schemas/MetricPayload'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntakePayloadAccepted'
          description: Payload accepted
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Request timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Payload too large
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
      - apiKeyAuth: []
      summary: Submit metrics
      tags:
      - Metrics
      x-codegen-request-body-name: body
  /api/v2/synthetics/settings/on_demand_concurrency_cap:
    get:
      description: Get the on-demand concurrency cap.
      operationId: GetOnDemandConcurrencyCap
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the on-demand concurrency cap
      tags:
      - Synthetics
    post:
      description: Save new value for on-demand concurrency cap.
      operationId: SetOnDemandConcurrencyCap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        description: .
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Save new value for on-demand concurrency cap
      tags:
      - Synthetics
      x-codegen-request-body-name: body
  /api/v2/usage/application_security:
    get:
      description: 'Get hourly usage for application security .

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'
      operationId: GetUsageApplicationSecurityMonitoring
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageApplicationSecurityMonitoringResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for application security
      tags:
      - Usage Metering
  /api/v2/usage/cost_by_org:
    get:
      deprecated: true
      description: 'Get cost across multi-org account.

        Cost by org data for a given month becomes available no later than the 16th
        of the following month.

        **Note:** This endpoint has been deprecated. Please use the new endpoint

        [`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)

        instead.'
      operationId: GetCostByOrg
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost beginning this month.'
        in: query
        name: start_month
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get cost across multi-org account
      tags:
      - Usage Metering
  /api/v2/usage/estimated_cost:
    get:
      description: 'Get estimated cost across multi-org and single root-org accounts.

        Estimated cost data is only available for the current month and previous month

        and is delayed by up to 72 hours from when it was incurred.

        To access historical costs prior to this, use the `/historical_cost` endpoint.'
      operationId: GetEstimatedCostByOrg
      parameters:
      - description: String to specify whether cost is broken down at a parent-org
          level or at the sub-org level. Available views are `summary` and `sub-org`.
          Defaults to `summary`.
        in: query
        name: view
        required: false
        schema:
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost beginning this month. Either start_month or start_date should be
          specified, but not both. (start_month cannot go beyond two months in the
          past). Provide an `end_month` to view month-over-month cost.'
        in: query
        name: start_month
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]`
          for cost beginning this day. Either start_month or start_date should be
          specified, but not both. (start_date cannot go beyond two months in the
          past). Provide an `end_date` to view day-over-day cumulative cost.'
        in: query
        name: start_date
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]`
          for cost ending this day.'
        in: query
        name: end_date
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get estimated cost across your account
      tags:
      - Usage Metering
  /api/v2/usage/historical_cost:
    get:
      description: 'Get historical cost across multi-org and single root-org accounts.

        Cost data for a given month becomes available no later than the 16th of the
        following month.'
      operationId: GetHistoricalCostByOrg
      parameters:
      - description: String to specify whether cost is broken down at a parent-org
          level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults
          to `summary`.
        in: query
        name: view
        required: false
        schema:
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost beginning this month.'
        in: query
        name: start_month
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]`
          for cost ending this month.'
        in: query
        name: end_month
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get historical cost across your account
      tags:
      - Usage Metering
  /api/v2/usage/hourly_usage:
    get:
      description: Get hourly usage by product family.
      operationId: GetHourlyUsage
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage beginning at this hour.'
        in: query
        name: filter[timestamp][start]
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
          for usage ending **before** this hour.'
        in: query
        name: filter[timestamp][end]
        required: false
        schema:
          format: date-time
          type: string
      - description: 'Comma separated list of product families to retrieve. Available
          families are `all`, `analyzed_logs`,

          `application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,

          `csm_container_enterprise`, `csm_host_enterprise`, `cspm`, `custom_events`,
          `cws`, `dbm`, `fargate`,

          `infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`,
          `iot`,

          `lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `netflow_monitoring`,
          `observability_pipelines`,

          `online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`,
          `sds`, `snmp`,

          `synthetics_api`, `synthetics_browser`, `synthetics_mobile`, `synthetics_parallel_testing`,
          and `timeseries`.

          The following product family has been **deprecated**: `audit_logs`.'
        in: query
        name: filter[product_families]
        required: true
        schema:
          type: string
      - description: Include child org usage in the response. Defaults to false.
        in: query
        name: filter[include_descendants]
        required: false
        schema:
          default: false
          type: boolean
      - description: Include breakdown of usage by subcategories where applicable
          (for product family logs only). Defaults to false.
        in: query
        name: filter[include_breakdown]
        required: false
        schema:
          default: false
          type: boolean
      - description: 'Comma separated list of product family versions to use in the
          format `product_family:version`. For example,

          `infra_hosts:1.0.0`. If this parameter is not used, the API will use the
          latest version of each requested

          product family. Currently all families have one version `1.0.0`.'
        in: query
        name: filter[versions]
        required: false
        schema:
          type: string
      - description: Maximum number of results to return (between 1 and 500) - defaults
          to 500 if limit not specified.
        in: query
        name: page[limit]
        required: false
        schema:
          default: 500
          format: int32
          maximum: 500
          minimum: 1
          type: integer
      - description: List following results with a next_record_id provided in the
          previous query.
        in: query
        name: page[next_record_id]
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage by product family
      tags:
      - Usage Metering
  /api/v2/usage/lambda_traced_invocations:
    get:
      description: 'Get hourly usage for lambda traced invocations.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'
      operationId: GetUsageLambdaTracedInvocations
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaTracedInvocationsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for lambda traced invocations
      tags:
      - Usage Metering
  /api/v2/usage/observability_pipelines:
    get:
      description: 'Get hourly usage for observability pipelines.

        **Note:** hourly usage data for all products is now available in the [Get
        hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)'
      operationId: GetUsageObservabilityPipelines
      parameters:
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage beginning at this hour.'
        in: query
        name: start_hr
        required: true
        schema:
          format: date-time
          type: string
      - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
          for usage ending

          **before** this hour.'
        in: query
        name: end_hr
        required: false
        schema:
          format: date-time
          type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageObservabilityPipelinesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
      - apiKeyAuth: []
        appKeyAuth: []
      - AuthZ:
        - usage_read
      summary: Get hourly usage for observability pipelines
      tags:
      - Usage Metering
security:
- apiKeyAuth: []
  appKeyAuth: []
servers:
- url: https://{subdomain}.{site}
  variables:
    site:
      default: datadoghq.com
      description: The regional site for Datadog customers.
      enum:
      - datadoghq.com
      - us3.datadoghq.com
      - us5.datadoghq.com
      - ap1.datadoghq.com
      - datadoghq.eu
      - ddog-gov.com
    subdomain:
      default: api
      description: The subdomain where the API is deployed.
- url: '{protocol}://{name}'
  variables:
    name:
      default: api.datadoghq.com
      description: Full site DNS name.
    protocol:
      default: https
      description: The protocol for accessing the API.
- url: https://{subdomain}.{site}
  variables:
    site:
      default: datadoghq.com
      description: Any Datadog deployment.
    subdomain:
      default: api
      description: The subdomain where the API is deployed.
tags:
- description: Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters)
    for your organization. You need an API and application key with Admin rights to
    interact with this endpoint.
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/
  name: APM Retention Filters
- description: Search your Audit Logs events over HTTP.
  name: Audit
- description: Workload activity security rules for generating events using the Datadog
    security Agent.
  name: Cloud Workload Security
- description: Configure your Datadog Cloudflare integration directly through the
    Datadog API.
  name: Cloudflare Integration
- description: Configure your Datadog Confluent Cloud integration directly through
    the Datadog API.
  name: Confluent Cloud
- description: 'Interact with your dashboard lists through the API to

    organize, find, and share all of your dashboards with your team and

    organization.'
  name: Dashboard Lists
- description: 'The events service allows you to programmatically post events to the
    event stream

    and fetch events from the event stream. Events are limited to 4000 characters.

    If an event is sent out with a message containing more than 4000 characters, only
    the

    first 4000 characters are displayed.'
  name: Events
- description: Configure your Datadog Fastly integration directly through the Datadog
    API.
  name: Fastly Integration
- description: 'Configure your Datadog-Google Cloud Platform (GCP) integration directly

    through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).'
  externalDocs:
    url: https://docs.datadoghq.com/integrations/google_cloud_platform
  name: GCP Integration
- description: 'The IP allowlist API is used to manage the IP addresses that

    can access the Datadog API and web UI. It does not block

    access to intake APIs or public dashboards.


    This is an enterprise-only feature. Request access by

    contacting Datadog support.'
  name: IP Allowlist
- description: Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics)
    for your organization.
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/logs/logs_to_metrics/
  name: Logs Metrics
- description: 'Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)

    directly through the Datadog API.'
  externalDocs:
    url: https://docs.datadoghq.com/api/latest/opsgenie-integration
  name: Opsgenie Integration
- description: Create, edit, and manage your organizations. Read more about [multi-org
    accounts](https://docs.datadoghq.com/account_management/multi_organization).
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/account_management/multi_organization
  name: Organizations
- description: The processes API allows you to query processes data for your organization.
  name: Processes
- description: 'A restriction policy defines the access control rules for a resource,
    mapping a set of relations

    (such as editor and viewer) to a set of allowed principals (such as roles, teams,
    or users).

    The restriction policy determines who is authorized to perform what actions on
    the resource.'
  name: Restriction Policies
- description: Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics)
    for your organization.
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/tracing/metrics/metrics_namespace/
  name: Spans Metrics
- description: "Datadog Synthetics uses simulated user requests and browser rendering
    to help you ensure uptime,\nidentify regional issues, and track your application
    performance. Datadog Synthetics tests come in\ntwo different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/)\nand
    [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can
    use Datadog\u2019s API to\nmanage both test types programmatically.\n\nFor more
    information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/)."
  name: Synthetics
- description: 'The usage metering API allows you to get hourly, daily, and

    monthly usage across multiple facets of Datadog.

    This API is available to all Pro and Enterprise customers.

    Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).


    **Note**: Usage data is delayed by up to 72 hours from when it was incurred.

    It is retained for 15 months.


    You can retrieve up to 24 hours of hourly usage data for multiple organizations,

    and up to two months of hourly usage data for a single organization in one request.'
  externalDocs:
    description: Find out more at
    url: https://docs.datadoghq.com/account_management/billing/usage_details/
  name: Usage Metering
x-group-parameters: true
