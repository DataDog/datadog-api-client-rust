use serde_with::skip_serializing_none;

#[skip_serializing_none]
#[derive(Clone, Debug, Default, PartialEq, Serialize, Deserialize)]
pub struct {{ name }} {
{%- for attr, schema in model.get("properties", {}).items() %}
{%- set propertyName = attr|variable_name %}
{%- set required = attr in model.required %}
{%- set nullable = schema.get("nullable", False)%}
{%- set dataType = get_type(schema, alternative_name=name + propertyName, render_nullable=nullable, render_option=not required, render_box=True, version=version) %}
    {{ schema.description | block_comment }}
{%- if schema.deprecated %}
	#[deprecated]
{%- endif %}
    #[serde(rename = "{{ attr }}"{% if not required and nullable%}, default, with = "::serde_with::rust::double_option"{% endif %})]
    pub {{propertyName}}: {{dataType}},
{%- endfor %}
}

impl {{ name }} {
    {{ model.description | block_comment }}
    pub fn new({% for attr, schema in model.get("properties", {}).items() if attr in model.required %}{%- set nullable = schema.get("nullable", False)%}{%- set propertyName = attr|variable_name %}{%- set dataType = get_type(schema, alternative_name=name + propertyName, render_nullable=nullable, render_option=False, version=version) %}{%- set nullable = schema.get("nullable", False)%}{{propertyName}}: {{ dataType }}{%- if not loop.last %}, {% endif %}{% endfor %}) -> {{ name }} {
        {{ name }} {
            {%- for attr, schema in model.get("properties", {}).items() %}
            {%- set propertyName = attr|variable_name %}
            {%- set required = attr in model.required %}
            {%- set nullable = schema.get("nullable", False)%}
            {%- set dataType = get_type(schema, alternative_name=name + propertyName, render_nullable=nullable, render_option=not required, render_box=True, version=version) %}
            {%- if attr in model.get("required", []) %}
            {%- if "Box<" in dataType %}
            {{ attr|variable_name }}: Box::new({{ attr|variable_name }}),
            {%- else %}
            {{ attr|variable_name }},
            {%- endif %}
            {%- else %}
            {{ attr|variable_name }}: None,
            {%- endif %}
            {%- endfor %}
        }
    }
}
